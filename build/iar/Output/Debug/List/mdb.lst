###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.2.10312/W32 for ARM       15/Nov/2016  14:53:01
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\ilya\vendicont\arm-periphery\Application\p-types\vending\mdb.c
#    Command line =  
#        C:\ilya\vendicont\arm-periphery\Application\p-types\vending\mdb.c -D
#        STM32F10X_HD -D USE_STDPERIPH_DRIVER -D DEBUG=1 -D _FLASH_PROG -lCN
#        C:\ilya\vendicont\arm-periphery\build\iar\Output\Debug\List --remarks
#        -o C:\ilya\vendicont\arm-periphery\build\iar\Output\Debug\Obj --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M3 -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\ilya\vendicont\arm-periphery\build\iar\..\..\ -I
#        C:\ilya\vendicont\arm-periphery\build\iar\..\..\Inc\ -I
#        C:\ilya\vendicont\arm-periphery\build\iar\..\..\library\CMSIS\Include\
#        -I
#        C:\ilya\vendicont\arm-periphery\build\iar\..\..\library\STM32F10x_StdPeriph_Driver\inc\
#        -I C:\ilya\vendicont\arm-periphery\build\iar\..\..\rtos\embos\iar\inc\
#        -I
#        C:\ilya\vendicont\arm-periphery\build\iar\..\..\Application\p-types\
#        -On --use_c++_inline --require_prototypes
#    List file    =  
#        C:\ilya\vendicont\arm-periphery\build\iar\Output\Debug\List\mdb.lst
#    Object file  =  
#        C:\ilya\vendicont\arm-periphery\build\iar\Output\Debug\Obj\mdb.o
#
###############################################################################

C:\ilya\vendicont\arm-periphery\Application\p-types\vending\mdb.c
      1          #include "stm32f10x.h"
      2          #include "RTOS.h"
      3          #include "BSP.h"
      4          #include "pt-vending.h"
      5          #include "cashless.h"
      6          #include "stdio.h"
      7          #include "stdlib.h"
      8          #include "log.h"
      9          #if defined LCD
     10            #include "lcd_2x16.h"
     11          #endif
     12          #include "spi_comm.h"
     13          
     14          #include "mdb.h"
     15          #include "mdb_sniffer.h"
     16          #include "..\sw_uart.h"
     17          
     18          extern t_fb_desc fb;

   \                                 In section .bss, align 4
     19          t_mdb_mon mdb_mon;
   \                     mdb_mon:
   \   00000000                      DS8 888
     20          
     21          extern OS_Q  fb_evt_q;
     22                 
     23          extern tMdbSniffer sniffer;
     24          
     25          static u8 calc_crc(u16*, u8);
     26          
     27          extern OS_TASK TCB2;
     28          

   \                                 In section .text, align 2, keep-with-next
     29          void mdb_evt_s_rx()
     30          {
     31            //int i;
     32            //int len = 0;
     33            //u8 bLog = 0;
     34            //t_mdb_session *d = 0;
     35            
     36          #if 0
     37            sprintf( buf,"[%.2x]", fbSlaveRxBuf[ 0 ]);
     38            goto_cursor( 0x4C );
     39            lcd_print( buf );
     40          #endif
     41             
     42          #if defined ( MDB_SNIFFER )
     43            //sniffer_s_rx();
     44          #endif  
     45             
     46          #if 0  
     47             switch ( fb.m.rx[ 0 ] & 0xFF )
     48             {
     49             case MDB_CMD_CHG_TUBE_STATUS:  //0x0A
     50                d = &mdb_mon.sessions[ 0 ];
     51                break;
     52             case MDB_CMD_CHG_COIN_TYPE:    //0x0C
     53                d = &mdb_mon.sessions[ 1 ];
     54                if ( fb.m.rx_size == 6 ) {
     55                   u32 evtType = 0;
     56          
     57                   if ( fb.m.rx[ 3 ] == 0xFF && fb.m.rx[ 4 ] == 0xFF
     58                      && d->rqst[ 3 ] == 0x00 && d->rqst[ 4 ] == 0x00 ) {
     59                      evtType = eFbEvtType_DoorOpen;
     60                      OS_Q_Put( &fb_evt_q, &evtType, sizeof( evtType ) );
     61          #if 0
     62                      log( "#1:%d %.2X %.2X %.2X %.2X %.2X %.2X "
     63                          , d->rqst_size
     64                          , d->rqst[ 0 ], d->rqst[ 1 ], d->rqst[ 2 ], d->rqst[ 3 ], d->rqst[ 4 ], d->rqst[ 5 ] );
     65          #endif
     66                      log( "fb: door open\r\n" );
     67          
     68                   } else if ( fb.m.rx[ 3 ] == 0x00 && fb.m.rx[ 4 ] == 0x00
     69                      && d->rqst[ 3 ] == 0xFF && d->rqst[ 4 ] == 0xFF ) {
     70                      evtType = eFbEvtType_DoorClose;
     71                      OS_Q_Put( &fb_evt_q, &evtType, sizeof( evtType ) );
     72                      log( "fb: door closed\r\n" );
     73                   }
     74          
     75                }
     76          #if 0
     77                log( "#2:%d %.2X %.2X %.2X %.2X %.2X %.2X\r\n"
     78                    , d->rqst_size
     79                    , d->rqst[ 0 ], d->rqst[ 1 ], d->rqst[ 2 ], d->rqst[ 3 ], d->rqst[ 4 ], d->rqst[ 5 ] );
     80          
     81          #endif
     82          #if 0
     83                log( "#3:%d %.2X %.2X %.2X %.2X %.2X %.2X\r\n"
     84                    , fb.m.rx_size
     85                    , fb.m.rx[ 0 ], fb.m.rx[ 1 ], fb.m.rx[ 2 ], fb.m.rx[ 3 ], fb.m.rx[ 4 ], fb.m.rx[ 5 ] );
     86                bLog = 1;
     87          #endif
     88                break;
     89              case MDB_CMD_CHG_POLL:         //0x0B
     90                d = &mdb_mon.sessions[ 2 ];
     91                break;
     92              case MDB_CMD_BV_POLL:          //0x33
     93                d = &mdb_mon.sessions[ 3 ];
     94                break;
     95              case MDB_CMD_BV_STACKER:       //0x36
     96                d = &mdb_mon.sessions[ 4 ];
     97                break;
     98              case MDB_CMD_BV_BILLTYPE:      //0x34
     99                d = &mdb_mon.sessions[ 5 ];
    100                break;
    101              default:
    102                bLog = 1;
    103                break;
    104            }
    105          #if 1
    106             if ( fb.en_log && !bLog && d ) {
    107                u8 ms = 0;
    108                u8 mc = 0;
    109                ms = d->rqst_size != fb.m.rx_size;
    110                mc = memcmp( d->rqst, fb.m.rx, fb.m.rx_size * 2 );
    111          #if 0
    112                if ( fb.m.rx[ 0 ] == 0x10C ) {
    113                   log("ms=%d,%d,%d\r\n", ms, d->rqst_size, fb.m.rx_size);
    114                   log("mc=%d\r\n", mc);
    115                   bLog = 1;
    116                }
    117          #endif
    118                if ( ms || mc ) {
    119          #if 1
    120                   if( ms && fb.en_log )
    121                      log("ms(%d<>%d) ", d->rqst_size, fb.m.rx_size);
    122                   if ( mc && fb.en_log )
    123                      log("mc " );
    124          #endif
    125                   bLog = 1;
    126          
    127                }
    128          
    129                ms = d->rply_size != fb.s.rx_size;
    130                mc = memcmp( d->rply, fb.s.rx, fb.s.rx_size * 2 );
    131                if ( ms || mc ) {
    132          #if 0
    133                   if( ms && fb.en_log )
    134                      log("ss ");
    135                   if ( mc && fb.en_log )
    136                      log("sc ");
    137          #endif
    138                   bLog = 1;
    139                }
    140             }
    141          #endif
    142             if ( fb.en_log && bLog ) {
    143          
    144                log( "fbm: " );
    145                for ( i = 0; i < fb.m.rx_size; i++ ) {
    146                   log( "%.2x ", fb.m.rx[ i ] );
    147                }
    148                log( "\r\n" );
    149          
    150                if ( d ) {
    151                   log( "_bm: " );
    152                   for ( i = 0; i < d->rqst_size; i++ ) {
    153                      log( "%.2x ", d->rqst[ i ] );
    154                   }
    155                   log( "\r\n" );
    156                }
    157          
    158                log( "fbs: " );
    159                for ( i = 0; i < fb.s.rx_size; i++ ) {
    160                   log( "%.2x ", fb.s.rx[ i ] );
    161                }
    162                log( "\r\n" );
    163             }
    164          
    165             if ( d ) {
    166                len = ( fb.m.rx_size < MDB_MAX_LEN ) ? fb.m.rx_size : MDB_MAX_LEN;
    167                memcpy( d->rqst, fb.m.rx, len * 2 );
    168                d->rqst_size = len;
    169          
    170                len = ( fb.s.rx_size < MDB_MAX_LEN ) ? fb.s.rx_size : MDB_MAX_LEN;
    171                memcpy( d->rply, fb.s.rx, len * 2 );
    172                d->rply_size = len;
    173             }
    174          #endif   
    175             fb.s.rx_size = 0;
   \                     mdb_evt_s_rx: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0x.... 0x....      LDR.W    R1,??DataTable1
   \   00000006   0xF881 0x01BC      STRB     R0,[R1, #+444]
    176          }
   \   0000000A   0x4770             BX       LR               ;; return
    177          

   \                                 In section .text, align 2, keep-with-next
    178          void mdb_evt_m_rx()
    179          {      
   \                     mdb_evt_m_rx: (+1)
   \   00000000   0xE92D 0x43F0      PUSH     {R4-R9,LR}
   \   00000004   0xB093             SUB      SP,SP,#+76
    180            static u8 just_reset = 1;
    181            static u8 tr = 1;
    182            
    183            if ( !fb.m.enabled || fb.m.rx_size == 0 )
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable1
   \   0000000A   0x7B00             LDRB     R0,[R0, #+12]
   \   0000000C   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xD005             BEQ.N    ??mdb_evt_m_rx_0
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable1
   \   00000018   0xF890 0x00AC      LDRB     R0,[R0, #+172]
   \   0000001C   0x2800             CMP      R0,#+0
   \   0000001E   0xD100             BNE.N    ??mdb_evt_m_rx_1
    184            {
    185              return;
   \                     ??mdb_evt_m_rx_0: (+1)
   \   00000020   0xE3D8             B.N      ??mdb_evt_m_rx_2
    186            }
    187            
    188            u8 n = 0;
   \                     ??mdb_evt_m_rx_1: (+1)
   \   00000022   0x2400             MOVS     R4,#+0
    189            u16 b;
    190            u16 buf[ MDB_MAX_LEN ];  
    191            
    192            u8 cashless1 = ( ( fb.m.rx[ 0 ] & 0x1F8 ) == 0x110 );
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable1
   \   00000028   0xF8B0 0x00AE      LDRH     R0,[R0, #+174]
   \   0000002C   0xF410 0x70FC      ANDS     R0,R0,#0x1F8
   \   00000030   0xF5B0 0x7F88      CMP      R0,#+272
   \   00000034   0xD101             BNE.N    ??mdb_evt_m_rx_3
   \   00000036   0x2601             MOVS     R6,#+1
   \   00000038   0xE000             B.N      ??mdb_evt_m_rx_4
   \                     ??mdb_evt_m_rx_3: (+1)
   \   0000003A   0x2600             MOVS     R6,#+0
    193            u8 cashless2 = ( ( fb.m.rx[ 0 ] & 0x1F8 ) == 0x160 );
   \                     ??mdb_evt_m_rx_4: (+1)
   \   0000003C   0x.... 0x....      LDR.W    R0,??DataTable1
   \   00000040   0xF8B0 0x00AE      LDRH     R0,[R0, #+174]
   \   00000044   0xF410 0x70FC      ANDS     R0,R0,#0x1F8
   \   00000048   0xF5B0 0x7FB0      CMP      R0,#+352
   \   0000004C   0xD101             BNE.N    ??mdb_evt_m_rx_5
   \   0000004E   0x2701             MOVS     R7,#+1
   \   00000050   0xE000             B.N      ??mdb_evt_m_rx_6
   \                     ??mdb_evt_m_rx_5: (+1)
   \   00000052   0x2700             MOVS     R7,#+0
    194            u8 coin_changer = ( ( fb.m.rx[ 0 ] & 0x1F8 ) == 0x108 );
   \                     ??mdb_evt_m_rx_6: (+1)
   \   00000054   0x.... 0x....      LDR.W    R0,??DataTable1
   \   00000058   0xF8B0 0x00AE      LDRH     R0,[R0, #+174]
   \   0000005C   0xF410 0x70FC      ANDS     R0,R0,#0x1F8
   \   00000060   0xF5B0 0x7F84      CMP      R0,#+264
   \   00000064   0xD102             BNE.N    ??mdb_evt_m_rx_7
   \   00000066   0xF05F 0x0801      MOVS     R8,#+1
   \   0000006A   0xE001             B.N      ??mdb_evt_m_rx_8
   \                     ??mdb_evt_m_rx_7: (+1)
   \   0000006C   0xF05F 0x0800      MOVS     R8,#+0
    195            //u8 coin_hopper1 = ( ( fb.m.rx[ 0 ] & 0x1F8 ) == 0x158 );  
    196            //u8 coin_hopper2 = ( ( fb.m.rx[ 0 ] & 0x1F8 ) == 0x170 );
    197            //u8 bill_validator = ( ( fb.m.rx[ 0 ] & 0x1F8 ) == 0x130 ); 
    198            u8 usd = ( ( fb.m.rx[ 0 ] & 0x1F8 ) == 0x140 ) 
    199              || ( ( fb.m.rx[ 0 ] & 0x1F8 ) == 0x148 )
    200              || ( ( fb.m.rx[ 0 ] & 0x1F8 ) == 0x150 );  
   \                     ??mdb_evt_m_rx_8: (+1)
   \   00000070   0x.... 0x....      LDR.W    R0,??DataTable1
   \   00000074   0xF8B0 0x00AE      LDRH     R0,[R0, #+174]
   \   00000078   0xF410 0x70FC      ANDS     R0,R0,#0x1F8
   \   0000007C   0xF5B0 0x7FA0      CMP      R0,#+320
   \   00000080   0xD011             BEQ.N    ??mdb_evt_m_rx_9
   \   00000082   0x.... 0x....      LDR.W    R0,??DataTable1
   \   00000086   0xF8B0 0x00AE      LDRH     R0,[R0, #+174]
   \   0000008A   0xF410 0x70FC      ANDS     R0,R0,#0x1F8
   \   0000008E   0xF5B0 0x7FA4      CMP      R0,#+328
   \   00000092   0xD008             BEQ.N    ??mdb_evt_m_rx_9
   \   00000094   0x.... 0x....      LDR.W    R0,??DataTable1
   \   00000098   0xF8B0 0x00AE      LDRH     R0,[R0, #+174]
   \   0000009C   0xF410 0x70FC      ANDS     R0,R0,#0x1F8
   \   000000A0   0xF5B0 0x7FA8      CMP      R0,#+336
   \   000000A4   0xD102             BNE.N    ??mdb_evt_m_rx_10
   \                     ??mdb_evt_m_rx_9: (+1)
   \   000000A6   0xF05F 0x0901      MOVS     R9,#+1
   \   000000AA   0xE001             B.N      ??mdb_evt_m_rx_11
   \                     ??mdb_evt_m_rx_10: (+1)
   \   000000AC   0xF05F 0x0900      MOVS     R9,#+0
    201            
    202            if ( usd || cashless1 || cashless2 )
   \                     ??mdb_evt_m_rx_11: (+1)
   \   000000B0   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   000000B4   0xF1B9 0x0F00      CMP      R9,#+0
   \   000000B8   0xD105             BNE.N    ??mdb_evt_m_rx_12
   \   000000BA   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000BC   0x2E00             CMP      R6,#+0
   \   000000BE   0xD102             BNE.N    ??mdb_evt_m_rx_12
   \   000000C0   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000000C2   0x2F00             CMP      R7,#+0
   \   000000C4   0xD003             BEQ.N    ??mdb_evt_m_rx_13
    203            {
    204              tr = 1;
   \                     ??mdb_evt_m_rx_12: (+1)
   \   000000C6   0x2001             MOVS     R0,#+1
   \   000000C8   0x.... 0x....      LDR.W    R1,??DataTable1_1
   \   000000CC   0x7008             STRB     R0,[R1, #+0]
    205            }
    206             
    207            if ( coin_changer )
   \                     ??mdb_evt_m_rx_13: (+1)
   \   000000CE   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000000D2   0xF1B8 0x0F00      CMP      R8,#+0
   \   000000D6   0xD003             BEQ.N    ??mdb_evt_m_rx_14
    208            {    
    209              tr = 1;
   \   000000D8   0x2001             MOVS     R0,#+1
   \   000000DA   0x.... 0x....      LDR.W    R1,??DataTable1_1
   \   000000DE   0x7008             STRB     R0,[R1, #+0]
    210            }
    211          #if 0  
    212            switch( fb.m.rx[ 0 ] & 0x1F8 )
    213            {
    214              case ( MDB_ADR_CASHLESS1 | 0x100 ):
    215                n = cashless_mdb_evt_rx(buf);
    216                break;
    217            }
    218          #endif
    219            
    220          #if defined ( MDB_PROXY ) && ( MDB_PROXY == BILL_VALIDATOR )  
    221            if ( bill_validator )
    222            {
    223                b = fb.m.rx[ fb.m.rx_size - 1 ];
    224                buf[ n++ ] = b;      
    225                fb_s_tx( buf, n );
    226                return;
    227            }
    228          #endif
    229            
    230          #if defined ( MDB_CASHLESS1 )  
    231            
    232          #endif
    233            
    234            switch(  fb.m.rx[ 0 ] )
   \                     ??mdb_evt_m_rx_14: (+1)
   \   000000E0   0x.... 0x....      LDR.W    R0,??DataTable1
   \   000000E4   0xF8B0 0x00AE      LDRH     R0,[R0, #+174]
   \   000000E8   0xF44F 0x7188      MOV      R1,#+272
   \   000000EC   0x1A40             SUBS     R0,R0,R1
   \   000000EE   0xD011             BEQ.N    ??mdb_evt_m_rx_15
   \   000000F0   0x1E40             SUBS     R0,R0,#+1
   \   000000F2   0xF000 0x81C2      BEQ.W    ??mdb_evt_m_rx_16
   \   000000F6   0x1E40             SUBS     R0,R0,#+1
   \   000000F8   0xD01E             BEQ.N    ??mdb_evt_m_rx_17
   \   000000FA   0x1E40             SUBS     R0,R0,#+1
   \   000000FC   0xF000 0x821A      BEQ.W    ??mdb_evt_m_rx_18
   \   00000100   0x1E40             SUBS     R0,R0,#+1
   \   00000102   0xF000 0x831E      BEQ.W    ??mdb_evt_m_rx_19
   \   00000106   0x1E40             SUBS     R0,R0,#+1
   \   00000108   0xF000 0x82D3      BEQ.W    ??mdb_evt_m_rx_20
   \   0000010C   0x1E80             SUBS     R0,R0,#+2
   \   0000010E   0xF000 0x8335      BEQ.W    ??mdb_evt_m_rx_21
   \   00000112   0xE356             B.N      ??mdb_evt_m_rx_22
    235            {        
    236          #if defined ( MDB_COIN_CHANGER )
    237              case 0x108:
    238                if ( fb.m.rx_size >= 2 )
    239                {
    240                  buf[ n++ ] = 0x100;
    241                  fb.coin_acceptor.just_reset = 1;
    242                }
    243                break;
    244              
    245              case 0x10B:
    246                if ( fb.m.rx_size >= 2 )
    247                {
    248                  if ( fb.coin_acceptor.power_on )
    249                  {
    250                    fb.coin_acceptor.power_on = 0;
    251                    buf[ n++ ] = 0x0B;
    252                    buf[ n++ ] = 0x10B;          
    253                  }        
    254                  else if ( fb.coin_acceptor.just_reset )
    255                  {
    256                    fb.coin_acceptor.just_reset = 0;
    257                    buf[ n++ ] = 0x00;      
    258                    buf[ n++ ] = 0x100;
    259                  }
    260                  else
    261                  {
    262                    buf[ n++ ] = 0x100;
    263                  }
    264                }
    265                break;
    266                
    267              case 0x109: 
    268                if ( fb.m.rx_size >= 2 )
    269                {
    270                    buf[ n++ ] = 0x02; //level
    271                    buf[ n++ ] = 0x11; //country code
    272                    buf[ n++ ] = 0x52;
    273                    buf[ n++ ] = 0x05; //scaling
    274                    buf[ n++ ] = 0x00; //decimal places
    275                    buf[ n++ ] = 0x00; //coin type routing
    276                    buf[ n++ ] = 0x3E;
    277                    buf[ n++ ] = 0x01; //coin type credit
    278                    buf[ n++ ] = 0x02;          
    279                    buf[ n++ ] = 0x0A;          
    280                    buf[ n++ ] = 0x14;          
    281                    buf[ n++ ] = 0x14;
    282                    buf[ n++ ] = 0x64;          
    283                    b = calc_crc(buf, n);
    284                    buf[ n++ ] = 0x100 | b;
    285                }
    286                break;      
    287                
    288              case 0x10F: 
    289                if ( fb.m.rx_size >= 3 )
    290                {
    291                  if (  fb.m.rx[ 1 ] == 0x00 )
    292                  {        
    293                    buf[ n++ ] = 0x4E;
    294                    buf[ n++ ] = 0x52;
    295                    buf[ n++ ] = 0x49;
    296                    buf[ n++ ] = 0x31;
    297                    buf[ n++ ] = 0x30;
    298                    buf[ n++ ] = 0x31;
    299                    buf[ n++ ] = 0x30;
    300                    buf[ n++ ] = 0x34;
    301                    buf[ n++ ] = 0x37;
    302                    buf[ n++ ] = 0x32;
    303                    buf[ n++ ] = 0x34;
    304                    buf[ n++ ] = 0x2D;
    305                    buf[ n++ ] = 0x31;
    306                    buf[ n++ ] = 0x35;
    307                    buf[ n++ ] = 0x36;
    308                    buf[ n++ ] = 0x43;
    309                    buf[ n++ ] = 0x32;
    310                    buf[ n++ ] = 0x20;
    311                    buf[ n++ ] = 0x76;
    312                    buf[ n++ ] = 0x36;
    313                    buf[ n++ ] = 0x20;
    314                    buf[ n++ ] = 0x45;
    315                    buf[ n++ ] = 0x20;
    316                    buf[ n++ ] = 0x20;
    317                    buf[ n++ ] = 0x33;
    318                    buf[ n++ ] = 0x37;
    319                    buf[ n++ ] = 0x37;
    320                    buf[ n++ ] = 0x09;
    321                    buf[ n++ ] = 0x00;
    322                    buf[ n++ ] = 0x00;
    323                    buf[ n++ ] = 0x00;
    324                    buf[ n++ ] = 0x00;
    325                    buf[ n++ ] = 0x0F;
    326                    b = calc_crc(buf, n);
    327                    buf[ n++ ] = 0x100 | b;
    328                  }
    329                  else if (  fb.m.rx[ 1 ] == 0x01 )
    330                  {//feature enable
    331                    buf[ n++ ] = 0x100;
    332                  }
    333                }
    334                break;      
    335          
    336              case 0x10A: 
    337                if ( fb.m.rx_size >= 2 )
    338                {
    339                  buf[ n++ ] = 0x00;
    340                  buf[ n++ ] = 0x04;
    341                  buf[ n++ ] = 0x00;
    342                  buf[ n++ ] = 0x07;
    343                  buf[ n++ ] = 0x11;
    344                  buf[ n++ ] = 0x04;
    345                  buf[ n++ ] = 0x1C;
    346                  buf[ n++ ] = 0x10;
    347                  buf[ n++ ] = 0x00;
    348                  buf[ n++ ] = 0x00;
    349                  buf[ n++ ] = 0x00;
    350                  buf[ n++ ] = 0x00;
    351                  buf[ n++ ] = 0x00;
    352                  buf[ n++ ] = 0x00;
    353                  buf[ n++ ] = 0x00;
    354                  buf[ n++ ] = 0x00;
    355                  buf[ n++ ] = 0x00;
    356                  buf[ n++ ] = 0x00;
    357                  b = calc_crc(buf, n);
    358                  buf[ n++ ] = 0x100 | b;        
    359                }
    360                break;
    361                
    362              case 0x10C: 
    363                if ( fb.m.rx_size >= 6 )
    364                {
    365                  buf[ n++ ] = 0x100;        
    366                }
    367                break;
    368          #endif
    369                
    370          #if defined ( MDB_CASHLESS1 )
    371              case 0x110:
    372              //case 0x160:     
    373                if ( fb.m.rx_size >= 2 )
   \                     ??mdb_evt_m_rx_15: (+1)
   \   00000114   0x.... 0x....      LDR.W    R0,??DataTable1
   \   00000118   0xF890 0x00AC      LDRB     R0,[R0, #+172]
   \   0000011C   0x2802             CMP      R0,#+2
   \   0000011E   0xDB0A             BLT.N    ??mdb_evt_m_rx_23
    374                {
    375                  buf[ n++ ] = 0x100;
   \   00000120   0xF44F 0x7080      MOV      R0,#+256
   \   00000124   0x4669             MOV      R1,SP
   \   00000126   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000128   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   0000012C   0x1C64             ADDS     R4,R4,#+1
    376                  just_reset = 1;
   \   0000012E   0x2001             MOVS     R0,#+1
   \   00000130   0x.... 0x....      LDR.W    R1,??DataTable1_2
   \   00000134   0x7008             STRB     R0,[R1, #+0]
    377                }
    378                break;
   \                     ??mdb_evt_m_rx_23: (+1)
   \   00000136   0xE344             B.N      ??mdb_evt_m_rx_22
    379                
    380              case 0x112:
    381              //case 0x162:      
    382                if ( fb.m.rx_size >= 2 )
   \                     ??mdb_evt_m_rx_17: (+1)
   \   00000138   0x.... 0x....      LDR.W    R0,??DataTable1
   \   0000013C   0xF890 0x00AC      LDRB     R0,[R0, #+172]
   \   00000140   0x2802             CMP      R0,#+2
   \   00000142   0xF2C0 0x8199      BLT.W    ??mdb_evt_m_rx_24
    383                {
    384                  if ( just_reset )
   \   00000146   0x.... 0x....      LDR.W    R0,??DataTable1_2
   \   0000014A   0x7800             LDRB     R0,[R0, #+0]
   \   0000014C   0x2800             CMP      R0,#+0
   \   0000014E   0xD011             BEQ.N    ??mdb_evt_m_rx_25
    385                  {
    386                    just_reset = 0;
   \   00000150   0x2000             MOVS     R0,#+0
   \   00000152   0x.... 0x....      LDR.W    R1,??DataTable1_2
   \   00000156   0x7008             STRB     R0,[R1, #+0]
    387                    buf[ n++ ] = 0x00;      
   \   00000158   0x2000             MOVS     R0,#+0
   \   0000015A   0x4669             MOV      R1,SP
   \   0000015C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000015E   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   00000162   0x1C64             ADDS     R4,R4,#+1
    388                    buf[ n++ ] = 0x100;        
   \   00000164   0xF44F 0x7080      MOV      R0,#+256
   \   00000168   0x4669             MOV      R1,SP
   \   0000016A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000016C   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   00000170   0x1C64             ADDS     R4,R4,#+1
   \   00000172   0xE181             B.N      ??mdb_evt_m_rx_24
    389                  }
    390                  else if ( fb.cashless.display_tr )
   \                     ??mdb_evt_m_rx_25: (+1)
   \   00000174   0x.... 0x....      LDR.W    R0,??DataTable1
   \   00000178   0xF890 0x02C0      LDRB     R0,[R0, #+704]
   \   0000017C   0xF3C0 0x0040      UBFX     R0,R0,#+1,#+1
   \   00000180   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000182   0x2800             CMP      R0,#+0
   \   00000184   0xF000 0x80E4      BEQ.W    ??mdb_evt_m_rx_26
    391                  {
    392                    fb.cashless.display_tr = 0;
   \   00000188   0x.... 0x....      LDR.W    R0,??DataTable1
   \   0000018C   0xF890 0x02C0      LDRB     R0,[R0, #+704]
   \   00000190   0xF010 0x00FD      ANDS     R0,R0,#0xFD
   \   00000194   0x.... 0x....      LDR.W    R1,??DataTable1
   \   00000198   0xF881 0x02C0      STRB     R0,[R1, #+704]
    393                    buf[ n++ ] = 0x02;
   \   0000019C   0x2002             MOVS     R0,#+2
   \   0000019E   0x4669             MOV      R1,SP
   \   000001A0   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000001A2   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000001A6   0x1C64             ADDS     R4,R4,#+1
    394                    buf[ n++ ] = 0x80;
   \   000001A8   0x2080             MOVS     R0,#+128
   \   000001AA   0x4669             MOV      R1,SP
   \   000001AC   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000001AE   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000001B2   0x1C64             ADDS     R4,R4,#+1
    395                    buf[ n++ ] = 'H';
   \   000001B4   0x2048             MOVS     R0,#+72
   \   000001B6   0x4669             MOV      R1,SP
   \   000001B8   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000001BA   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000001BE   0x1C64             ADDS     R4,R4,#+1
    396                    buf[ n++ ] = 'o';
   \   000001C0   0x206F             MOVS     R0,#+111
   \   000001C2   0x4669             MOV      R1,SP
   \   000001C4   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000001C6   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000001CA   0x1C64             ADDS     R4,R4,#+1
    397                    buf[ n++ ] = 'l';
   \   000001CC   0x206C             MOVS     R0,#+108
   \   000001CE   0x4669             MOV      R1,SP
   \   000001D0   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000001D2   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000001D6   0x1C64             ADDS     R4,R4,#+1
    398                    buf[ n++ ] = 'a';
   \   000001D8   0x2061             MOVS     R0,#+97
   \   000001DA   0x4669             MOV      R1,SP
   \   000001DC   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000001DE   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000001E2   0x1C64             ADDS     R4,R4,#+1
    399                    buf[ n++ ] = ' ';          
   \   000001E4   0x2020             MOVS     R0,#+32
   \   000001E6   0x4669             MOV      R1,SP
   \   000001E8   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000001EA   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000001EE   0x1C64             ADDS     R4,R4,#+1
    400                    buf[ n++ ] = 'D';
   \   000001F0   0x2044             MOVS     R0,#+68
   \   000001F2   0x4669             MOV      R1,SP
   \   000001F4   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000001F6   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000001FA   0x1C64             ADDS     R4,R4,#+1
    401                    buf[ n++ ] = 'a';
   \   000001FC   0x2061             MOVS     R0,#+97
   \   000001FE   0x4669             MOV      R1,SP
   \   00000200   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000202   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   00000206   0x1C64             ADDS     R4,R4,#+1
    402                    buf[ n++ ] = 'n';
   \   00000208   0x206E             MOVS     R0,#+110
   \   0000020A   0x4669             MOV      R1,SP
   \   0000020C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000020E   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   00000212   0x1C64             ADDS     R4,R4,#+1
    403                    buf[ n++ ] = 'i';
   \   00000214   0x2069             MOVS     R0,#+105
   \   00000216   0x4669             MOV      R1,SP
   \   00000218   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000021A   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   0000021E   0x1C64             ADDS     R4,R4,#+1
    404                    buf[ n++ ] = 'e';
   \   00000220   0x2065             MOVS     R0,#+101
   \   00000222   0x4669             MOV      R1,SP
   \   00000224   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000226   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   0000022A   0x1C64             ADDS     R4,R4,#+1
    405                    buf[ n++ ] = 'l';
   \   0000022C   0x206C             MOVS     R0,#+108
   \   0000022E   0x4669             MOV      R1,SP
   \   00000230   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000232   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   00000236   0x1C64             ADDS     R4,R4,#+1
    406                    buf[ n++ ] = '!';
   \   00000238   0x2021             MOVS     R0,#+33
   \   0000023A   0x4669             MOV      R1,SP
   \   0000023C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000023E   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   00000242   0x1C64             ADDS     R4,R4,#+1
    407                    buf[ n++ ] = '!';          
   \   00000244   0x2021             MOVS     R0,#+33
   \   00000246   0x4669             MOV      R1,SP
   \   00000248   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000024A   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   0000024E   0x1C64             ADDS     R4,R4,#+1
    408                    buf[ n++ ] = '!';          
   \   00000250   0x2021             MOVS     R0,#+33
   \   00000252   0x4669             MOV      R1,SP
   \   00000254   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000256   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   0000025A   0x1C64             ADDS     R4,R4,#+1
    409                    buf[ n++ ] = '!';          
   \   0000025C   0x2021             MOVS     R0,#+33
   \   0000025E   0x4669             MOV      R1,SP
   \   00000260   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000262   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   00000266   0x1C64             ADDS     R4,R4,#+1
    410                    buf[ n++ ] = '!'; 
   \   00000268   0x2021             MOVS     R0,#+33
   \   0000026A   0x4669             MOV      R1,SP
   \   0000026C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000026E   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   00000272   0x1C64             ADDS     R4,R4,#+1
    411                    buf[ n++ ] = 'H';
   \   00000274   0x2048             MOVS     R0,#+72
   \   00000276   0x4669             MOV      R1,SP
   \   00000278   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000027A   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   0000027E   0x1C64             ADDS     R4,R4,#+1
    412                    buf[ n++ ] = 'o';
   \   00000280   0x206F             MOVS     R0,#+111
   \   00000282   0x4669             MOV      R1,SP
   \   00000284   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000286   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   0000028A   0x1C64             ADDS     R4,R4,#+1
    413                    buf[ n++ ] = 'l';
   \   0000028C   0x206C             MOVS     R0,#+108
   \   0000028E   0x4669             MOV      R1,SP
   \   00000290   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000292   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   00000296   0x1C64             ADDS     R4,R4,#+1
    414                    buf[ n++ ] = 'a';
   \   00000298   0x2061             MOVS     R0,#+97
   \   0000029A   0x4669             MOV      R1,SP
   \   0000029C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000029E   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000002A2   0x1C64             ADDS     R4,R4,#+1
    415                    buf[ n++ ] = ' ';          
   \   000002A4   0x2020             MOVS     R0,#+32
   \   000002A6   0x4669             MOV      R1,SP
   \   000002A8   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000002AA   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000002AE   0x1C64             ADDS     R4,R4,#+1
    416                    buf[ n++ ] = 'A';
   \   000002B0   0x2041             MOVS     R0,#+65
   \   000002B2   0x4669             MOV      R1,SP
   \   000002B4   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000002B6   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000002BA   0x1C64             ADDS     R4,R4,#+1
    417                    buf[ n++ ] = 'l';
   \   000002BC   0x206C             MOVS     R0,#+108
   \   000002BE   0x4669             MOV      R1,SP
   \   000002C0   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000002C2   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000002C6   0x1C64             ADDS     R4,R4,#+1
    418                    buf[ n++ ] = 'v';
   \   000002C8   0x2076             MOVS     R0,#+118
   \   000002CA   0x4669             MOV      R1,SP
   \   000002CC   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000002CE   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000002D2   0x1C64             ADDS     R4,R4,#+1
    419                    buf[ n++ ] = 'a';
   \   000002D4   0x2061             MOVS     R0,#+97
   \   000002D6   0x4669             MOV      R1,SP
   \   000002D8   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000002DA   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000002DE   0x1C64             ADDS     R4,R4,#+1
    420                    buf[ n++ ] = 'r';
   \   000002E0   0x2072             MOVS     R0,#+114
   \   000002E2   0x4669             MOV      R1,SP
   \   000002E4   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000002E6   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000002EA   0x1C64             ADDS     R4,R4,#+1
    421                    buf[ n++ ] = 'o';
   \   000002EC   0x206F             MOVS     R0,#+111
   \   000002EE   0x4669             MOV      R1,SP
   \   000002F0   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000002F2   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000002F6   0x1C64             ADDS     R4,R4,#+1
    422                    buf[ n++ ] = '!';
   \   000002F8   0x2021             MOVS     R0,#+33
   \   000002FA   0x4669             MOV      R1,SP
   \   000002FC   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000002FE   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   00000302   0x1C64             ADDS     R4,R4,#+1
    423                    buf[ n++ ] = '!';          
   \   00000304   0x2021             MOVS     R0,#+33
   \   00000306   0x4669             MOV      R1,SP
   \   00000308   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000030A   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   0000030E   0x1C64             ADDS     R4,R4,#+1
    424                    buf[ n++ ] = '!';          
   \   00000310   0x2021             MOVS     R0,#+33
   \   00000312   0x4669             MOV      R1,SP
   \   00000314   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000316   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   0000031A   0x1C64             ADDS     R4,R4,#+1
    425                    buf[ n++ ] = '!';          
   \   0000031C   0x2021             MOVS     R0,#+33
   \   0000031E   0x4669             MOV      R1,SP
   \   00000320   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000322   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   00000326   0x1C64             ADDS     R4,R4,#+1
    426                    buf[ n++ ] = '!'; 
   \   00000328   0x2021             MOVS     R0,#+33
   \   0000032A   0x4669             MOV      R1,SP
   \   0000032C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000032E   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   00000332   0x1C64             ADDS     R4,R4,#+1
    427          /*          
    428                    for ( int i = n ; i < 32 + 2; i++ )
    429                    {
    430                      buf[ n++ ] = '+'; 
    431                    }
    432          */          
    433                    b = calc_crc(buf, n);
   \   00000334   0x0021             MOVS     R1,R4
   \   00000336   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000338   0x4668             MOV      R0,SP
   \   0000033A   0x.... 0x....      BL       calc_crc
   \   0000033E   0x0005             MOVS     R5,R0
    434                    buf[ n++ ] = 0x100 | b;
   \   00000340   0xF455 0x7080      ORRS     R0,R5,#0x100
   \   00000344   0x4669             MOV      R1,SP
   \   00000346   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000348   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   0000034C   0x1C64             ADDS     R4,R4,#+1
   \   0000034E   0xE093             B.N      ??mdb_evt_m_rx_24
    435                  }
    436                  else if ( fb.cashless.begin_session_tr )
   \                     ??mdb_evt_m_rx_26: (+1)
   \   00000350   0x.... 0x....      LDR.W    R0,??DataTable1
   \   00000354   0xF890 0x02C0      LDRB     R0,[R0, #+704]
   \   00000358   0xF3C0 0x0080      UBFX     R0,R0,#+2,#+1
   \   0000035C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000035E   0x2800             CMP      R0,#+0
   \   00000360   0xD05C             BEQ.N    ??mdb_evt_m_rx_27
    437                  {
    438                    fb.cashless.begin_session_tr = 0;
   \   00000362   0x.... 0x....      LDR.W    R0,??DataTable1
   \   00000366   0xF890 0x02C0      LDRB     R0,[R0, #+704]
   \   0000036A   0xF010 0x00FB      ANDS     R0,R0,#0xFB
   \   0000036E   0x.... 0x....      LDR.W    R1,??DataTable1
   \   00000372   0xF881 0x02C0      STRB     R0,[R1, #+704]
    439                    buf[ n++ ] = 0x03;
   \   00000376   0x2003             MOVS     R0,#+3
   \   00000378   0x4669             MOV      R1,SP
   \   0000037A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000037C   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   00000380   0x1C64             ADDS     R4,R4,#+1
    440                    buf[ n++ ] = ( fb.cashless.funds_available >> 8) & 0xFF;
   \   00000382   0x.... 0x....      LDR.W    R0,??DataTable1
   \   00000386   0xF8D0 0x02C4      LDR      R0,[R0, #+708]
   \   0000038A   0xF3C0 0x2007      UBFX     R0,R0,#+8,#+8
   \   0000038E   0x4669             MOV      R1,SP
   \   00000390   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000392   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   00000396   0x1C64             ADDS     R4,R4,#+1
    441                    buf[ n++ ] = fb.cashless.funds_available  & 0xFF;
   \   00000398   0x.... 0x....      LDR.W    R0,??DataTable1
   \   0000039C   0xF890 0x02C4      LDRB     R0,[R0, #+708]
   \   000003A0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000003A2   0x4669             MOV      R1,SP
   \   000003A4   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000003A6   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000003AA   0x1C64             ADDS     R4,R4,#+1
    442                    buf[ n++ ] = 0x01;
   \   000003AC   0x2001             MOVS     R0,#+1
   \   000003AE   0x4669             MOV      R1,SP
   \   000003B0   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000003B2   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000003B6   0x1C64             ADDS     R4,R4,#+1
    443                    buf[ n++ ] = 0x02;
   \   000003B8   0x2002             MOVS     R0,#+2
   \   000003BA   0x4669             MOV      R1,SP
   \   000003BC   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000003BE   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000003C2   0x1C64             ADDS     R4,R4,#+1
    444                    buf[ n++ ] = 0x03;
   \   000003C4   0x2003             MOVS     R0,#+3
   \   000003C6   0x4669             MOV      R1,SP
   \   000003C8   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000003CA   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000003CE   0x1C64             ADDS     R4,R4,#+1
    445                    buf[ n++ ] = 0x04;                      
   \   000003D0   0x2004             MOVS     R0,#+4
   \   000003D2   0x4669             MOV      R1,SP
   \   000003D4   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000003D6   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000003DA   0x1C64             ADDS     R4,R4,#+1
    446                    buf[ n++ ] = 0x00;
   \   000003DC   0x2000             MOVS     R0,#+0
   \   000003DE   0x4669             MOV      R1,SP
   \   000003E0   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000003E2   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000003E6   0x1C64             ADDS     R4,R4,#+1
    447                    buf[ n++ ] = 0x00;
   \   000003E8   0x2000             MOVS     R0,#+0
   \   000003EA   0x4669             MOV      R1,SP
   \   000003EC   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000003EE   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000003F2   0x1C64             ADDS     R4,R4,#+1
    448                    buf[ n++ ] = 0x00;
   \   000003F4   0x2000             MOVS     R0,#+0
   \   000003F6   0x4669             MOV      R1,SP
   \   000003F8   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000003FA   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000003FE   0x1C64             ADDS     R4,R4,#+1
    449                    b = calc_crc(buf, n);
   \   00000400   0x0021             MOVS     R1,R4
   \   00000402   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000404   0x4668             MOV      R0,SP
   \   00000406   0x.... 0x....      BL       calc_crc
   \   0000040A   0x0005             MOVS     R5,R0
    450                    buf[ n++ ] = 0x100 | b;                               
   \   0000040C   0xF455 0x7080      ORRS     R0,R5,#0x100
   \   00000410   0x4669             MOV      R1,SP
   \   00000412   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000414   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   00000418   0x1C64             ADDS     R4,R4,#+1
   \   0000041A   0xE02D             B.N      ??mdb_evt_m_rx_24
    451                  }
    452                  else if ( fb.cashless.cancel_session_tr )
   \                     ??mdb_evt_m_rx_27: (+1)
   \   0000041C   0x.... 0x....      LDR.W    R0,??DataTable1
   \   00000420   0xF890 0x02C0      LDRB     R0,[R0, #+704]
   \   00000424   0xF3C0 0x00C0      UBFX     R0,R0,#+3,#+1
   \   00000428   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000042A   0x2800             CMP      R0,#+0
   \   0000042C   0xD01D             BEQ.N    ??mdb_evt_m_rx_28
    453                  {
    454                    fb.cashless.cancel_session_tr = 0;
   \   0000042E   0x.... 0x....      LDR.W    R0,??DataTable1
   \   00000432   0xF890 0x02C0      LDRB     R0,[R0, #+704]
   \   00000436   0xF010 0x00F7      ANDS     R0,R0,#0xF7
   \   0000043A   0x.... 0x....      LDR.W    R1,??DataTable1
   \   0000043E   0xF881 0x02C0      STRB     R0,[R1, #+704]
    455                    buf[ n++ ] = 0x04;
   \   00000442   0x2004             MOVS     R0,#+4
   \   00000444   0x4669             MOV      R1,SP
   \   00000446   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000448   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   0000044C   0x1C64             ADDS     R4,R4,#+1
    456                    b = calc_crc(buf, n);
   \   0000044E   0x0021             MOVS     R1,R4
   \   00000450   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000452   0x4668             MOV      R0,SP
   \   00000454   0x.... 0x....      BL       calc_crc
   \   00000458   0x0005             MOVS     R5,R0
    457                    buf[ n++ ] = 0x100 | b;           
   \   0000045A   0xF455 0x7080      ORRS     R0,R5,#0x100
   \   0000045E   0x4669             MOV      R1,SP
   \   00000460   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000462   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   00000466   0x1C64             ADDS     R4,R4,#+1
   \   00000468   0xE006             B.N      ??mdb_evt_m_rx_24
    458                  }        
    459                  else
    460                  {
    461                    buf[ n++ ] = 0x100;
   \                     ??mdb_evt_m_rx_28: (+1)
   \   0000046A   0xF44F 0x7080      MOV      R0,#+256
   \   0000046E   0x4669             MOV      R1,SP
   \   00000470   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000472   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   00000476   0x1C64             ADDS     R4,R4,#+1
    462                  }        
    463                }
    464                break;   
   \                     ??mdb_evt_m_rx_24: (+1)
   \   00000478   0xE1A3             B.N      ??mdb_evt_m_rx_22
    465                
    466              case 0x111:
    467              //case 0x161:      
    468                //01 02 00 56 01 00 0F 03 16C
    469                if ( fb.m.rx_size >= 7 )
   \                     ??mdb_evt_m_rx_16: (+1)
   \   0000047A   0x....             LDR.N    R0,??DataTable1
   \   0000047C   0xF890 0x00AC      LDRB     R0,[R0, #+172]
   \   00000480   0x2807             CMP      R0,#+7
   \   00000482   0xDB56             BLT.N    ??mdb_evt_m_rx_29
    470                {
    471                  if (  fb.m.rx[ 1 ] == 0x00 )
   \   00000484   0x....             LDR.N    R0,??DataTable1
   \   00000486   0xF8B0 0x00B0      LDRH     R0,[R0, #+176]
   \   0000048A   0x2800             CMP      R0,#+0
   \   0000048C   0xD13D             BNE.N    ??mdb_evt_m_rx_30
    472                  {
    473                    buf[ n++ ] = 0x01;
   \   0000048E   0x2001             MOVS     R0,#+1
   \   00000490   0x4669             MOV      R1,SP
   \   00000492   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000494   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   00000498   0x1C64             ADDS     R4,R4,#+1
    474                    buf[ n++ ] = 0x02;
   \   0000049A   0x2002             MOVS     R0,#+2
   \   0000049C   0x4669             MOV      R1,SP
   \   0000049E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000004A0   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000004A4   0x1C64             ADDS     R4,R4,#+1
    475                    buf[ n++ ] = 0x00;
   \   000004A6   0x2000             MOVS     R0,#+0
   \   000004A8   0x4669             MOV      R1,SP
   \   000004AA   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000004AC   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000004B0   0x1C64             ADDS     R4,R4,#+1
    476                    buf[ n++ ] = 0x56;
   \   000004B2   0x2056             MOVS     R0,#+86
   \   000004B4   0x4669             MOV      R1,SP
   \   000004B6   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000004B8   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000004BC   0x1C64             ADDS     R4,R4,#+1
    477                    buf[ n++ ] = 0x01;
   \   000004BE   0x2001             MOVS     R0,#+1
   \   000004C0   0x4669             MOV      R1,SP
   \   000004C2   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000004C4   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000004C8   0x1C64             ADDS     R4,R4,#+1
    478                    buf[ n++ ] = 0x00;
   \   000004CA   0x2000             MOVS     R0,#+0
   \   000004CC   0x4669             MOV      R1,SP
   \   000004CE   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000004D0   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000004D4   0x1C64             ADDS     R4,R4,#+1
    479                    buf[ n++ ] = 0x0F;
   \   000004D6   0x200F             MOVS     R0,#+15
   \   000004D8   0x4669             MOV      R1,SP
   \   000004DA   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000004DC   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000004E0   0x1C64             ADDS     R4,R4,#+1
    480                    buf[ n++ ] = 0x03;
   \   000004E2   0x2003             MOVS     R0,#+3
   \   000004E4   0x4669             MOV      R1,SP
   \   000004E6   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000004E8   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000004EC   0x1C64             ADDS     R4,R4,#+1
    481                    b = calc_crc(buf, n);
   \   000004EE   0x0021             MOVS     R1,R4
   \   000004F0   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000004F2   0x4668             MOV      R0,SP
   \   000004F4   0x.... 0x....      BL       calc_crc
   \   000004F8   0x0005             MOVS     R5,R0
    482                    buf[ n++ ] = 0x100 | b;
   \   000004FA   0xF455 0x7080      ORRS     R0,R5,#0x100
   \   000004FE   0x4669             MOV      R1,SP
   \   00000500   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000502   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   00000506   0x1C64             ADDS     R4,R4,#+1
   \   00000508   0xE013             B.N      ??mdb_evt_m_rx_29
    483                  }
    484                  else if (  fb.m.rx[ 1 ] == 0x01 )
   \                     ??mdb_evt_m_rx_30: (+1)
   \   0000050A   0x....             LDR.N    R0,??DataTable1
   \   0000050C   0xF8B0 0x00B0      LDRH     R0,[R0, #+176]
   \   00000510   0x2801             CMP      R0,#+1
   \   00000512   0xD107             BNE.N    ??mdb_evt_m_rx_31
    485                  {
    486                    buf[ n++ ] = 0x100;
   \   00000514   0xF44F 0x7080      MOV      R0,#+256
   \   00000518   0x4669             MOV      R1,SP
   \   0000051A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000051C   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   00000520   0x1C64             ADDS     R4,R4,#+1
   \   00000522   0xE006             B.N      ??mdb_evt_m_rx_29
    487                  }
    488                  else
    489                  {
    490                    buf[ n++ ] = 0x1FF;        
   \                     ??mdb_evt_m_rx_31: (+1)
   \   00000524   0xF240 0x10FF      MOVW     R0,#+511
   \   00000528   0x4669             MOV      R1,SP
   \   0000052A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000052C   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   00000530   0x1C64             ADDS     R4,R4,#+1
    491                  }
    492                }
    493                else
    494                {
    495                  
    496                }
    497                break;      
   \                     ??mdb_evt_m_rx_29: (+1)
   \   00000532   0xE146             B.N      ??mdb_evt_m_rx_22
    498                
    499              case 0x113:
    500              //case 0x163:
    501                //113 00 00 01 00 01 15
    502                //113 02 00 64 79
    503                //113 04 17 
    504                //tr = 0;      
    505                if ( fb.m.rx_size >= 7 && fb.m.rx[1] == 0x00 )
   \                     ??mdb_evt_m_rx_18: (+1)
   \   00000534   0x....             LDR.N    R0,??DataTable1
   \   00000536   0xF890 0x00AC      LDRB     R0,[R0, #+172]
   \   0000053A   0x2807             CMP      R0,#+7
   \   0000053C   0xDB41             BLT.N    ??mdb_evt_m_rx_32
   \   0000053E   0x....             LDR.N    R0,??DataTable1
   \   00000540   0xF8B0 0x00B0      LDRH     R0,[R0, #+176]
   \   00000544   0x2800             CMP      R0,#+0
   \   00000546   0xD13C             BNE.N    ??mdb_evt_m_rx_32
    506                {
    507                  fb.cashless.item_price = ( fb.m.rx[2] << 8 ) | fb.m.rx[3];
   \   00000548   0x....             LDR.N    R0,??DataTable1
   \   0000054A   0xF8B0 0x00B2      LDRH     R0,[R0, #+178]
   \   0000054E   0x....             LDR.N    R1,??DataTable1
   \   00000550   0xF8B1 0x10B4      LDRH     R1,[R1, #+180]
   \   00000554   0xEA51 0x2000      ORRS     R0,R1,R0, LSL #+8
   \   00000558   0x....             LDR.N    R1,??DataTable1
   \   0000055A   0xF8A1 0x02C8      STRH     R0,[R1, #+712]
    508                  fb.cashless.item_no = ( fb.m.rx[4] << 8 ) | fb.m.rx[5];
   \   0000055E   0x....             LDR.N    R0,??DataTable1
   \   00000560   0xF8B0 0x00B6      LDRH     R0,[R0, #+182]
   \   00000564   0x....             LDR.N    R1,??DataTable1
   \   00000566   0xF8B1 0x10B8      LDRH     R1,[R1, #+184]
   \   0000056A   0xEA51 0x2000      ORRS     R0,R1,R0, LSL #+8
   \   0000056E   0x....             LDR.N    R1,??DataTable1
   \   00000570   0xF8A1 0x02CA      STRH     R0,[R1, #+714]
    509                  buf[ n++ ] = 0x05;
   \   00000574   0x2005             MOVS     R0,#+5
   \   00000576   0x4669             MOV      R1,SP
   \   00000578   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000057A   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   0000057E   0x1C64             ADDS     R4,R4,#+1
    510                  buf[ n++ ] = ( fb.cashless.item_price >> 8 ) & 0xFF;        
   \   00000580   0x....             LDR.N    R0,??DataTable1
   \   00000582   0xF8B0 0x02C8      LDRH     R0,[R0, #+712]
   \   00000586   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000588   0x0A00             LSRS     R0,R0,#+8
   \   0000058A   0x4669             MOV      R1,SP
   \   0000058C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000058E   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   00000592   0x1C64             ADDS     R4,R4,#+1
    511                  buf[ n++ ] = fb.cashless.item_price & 0xFF;
   \   00000594   0x....             LDR.N    R0,??DataTable1
   \   00000596   0xF890 0x02C8      LDRB     R0,[R0, #+712]
   \   0000059A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000059C   0x4669             MOV      R1,SP
   \   0000059E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000005A0   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000005A4   0x1C64             ADDS     R4,R4,#+1
    512                  b = calc_crc(buf, n);
   \   000005A6   0x0021             MOVS     R1,R4
   \   000005A8   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000005AA   0x4668             MOV      R0,SP
   \   000005AC   0x.... 0x....      BL       calc_crc
   \   000005B0   0x0005             MOVS     R5,R0
    513                  buf[ n++ ] = 0x100 | b;                  
   \   000005B2   0xF455 0x7080      ORRS     R0,R5,#0x100
   \   000005B6   0x4669             MOV      R1,SP
   \   000005B8   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000005BA   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000005BE   0x1C64             ADDS     R4,R4,#+1
   \   000005C0   0xE076             B.N      ??mdb_evt_m_rx_33
    514                }            
    515                else if ( fb.m.rx_size >= 3 && fb.m.rx[1] == 0x01 )
   \                     ??mdb_evt_m_rx_32: (+1)
   \   000005C2   0x....             LDR.N    R0,??DataTable1
   \   000005C4   0xF890 0x00AC      LDRB     R0,[R0, #+172]
   \   000005C8   0x2803             CMP      R0,#+3
   \   000005CA   0xDB1D             BLT.N    ??mdb_evt_m_rx_34
   \   000005CC   0x....             LDR.N    R0,??DataTable1
   \   000005CE   0xF8B0 0x00B0      LDRH     R0,[R0, #+176]
   \   000005D2   0x2801             CMP      R0,#+1
   \   000005D4   0xD118             BNE.N    ??mdb_evt_m_rx_34
    516                { //VEND CANCEL
    517                  buf[ n++ ] = 0x06;        
   \   000005D6   0x2006             MOVS     R0,#+6
   \   000005D8   0x4669             MOV      R1,SP
   \   000005DA   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000005DC   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000005E0   0x1C64             ADDS     R4,R4,#+1
    518                  b = calc_crc(buf, n);
   \   000005E2   0x0021             MOVS     R1,R4
   \   000005E4   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000005E6   0x4668             MOV      R0,SP
   \   000005E8   0x.... 0x....      BL       calc_crc
   \   000005EC   0x0005             MOVS     R5,R0
    519                  buf[ n++ ] = 0x100 | b;           
   \   000005EE   0xF455 0x7080      ORRS     R0,R5,#0x100
   \   000005F2   0x4669             MOV      R1,SP
   \   000005F4   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000005F6   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000005FA   0x1C64             ADDS     R4,R4,#+1
    520                  OS_SignalEvent( EVT_CL_VEND_CANCEL, &TCB2 );                
   \   000005FC   0x....             LDR.N    R1,??DataTable1_3
   \   000005FE   0xF45F 0x2080      MOVS     R0,#+262144
   \   00000602   0x.... 0x....      BL       OS_SignalEvent
   \   00000606   0xE053             B.N      ??mdb_evt_m_rx_33
    521                }                  
    522                else if ( fb.m.rx_size >= 5 && fb.m.rx[1] == 0x02 )
   \                     ??mdb_evt_m_rx_34: (+1)
   \   00000608   0x....             LDR.N    R0,??DataTable1
   \   0000060A   0xF890 0x00AC      LDRB     R0,[R0, #+172]
   \   0000060E   0x2805             CMP      R0,#+5
   \   00000610   0xDB13             BLT.N    ??mdb_evt_m_rx_35
   \   00000612   0x....             LDR.N    R0,??DataTable1
   \   00000614   0xF8B0 0x00B0      LDRH     R0,[R0, #+176]
   \   00000618   0x2802             CMP      R0,#+2
   \   0000061A   0xD10E             BNE.N    ??mdb_evt_m_rx_35
    523                {
    524                  b = 0;
   \   0000061C   0x2000             MOVS     R0,#+0
   \   0000061E   0x0005             MOVS     R5,R0
    525                  buf[ n++ ] = 0x100 | b;          
   \   00000620   0xF455 0x7080      ORRS     R0,R5,#0x100
   \   00000624   0x4669             MOV      R1,SP
   \   00000626   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000628   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   0000062C   0x1C64             ADDS     R4,R4,#+1
    526                  OS_SignalEvent( EVT_CL_VEND_OK, &TCB2 );
   \   0000062E   0x....             LDR.N    R1,??DataTable1_3
   \   00000630   0xF45F 0x3000      MOVS     R0,#+131072
   \   00000634   0x.... 0x....      BL       OS_SignalEvent
   \   00000638   0xE03A             B.N      ??mdb_evt_m_rx_33
    527                }
    528                else if ( fb.m.rx_size >= 5 && fb.m.rx[1] == 0x03 )
   \                     ??mdb_evt_m_rx_35: (+1)
   \   0000063A   0x....             LDR.N    R0,??DataTable1
   \   0000063C   0xF890 0x00AC      LDRB     R0,[R0, #+172]
   \   00000640   0x2805             CMP      R0,#+5
   \   00000642   0xDB13             BLT.N    ??mdb_evt_m_rx_36
   \   00000644   0x....             LDR.N    R0,??DataTable1
   \   00000646   0xF8B0 0x00B0      LDRH     R0,[R0, #+176]
   \   0000064A   0x2803             CMP      R0,#+3
   \   0000064C   0xD10E             BNE.N    ??mdb_evt_m_rx_36
    529                {
    530                  b = 0;
   \   0000064E   0x2000             MOVS     R0,#+0
   \   00000650   0x0005             MOVS     R5,R0
    531                  buf[ n++ ] = 0x100 | b;          
   \   00000652   0xF455 0x7080      ORRS     R0,R5,#0x100
   \   00000656   0x4669             MOV      R1,SP
   \   00000658   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000065A   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   0000065E   0x1C64             ADDS     R4,R4,#+1
    532                  OS_SignalEvent( EVT_CL_VEND_FAIL, &TCB2 );
   \   00000660   0x....             LDR.N    R1,??DataTable1_3
   \   00000662   0xF45F 0x2000      MOVS     R0,#+524288
   \   00000666   0x.... 0x....      BL       OS_SignalEvent
   \   0000066A   0xE021             B.N      ??mdb_evt_m_rx_33
    533                }      
    534                else if ( fb.m.rx_size >= 3 && fb.m.rx[1] == 0x04 )
   \                     ??mdb_evt_m_rx_36: (+1)
   \   0000066C   0x....             LDR.N    R0,??DataTable1
   \   0000066E   0xF890 0x00AC      LDRB     R0,[R0, #+172]
   \   00000672   0x2803             CMP      R0,#+3
   \   00000674   0xDB1C             BLT.N    ??mdb_evt_m_rx_33
   \   00000676   0x....             LDR.N    R0,??DataTable1
   \   00000678   0xF8B0 0x00B0      LDRH     R0,[R0, #+176]
   \   0000067C   0x2804             CMP      R0,#+4
   \   0000067E   0xD117             BNE.N    ??mdb_evt_m_rx_33
    535                {
    536                  buf[ n++ ] = 0x07;        
   \   00000680   0x2007             MOVS     R0,#+7
   \   00000682   0x4669             MOV      R1,SP
   \   00000684   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000686   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   0000068A   0x1C64             ADDS     R4,R4,#+1
    537                  b = calc_crc(buf, n);
   \   0000068C   0x0021             MOVS     R1,R4
   \   0000068E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000690   0x4668             MOV      R0,SP
   \   00000692   0x.... 0x....      BL       calc_crc
   \   00000696   0x0005             MOVS     R5,R0
    538                  buf[ n++ ] = 0x100 | b;                 
   \   00000698   0xF455 0x7080      ORRS     R0,R5,#0x100
   \   0000069C   0x4669             MOV      R1,SP
   \   0000069E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000006A0   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000006A4   0x1C64             ADDS     R4,R4,#+1
    539                  OS_SignalEvent( EVT_CL_SESSION_COMPLETE, &TCB2 );        
   \   000006A6   0x....             LDR.N    R1,??DataTable1_3
   \   000006A8   0xF45F 0x1080      MOVS     R0,#+1048576
   \   000006AC   0x.... 0x....      BL       OS_SignalEvent
    540                }      
    541                break;
   \                     ??mdb_evt_m_rx_33: (+1)
   \   000006B0   0xE087             B.N      ??mdb_evt_m_rx_22
    542                
    543              case 0x115:      
    544              //case 0x165:
    545                if ( fb.m.rx_size >= 3 && fb.m.rx[1] == 0x00 )
   \                     ??mdb_evt_m_rx_20: (+1)
   \   000006B2   0x....             LDR.N    R0,??DataTable1
   \   000006B4   0xF890 0x00AC      LDRB     R0,[R0, #+172]
   \   000006B8   0x2803             CMP      R0,#+3
   \   000006BA   0xDB18             BLT.N    ??mdb_evt_m_rx_37
   \   000006BC   0x....             LDR.N    R0,??DataTable1
   \   000006BE   0xF8B0 0x00B0      LDRH     R0,[R0, #+176]
   \   000006C2   0x2800             CMP      R0,#+0
   \   000006C4   0xD113             BNE.N    ??mdb_evt_m_rx_37
    546                {
    547                  buf[ n++ ] = 0x0E;
   \   000006C6   0x200E             MOVS     R0,#+14
   \   000006C8   0x4669             MOV      R1,SP
   \   000006CA   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000006CC   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000006D0   0x1C64             ADDS     R4,R4,#+1
    548                  b = calc_crc(buf, n);
   \   000006D2   0x0021             MOVS     R1,R4
   \   000006D4   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000006D6   0x4668             MOV      R0,SP
   \   000006D8   0x.... 0x....      BL       calc_crc
   \   000006DC   0x0005             MOVS     R5,R0
    549                  buf[ n++ ] = 0x100 | b;        
   \   000006DE   0xF455 0x7080      ORRS     R0,R5,#0x100
   \   000006E2   0x4669             MOV      R1,SP
   \   000006E4   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000006E6   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000006EA   0x1C64             ADDS     R4,R4,#+1
   \   000006EC   0xE028             B.N      ??mdb_evt_m_rx_38
    550                }      
    551                else if ( fb.m.rx_size >= 3 && fb.m.rx[1] == 0x01 )
   \                     ??mdb_evt_m_rx_37: (+1)
   \   000006EE   0x....             LDR.N    R0,??DataTable1
   \   000006F0   0xF890 0x00AC      LDRB     R0,[R0, #+172]
   \   000006F4   0x2803             CMP      R0,#+3
   \   000006F6   0xDB23             BLT.N    ??mdb_evt_m_rx_38
   \   000006F8   0x....             LDR.N    R0,??DataTable1
   \   000006FA   0xF8B0 0x00B0      LDRH     R0,[R0, #+176]
   \   000006FE   0x2801             CMP      R0,#+1
   \   00000700   0xD11E             BNE.N    ??mdb_evt_m_rx_38
    552                {
    553                  buf[ n++ ] = 0x0F;
   \   00000702   0x200F             MOVS     R0,#+15
   \   00000704   0x4669             MOV      R1,SP
   \   00000706   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000708   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   0000070C   0x1C64             ADDS     R4,R4,#+1
    554                  buf[ n++ ] = 0x24;//0x15;
   \   0000070E   0x2024             MOVS     R0,#+36
   \   00000710   0x4669             MOV      R1,SP
   \   00000712   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000714   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   00000718   0x1C64             ADDS     R4,R4,#+1
    555                  buf[ n++ ] = 0x94;//0x26;
   \   0000071A   0x2094             MOVS     R0,#+148
   \   0000071C   0x4669             MOV      R1,SP
   \   0000071E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000720   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   00000724   0x1C64             ADDS     R4,R4,#+1
    556                  b = calc_crc(buf, n);
   \   00000726   0x0021             MOVS     R1,R4
   \   00000728   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000072A   0x4668             MOV      R0,SP
   \   0000072C   0x.... 0x....      BL       calc_crc
   \   00000730   0x0005             MOVS     R5,R0
    557                  buf[ n++ ] = 0x100 | b;        
   \   00000732   0xF455 0x7080      ORRS     R0,R5,#0x100
   \   00000736   0x4669             MOV      R1,SP
   \   00000738   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000073A   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   0000073E   0x1C64             ADDS     R4,R4,#+1
    558                }            
    559                break;
   \                     ??mdb_evt_m_rx_38: (+1)
   \   00000740   0xE03F             B.N      ??mdb_evt_m_rx_22
    560                  
    561              case 0x114:
    562              //case 0x164:      
    563                if ( fb.m.rx_size >= 3 )
   \                     ??mdb_evt_m_rx_19: (+1)
   \   00000742   0x....             LDR.N    R0,??DataTable1
   \   00000744   0xF890 0x00AC      LDRB     R0,[R0, #+172]
   \   00000748   0x2803             CMP      R0,#+3
   \   0000074A   0xDB16             BLT.N    ??mdb_evt_m_rx_39
    564                {
    565                  fb.cashless.enabled = ( fb.m.rx[1] != 0 );
   \   0000074C   0x....             LDR.N    R0,??DataTable1
   \   0000074E   0xF8B0 0x00B0      LDRH     R0,[R0, #+176]
   \   00000752   0x2800             CMP      R0,#+0
   \   00000754   0xD001             BEQ.N    ??mdb_evt_m_rx_40
   \   00000756   0x2001             MOVS     R0,#+1
   \   00000758   0xE000             B.N      ??mdb_evt_m_rx_41
   \                     ??mdb_evt_m_rx_40: (+1)
   \   0000075A   0x2000             MOVS     R0,#+0
   \                     ??mdb_evt_m_rx_41: (+1)
   \   0000075C   0x....             LDR.N    R1,??DataTable1
   \   0000075E   0xF891 0x12C0      LDRB     R1,[R1, #+704]
   \   00000762   0xF360 0x0100      BFI      R1,R0,#+0,#+1
   \   00000766   0x....             LDR.N    R0,??DataTable1
   \   00000768   0xF880 0x12C0      STRB     R1,[R0, #+704]
    566                  buf[ n++ ] = 0x100;
   \   0000076C   0xF44F 0x7080      MOV      R0,#+256
   \   00000770   0x4669             MOV      R1,SP
   \   00000772   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000774   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   00000778   0x1C64             ADDS     R4,R4,#+1
    567                }
    568                break;   
   \                     ??mdb_evt_m_rx_39: (+1)
   \   0000077A   0xE022             B.N      ??mdb_evt_m_rx_22
    569                
    570              case 0x117:      
    571              //case 0x167:
    572                if ( fb.m.rx_size >= 32 )
   \                     ??mdb_evt_m_rx_21: (+1)
   \   0000077C   0x....             LDR.N    R0,??DataTable1
   \   0000077E   0xF890 0x00AC      LDRB     R0,[R0, #+172]
   \   00000782   0x2820             CMP      R0,#+32
   \   00000784   0xDB1D             BLT.N    ??mdb_evt_m_rx_42
    573                {
    574                  buf[ n++ ] = 0x09;
   \   00000786   0x2009             MOVS     R0,#+9
   \   00000788   0x4669             MOV      R1,SP
   \   0000078A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000078C   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   00000790   0x1C64             ADDS     R4,R4,#+1
    575                  for ( int i  = 1; i < 30; i++)
   \   00000792   0x2001             MOVS     R0,#+1
   \                     ??mdb_evt_m_rx_43: (+1)
   \   00000794   0x281E             CMP      R0,#+30
   \   00000796   0xDA07             BGE.N    ??mdb_evt_m_rx_44
    576                  {
    577                    buf[ n++ ] = 0;
   \   00000798   0x2100             MOVS     R1,#+0
   \   0000079A   0x466A             MOV      R2,SP
   \   0000079C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000079E   0xF822 0x1014      STRH     R1,[R2, R4, LSL #+1]
   \   000007A2   0x1C64             ADDS     R4,R4,#+1
    578                  }
   \   000007A4   0x1C40             ADDS     R0,R0,#+1
   \   000007A6   0xE7F5             B.N      ??mdb_evt_m_rx_43
    579                  b = calc_crc(buf, n);
   \                     ??mdb_evt_m_rx_44: (+1)
   \   000007A8   0x0021             MOVS     R1,R4
   \   000007AA   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000007AC   0x4668             MOV      R0,SP
   \   000007AE   0x.... 0x....      BL       calc_crc
   \   000007B2   0x0005             MOVS     R5,R0
    580                  buf[ n++ ] = 0x100 | b;
   \   000007B4   0xF455 0x7080      ORRS     R0,R5,#0x100
   \   000007B8   0x4669             MOV      R1,SP
   \   000007BA   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000007BC   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000007C0   0x1C64             ADDS     R4,R4,#+1
    581                }      
    582                break;
    583          #endif      
    584            }
    585            
    586            if ( n > 0 )
   \                     ??mdb_evt_m_rx_42: (+1)
   \                     ??mdb_evt_m_rx_22: (+1)
   \   000007C2   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000007C4   0x2C00             CMP      R4,#+0
   \   000007C6   0xD005             BEQ.N    ??mdb_evt_m_rx_45
    587            {
    588              fb_m_tx( buf, n );    
   \   000007C8   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000007CA   0x0021             MOVS     R1,R4
   \   000007CC   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   000007CE   0x4668             MOV      R0,SP
   \   000007D0   0x.... 0x....      BL       fb_m_tx
    589            }
    590          }
   \                     ??mdb_evt_m_rx_45: (+1)
   \                     ??mdb_evt_m_rx_2: (+1)
   \   000007D4   0xB013             ADD      SP,SP,#+76
   \   000007D6   0xE8BD 0x83F0      POP      {R4-R9,PC}       ;; return

   \                                 In section .data, align 1
   \                     ??just_reset:
   \   00000000   0x01               DC8 1

   \                                 In section .data, align 1
   \                     ??tr:
   \   00000000   0x01               DC8 1
    591          

   \                                 In section .text, align 2, keep-with-next
    592          static u8 calc_crc(u16* p, u8 n)
    593          {
   \                     calc_crc: (+1)
   \   00000000   0xB410             PUSH     {R4}
   \   00000002   0x0002             MOVS     R2,R0
    594            u8 crc = 0;
   \   00000004   0x2000             MOVS     R0,#+0
    595            for ( u8 i = 0; i < n; i++ )
   \   00000006   0x2300             MOVS     R3,#+0
   \                     ??calc_crc_0: (+1)
   \   00000008   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000000A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000000C   0x428B             CMP      R3,R1
   \   0000000E   0xD205             BCS.N    ??calc_crc_1
    596            {
    597              crc += p[ i ];
   \   00000010   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000012   0xF832 0x4013      LDRH     R4,[R2, R3, LSL #+1]
   \   00000016   0x1820             ADDS     R0,R4,R0
    598            }
   \   00000018   0x1C5B             ADDS     R3,R3,#+1
   \   0000001A   0xE7F5             B.N      ??calc_crc_0
    599            return crc;
   \                     ??calc_crc_1: (+1)
   \   0000001C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001E   0xBC10             POP      {R4}
   \   00000020   0x4770             BX       LR               ;; return
    600          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     fb

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     ??tr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     ??just_reset

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x........         DC32     TCB2
    601          
    602          #if 0
    603          
    604          u16 voteForEXE = 0;
    605          u16 voteForMDB = 0;
    606          
    607          void detectFbType( u16 b ) {
    608             u8 calcedParity = 0;
    609             u8 receivedParity = ( ( b & 0x0100 ) != 0 );
    610             int i;
    611             for ( i = 0; i < 8; i++ ) {
    612                if ( b & ( 1 << i ) )
    613                   //calcedParity = !calcedParity;
    614                   calcedParity = ( calcedParity != 0);
    615             }
    616          
    617             if ( ( fb.m.rx_size == 1 && receivedParity )
    618                 || ( fb.m.rx_size > 1 ) && !receivedParity && calcedParity ) {
    619                if ( voteForMDB < 20 ) {
    620                   voteForMDB++;
    621                } else if ( fb.type != eFbType_MDB ) {
    622                   fb.type = eFbType_MDB;
    623                   //u32 evtType = eFbEvtType_FbType;
    624                   //OS_Q_Put( &fb_evt_q, &evtType, sizeof( evtType ) );
    625                }
    626                if ( voteForEXE > 0 ) {
    627                   voteForEXE--;
    628                }
    629          
    630             } else if ( receivedParity == calcedParity ) {
    631                if ( voteForMDB > 0 ) {
    632                   voteForMDB--;
    633                }
    634                if ( voteForEXE < 20 ) {
    635                   voteForEXE++;
    636                } else if ( fb.type != eFbType_EXE ) {
    637                   fb.type = eFbType_EXE;
    638                   //u32 evtType = eFbEvtType_FbType;
    639                   //OS_Q_Put( &fb_evt_q, &evtType, sizeof( evtType ) );
    640                }
    641             }
    642          
    643          #if 0
    644             if( fb.en_log )
    645                log("b=%X ", b );
    646          
    647             if ( ( receivedParity && calcedParity )
    648                 || ( !receivedParity && !calcedParity ) ) {
    649                if ( voteForEXE < 20 ) {
    650                   voteForEXE++;
    651                   if( fb.en_log )
    652                      log("e+ r%d c%d\r\n" , receivedParity, calcedParity );
    653                } else {
    654                   fb.type = eFbType_EXE;
    655                }
    656             } else {
    657                if ( voteForEXE > 0 ) {
    658                   voteForEXE--;
    659          
    660                   if( fb.en_log )
    661                      log("e- r%d c%d\r\n" , receivedParity, calcedParity );
    662                } else {
    663                   fb.type = eFbType_MDB;
    664                }
    665             }
    666          #endif
    667          }
    668          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       4   calc_crc
     104   mdb_evt_m_rx
       104   -> OS_SignalEvent
       104   -> calc_crc
       104   -> fb_m_tx
       0   mdb_evt_s_rx


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
      34  calc_crc
       1  just_reset
    2010  mdb_evt_m_rx
      12  mdb_evt_s_rx
     888  mdb_mon
       1  tr

 
   888 bytes in section .bss
     2 bytes in section .data
 2 072 bytes in section .text
 
 2 072 bytes of CODE memory
   890 bytes of DATA memory

Errors: none
Warnings: 1

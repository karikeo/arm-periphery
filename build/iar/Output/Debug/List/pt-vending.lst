###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.2.10312/W32 for ARM       15/Nov/2016  14:56:10
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\ilya\vendicont\arm-periphery\Application\p-types\vending\pt-vending.c
#    Command line =  
#        C:\ilya\vendicont\arm-periphery\Application\p-types\vending\pt-vending.c
#        -D STM32F10X_HD -D USE_STDPERIPH_DRIVER -D DEBUG=1 -D _FLASH_PROG -lCN
#        C:\ilya\vendicont\arm-periphery\build\iar\Output\Debug\List --remarks
#        -o C:\ilya\vendicont\arm-periphery\build\iar\Output\Debug\Obj --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M3 -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\ilya\vendicont\arm-periphery\build\iar\..\..\ -I
#        C:\ilya\vendicont\arm-periphery\build\iar\..\..\Inc\ -I
#        C:\ilya\vendicont\arm-periphery\build\iar\..\..\library\CMSIS\Include\
#        -I
#        C:\ilya\vendicont\arm-periphery\build\iar\..\..\library\STM32F10x_StdPeriph_Driver\inc\
#        -I C:\ilya\vendicont\arm-periphery\build\iar\..\..\rtos\embos\iar\inc\
#        -I
#        C:\ilya\vendicont\arm-periphery\build\iar\..\..\Application\p-types\
#        -On --use_c++_inline --require_prototypes
#    List file    =  
#        C:\ilya\vendicont\arm-periphery\build\iar\Output\Debug\List\pt-vending.lst
#    Object file  =  
#        C:\ilya\vendicont\arm-periphery\build\iar\Output\Debug\Obj\pt-vending.o
#
###############################################################################

C:\ilya\vendicont\arm-periphery\Application\p-types\vending\pt-vending.c
      1          #include "stm32f10x.h"
      2          #include "RTOS.h"
      3          #include "BSP.h"
      4          #include "pt-vending.h"
      5          #include "dex.h"
      6          #include "mdb.h"
      7          #include "stdio.h"
      8          #include "log.h"
      9          
     10          #if defined LCD
     11          #include "lcd_2x16.h"
     12          #endif
     13          #include "spi_comm.h"
     14          #include "mdb_sniffer.h"
     15          #include "..\sw_uart.h"
     16          #include "..\bt.h"
     17          

   \                                 In section .rodata, align 1
     18          const u8 verMajor = 1;
   \                     verMajor:
   \   00000000   0x01               DC8 1

   \                                 In section .rodata, align 1
     19          const u8 verMinor = 0;
   \                     verMinor:
   \   00000000   0x00               DC8 0
     20          

   \                                 In section .bss, align 4
     21          t_fb_desc fb;
   \                     fb:
   \   00000000                      DS8 720

   \                                 In section .bss, align 4
     22          OS_Q  fb_evt_q;
   \                     fb_evt_q:
   \   00000000                      DS8 40

   \                                 In section .bss, align 4
     23          char fb_evt_q_buf[ 64 ];
   \                     fb_evt_q_buf:
   \   00000000                      DS8 64
     24          

   \                                 In section .bss, align 4
     25          static GPIO_InitTypeDef GPIO_InitStructure;
   \                     GPIO_InitStructure:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     26          USART_InitTypeDef USART_InitStructure;
   \                     USART_InitStructure:
   \   00000000                      DS8 16
     27          
     28          //extern OS_RSEMA SemaLCD;
     29          //OS_TIMER fbMasterTimer1;
     30          //OS_TIMER fbSlaveTimer1;

   \                                 In section .bss, align 4
     31          OS_TIMER t_fbm_msg_end;
   \                     t_fbm_msg_end:
   \   00000000                      DS8 20

   \                                 In section .bss, align 4
     32          OS_TIMER t_fbs_msg_end;
   \                     t_fbs_msg_end:
   \   00000000                      DS8 20
     33          //OS_TIMER fbSlaveTimer1;

   \                                 In section .bss, align 4
     34          OS_TIMER timer1000;
   \                     timer1000:
   \   00000000                      DS8 20
     35          
     36          extern OS_TASK TCB2,TCB3;
     37          
     38          #if defined DEX
     39          extern tDex dex;
     40          #elif defined MDB_SNIFFER
     41          extern tMdbSniffer sniffer;
     42          #endif
     43          
     44          extern t_sw_uart sw_uart;
     45          

   \                                 In section .text, align 2, keep-with-next
     46          void timer1000_cb( void )
     47          {
   \                     timer1000_cb: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     48            if (LED2)
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable11  ;; 0x40011000
   \   00000006   0x.... 0x....      BL       GPIO_ReadOutputData
   \   0000000A   0x0600             LSLS     R0,R0,#+24
   \   0000000C   0xD405             BMI.N    ??timer1000_cb_0
     49            {
     50              LED2_OFF;
   \   0000000E   0x2180             MOVS     R1,#+128
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable11  ;; 0x40011000
   \   00000014   0x.... 0x....      BL       GPIO_SetBits
   \   00000018   0xE004             B.N      ??timer1000_cb_1
     51            }
     52            else
     53            {
     54              LED2_ON;    
   \                     ??timer1000_cb_0: (+1)
   \   0000001A   0x2180             MOVS     R1,#+128
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable11  ;; 0x40011000
   \   00000020   0x.... 0x....      BL       GPIO_ResetBits
     55              //fb.cashless.display_tr = 1;    
     56            }
     57            OS_RetriggerTimer( &timer1000 );   /* Make timer periodical */  
   \                     ??timer1000_cb_1: (+1)
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable11_1
   \   00000028   0x.... 0x....      BL       OS_RetriggerTimer
     58            //mdb_test();  
     59          }
   \   0000002C   0xBD01             POP      {R0,PC}          ;; return
     60          
     61          #if 0
     62          void fbMasterTimeout1( void )
     63          {
     64             fb.m_tmo = 1;
     65             OS_SignalEvent( EVT_FB_M_RX_TMO, &TCB2 );
     66          }
     67          
     68          void fbSlaveTimeout1( void ) {
     69             fb.s_tmo = 1;
     70             OS_SignalEvent( EVT_FB_S_RX_TMO, &TCB2 );
     71          }
     72          #endif
     73          

   \                                 In section .text, align 2, keep-with-next
     74          void fbm_msg_end( void )
     75          {
   \                     fbm_msg_end: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
     76            fb.m.rx_msg_time = OS_GetTime_us();  
   \   00000002   0x.... 0x....      BL       OS_GetTime_us
   \   00000006   0x.... 0x....      LDR.W    R1,??DataTable11_2
   \   0000000A   0x6148             STR      R0,[R1, #+20]
     77            
     78          #if defined ( MDB_SNIFFER )  
     79            memmove( sniffer.m.raw.rx, fb.m.rx, fb.m.rx_size * sizeof(fb.m.rx[0]) );
   \   0000000C   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   00000010   0xF890 0x00AC      LDRB     R0,[R0, #+172]
   \   00000014   0x0044             LSLS     R4,R0,#+1
   \   00000016   0x.... 0x....      LDR.W    R5,??DataTable11_3
   \   0000001A   0x.... 0x....      LDR.W    R6,??DataTable11_4
   \   0000001E   0x0022             MOVS     R2,R4
   \   00000020   0x0029             MOVS     R1,R5
   \   00000022   0x0030             MOVS     R0,R6
   \   00000024   0x.... 0x....      BL       __aeabi_memmove
     80            sniffer.m.raw.rx_size = fb.m.rx_size;
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   0000002C   0xF890 0x00AC      LDRB     R0,[R0, #+172]
   \   00000030   0x.... 0x....      LDR.W    R1,??DataTable11_5
   \   00000034   0xF881 0x0184      STRB     R0,[R1, #+388]
     81            sniffer.m.raw.time = fb.m.rx_last_time;
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   0000003C   0x6980             LDR      R0,[R0, #+24]
   \   0000003E   0x.... 0x....      LDR.W    R1,??DataTable11_5
   \   00000042   0xF8C1 0x0188      STR      R0,[R1, #+392]
     82          #endif
     83            OS_SignalEvent( EVT_FB_M_RX, &TCB2 );    
   \   00000046   0x.... 0x....      LDR.W    R1,??DataTable11_6
   \   0000004A   0x2004             MOVS     R0,#+4
   \   0000004C   0x.... 0x....      BL       OS_SignalEvent
     84          }
   \   00000050   0xBD70             POP      {R4-R6,PC}       ;; return
     85          

   \                                 In section .text, align 2, keep-with-next
     86          void fbs_msg_end( void )
     87          {
   \                     fbs_msg_end: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
     88          #if defined ( MDB_SNIFFER )
     89            memmove( sniffer.s.raw.rx, fb.s.rx, fb.s.rx_size * sizeof(fb.s.rx[0]) );
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   00000008   0xF890 0x01BC      LDRB     R0,[R0, #+444]
   \   0000000C   0x0044             LSLS     R4,R0,#+1
   \   0000000E   0x.... 0x....      LDR.W    R5,??DataTable11_7
   \   00000012   0x.... 0x....      LDR.W    R6,??DataTable11_8
   \   00000016   0x0022             MOVS     R2,R4
   \   00000018   0x0029             MOVS     R1,R5
   \   0000001A   0x0030             MOVS     R0,R6
   \   0000001C   0x.... 0x....      BL       __aeabi_memmove
     90            sniffer.s.raw.rx_size = fb.s.rx_size;
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   00000024   0xF890 0x01BC      LDRB     R0,[R0, #+444]
   \   00000028   0x.... 0x....      LDR.W    R1,??DataTable11_5
   \   0000002C   0xF881 0x01D4      STRB     R0,[R1, #+468]
     91            sniffer.s.raw.time = fb.s.rx_last_time;  
   \   00000030   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   00000034   0xF8D0 0x01B8      LDR      R0,[R0, #+440]
   \   00000038   0x.... 0x....      LDR.W    R1,??DataTable11_5
   \   0000003C   0xF8C1 0x01D8      STR      R0,[R1, #+472]
     92          #endif  
     93            OS_SignalEvent( EVT_FB_S_RX, &TCB2 );  
   \   00000040   0x.... 0x....      LDR.W    R1,??DataTable11_6
   \   00000044   0x2008             MOVS     R0,#+8
   \   00000046   0x.... 0x....      BL       OS_SignalEvent
     94            memset(fb.s.rx, 0 , fb.s.rx_size);
   \   0000004A   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   0000004E   0xF890 0x61BC      LDRB     R6,[R0, #+444]
   \   00000052   0x2700             MOVS     R7,#+0
   \   00000054   0x.... 0x....      LDR.W    R8,??DataTable11_7
   \   00000058   0x003A             MOVS     R2,R7
   \   0000005A   0x0031             MOVS     R1,R6
   \   0000005C   0x4640             MOV      R0,R8
   \   0000005E   0x.... 0x....      BL       __aeabi_memset
     95            fb.s.rx_size = 0;
   \   00000062   0x2000             MOVS     R0,#+0
   \   00000064   0x.... 0x....      LDR.W    R1,??DataTable11_2
   \   00000068   0xF881 0x01BC      STRB     R0,[R1, #+444]
     96          }
   \   0000006C   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
     97          

   \                                 In section .text, align 2, keep-with-next
     98          void Task_vending(void)
     99          {
   \                     Task_vending: (+1)
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \   00000004   0xB091             SUB      SP,SP,#+68
    100            OS_TASK_EVENT evt;
    101            //int i;
    102          
    103            /* LED2 */
    104            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_7;
   \   00000006   0x2080             MOVS     R0,#+128
   \   00000008   0x.... 0x....      LDR.W    R1,??DataTable11_9
   \   0000000C   0x8008             STRH     R0,[R1, #+0]
    105            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_OD;
   \   0000000E   0x2014             MOVS     R0,#+20
   \   00000010   0x.... 0x....      LDR.W    R1,??DataTable11_9
   \   00000014   0x70C8             STRB     R0,[R1, #+3]
    106            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
   \   00000016   0x2003             MOVS     R0,#+3
   \   00000018   0x.... 0x....      LDR.W    R1,??DataTable11_9
   \   0000001C   0x7088             STRB     R0,[R1, #+2]
    107            GPIO_Init(GPIOC, &GPIO_InitStructure);
   \   0000001E   0x.... 0x....      LDR.W    R1,??DataTable11_9
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable11  ;; 0x40011000
   \   00000026   0x.... 0x....      BL       GPIO_Init
    108            LED2_OFF;
   \   0000002A   0x2180             MOVS     R1,#+128
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable11  ;; 0x40011000
   \   00000030   0x.... 0x....      BL       GPIO_SetBits
    109             
    110             init_fb();
   \   00000034   0x.... 0x....      BL       init_fb
    111          
    112             OS_CREATETIMER( &timer1000, timer1000_cb, 1000 );
   \   00000038   0xF44F 0x727A      MOV      R2,#+1000
   \   0000003C   0x.... 0x....      LDR.W    R1,??DataTable11_10
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable11_1
   \   00000044   0x.... 0x....      BL       OS_CreateTimer
   \   00000048   0x.... 0x....      LDR.W    R0,??DataTable11_1
   \   0000004C   0x.... 0x....      BL       OS_StartTimer
    113             //OS_CREATETIMER( &fbMasterTimer1, fbMasterTimeout1, 5000 );
    114             //OS_CREATETIMER( &fbSlaveTimer1, fbSlaveTimeout1, 5000 );
    115             OS_CreateTimer( &t_fbm_msg_end, fbm_msg_end, 4 );
   \   00000050   0x2204             MOVS     R2,#+4
   \   00000052   0x.... 0x....      LDR.W    R1,??DataTable11_11
   \   00000056   0x.... 0x....      LDR.W    R0,??DataTable11_12
   \   0000005A   0x.... 0x....      BL       OS_CreateTimer
    116             OS_CreateTimer( &t_fbs_msg_end, fbs_msg_end, 5 );
   \   0000005E   0x2205             MOVS     R2,#+5
   \   00000060   0x.... 0x....      LDR.W    R1,??DataTable11_13
   \   00000064   0x.... 0x....      LDR.W    R0,??DataTable11_14
   \   00000068   0x.... 0x....      BL       OS_CreateTimer
    117          
    118             OS_ARM_ISRSetPrio( USART1_IRQn + 16, 140 );               // Set lowest Priority, ALL BITS set
   \   0000006C   0x218C             MOVS     R1,#+140
   \   0000006E   0x2035             MOVS     R0,#+53
   \   00000070   0x.... 0x....      BL       OS_ARM_ISRSetPrio
    119             OS_ARM_ISRSetPrio( USART2_IRQn + 16, 140 );               // Set lowest Priority, ALL BITS set
   \   00000074   0x218C             MOVS     R1,#+140
   \   00000076   0x2036             MOVS     R0,#+54
   \   00000078   0x.... 0x....      BL       OS_ARM_ISRSetPrio
    120          
    121             OS_ARM_EnableISR( USART1_IRQn + 16 );
   \   0000007C   0x2035             MOVS     R0,#+53
   \   0000007E   0x.... 0x....      BL       OS_ARM_EnableISR
    122             OS_ARM_EnableISR( USART2_IRQn + 16 );
   \   00000082   0x2036             MOVS     R0,#+54
   \   00000084   0x.... 0x....      BL       OS_ARM_EnableISR
    123          
    124             fb.type = eFbType_Unknown;
   \   00000088   0x2000             MOVS     R0,#+0
   \   0000008A   0x.... 0x....      LDR.W    R1,??DataTable11_2
   \   0000008E   0x6008             STR      R0,[R1, #+0]
    125             fb.m_tmo = 0;
   \   00000090   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   00000094   0x6840             LDR      R0,[R0, #+4]
   \   00000096   0x0840             LSRS     R0,R0,#+1
   \   00000098   0x0040             LSLS     R0,R0,#+1
   \   0000009A   0x.... 0x....      LDR.W    R1,??DataTable11_2
   \   0000009E   0x6048             STR      R0,[R1, #+4]
    126             fb.s_tmo = 0;
   \   000000A0   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   000000A4   0x6840             LDR      R0,[R0, #+4]
   \   000000A6   0xF030 0x0002      BICS     R0,R0,#0x2
   \   000000AA   0x.... 0x....      LDR.W    R1,??DataTable11_2
   \   000000AE   0x6048             STR      R0,[R1, #+4]
    127             fb.m.enabled = 0;
   \   000000B0   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   000000B4   0x7B00             LDRB     R0,[R0, #+12]
   \   000000B6   0xF010 0x00FE      ANDS     R0,R0,#0xFE
   \   000000BA   0x.... 0x....      LDR.W    R1,??DataTable11_2
   \   000000BE   0x7308             STRB     R0,[R1, #+12]
    128          
    129             memset( fb_evt_q_buf, 0, sizeof(fb_evt_q_buf) );
   \   000000C0   0x2540             MOVS     R5,#+64
   \   000000C2   0x2600             MOVS     R6,#+0
   \   000000C4   0x.... 0x....      LDR.W    R7,??DataTable11_15
   \   000000C8   0x0032             MOVS     R2,R6
   \   000000CA   0x0029             MOVS     R1,R5
   \   000000CC   0x0038             MOVS     R0,R7
   \   000000CE   0x.... 0x....      BL       __aeabi_memset
    130             OS_Q_Create(&fb_evt_q, &fb_evt_q_buf, sizeof(fb_evt_q_buf));
   \   000000D2   0x2240             MOVS     R2,#+64
   \   000000D4   0x.... 0x....      LDR.W    R1,??DataTable11_15
   \   000000D8   0x.... 0x....      LDR.W    R0,??DataTable11_16
   \   000000DC   0x.... 0x....      BL       OS_Q_Create
    131          
    132             enableLogging();
   \   000000E0   0x.... 0x....      BL       enableLogging
    133             log( "build: %u.%u %s %s\r\n", verMajor, verMinor,__DATE__, __TIME__);
   \   000000E4   0x.... 0x....      LDR.W    R0,??DataTable11_17
   \   000000E8   0x9000             STR      R0,[SP, #+0]
   \   000000EA   0x.... 0x....      LDR.W    R3,??DataTable11_18
   \   000000EE   0x.... 0x....      LDR.W    R0,??DataTable11_19
   \   000000F2   0x7802             LDRB     R2,[R0, #+0]
   \   000000F4   0x.... 0x....      LDR.W    R0,??DataTable11_20
   \   000000F8   0x7801             LDRB     R1,[R0, #+0]
   \   000000FA   0x.... 0x....      LDR.W    R0,??DataTable11_21
   \   000000FE   0x.... 0x....      BL       log1
    134          
    135                
    136          #if 1
    137             sw_uart.rx.mes = '\r';
   \   00000102   0x200D             MOVS     R0,#+13
   \   00000104   0x.... 0x....      LDR.W    R1,??DataTable11_22
   \   00000108   0xF881 0x0045      STRB     R0,[R1, #+69]
    138             sw_uart.rx.handler = bt_rx_msg_handler;
   \   0000010C   0x.... 0x....      LDR.W    R0,??DataTable11_23
   \   00000110   0x.... 0x....      LDR.W    R1,??DataTable11_22
   \   00000114   0x6488             STR      R0,[R1, #+72]
    139             
    140             OS_Delay (500);      
   \   00000116   0xF44F 0x70FA      MOV      R0,#+500
   \   0000011A   0x.... 0x....      BL       OS_Delay
    141          
    142             sw_uart_tx("AT\r\n", 4);  
   \   0000011E   0x2104             MOVS     R1,#+4
   \   00000120   0x.... 0x....      LDR.W    R0,??DataTable11_24
   \   00000124   0x.... 0x....      BL       sw_uart_tx
    143            //sw_uart_tx("+++", 3);     
    144             OS_Delay (500);
   \   00000128   0xF44F 0x70FA      MOV      R0,#+500
   \   0000012C   0x.... 0x....      BL       OS_Delay
    145             
    146             HC05_CONF_ON;   
   \   00000130   0x2120             MOVS     R1,#+32
   \   00000132   0x.... 0x....      LDR.W    R0,??DataTable11  ;; 0x40011000
   \   00000136   0x.... 0x....      BL       GPIO_SetBits
    147             OS_Delay (50);   
   \   0000013A   0x2032             MOVS     R0,#+50
   \   0000013C   0x.... 0x....      BL       OS_Delay
    148             
    149             sw_uart_tx("AT+NAME=VENDICONT\r\n", 19);
   \   00000140   0x2113             MOVS     R1,#+19
   \   00000142   0x.... 0x....      LDR.W    R0,??DataTable11_25
   \   00000146   0x.... 0x....      BL       sw_uart_tx
    150             OS_Delay (500);
   \   0000014A   0xF44F 0x70FA      MOV      R0,#+500
   \   0000014E   0x.... 0x....      BL       OS_Delay
    151                   
    152             //sw_uart_tx("AT+ADDR?\r\n", 10);  
    153             //sw_uart_tx("AT+PSWD?\r\n", 10);  
    154             //OS_Delay (500);
    155             
    156             
    157             HC05_CONF_OFF;
   \   00000152   0x2120             MOVS     R1,#+32
   \   00000154   0x.... 0x....      LDR.W    R0,??DataTable11  ;; 0x40011000
   \   00000158   0x.... 0x....      BL       GPIO_ResetBits
    158             OS_Delay (500);
   \   0000015C   0xF44F 0x70FA      MOV      R0,#+500
   \   00000160   0x.... 0x....      BL       OS_Delay
    159             
    160             sw_uart_tx("AT\r\n", 4);  
   \   00000164   0x2104             MOVS     R1,#+4
   \   00000166   0x.... 0x....      LDR.W    R0,??DataTable11_24
   \   0000016A   0x.... 0x....      BL       sw_uart_tx
    161             OS_Delay (500);
   \   0000016E   0xF44F 0x70FA      MOV      R0,#+500
   \   00000172   0x.... 0x....      BL       OS_Delay
    162             
    163             sw_uart_tx("AT\r\n", 4);  
   \   00000176   0x2104             MOVS     R1,#+4
   \   00000178   0x.... 0x....      LDR.W    R0,??DataTable11_24
   \   0000017C   0x.... 0x....      BL       sw_uart_tx
    164             OS_Delay (500);
   \   00000180   0xF44F 0x70FA      MOV      R0,#+500
   \   00000184   0x.... 0x....      BL       OS_Delay
    165             
    166             
    167          #endif
    168             
    169             sw_uart_reset_buffers();
   \   00000188   0x.... 0x....      BL       sw_uart_reset_buffers
    170             
    171             fb.s.rx_size = 0;
   \   0000018C   0x2000             MOVS     R0,#+0
   \   0000018E   0x.... 0x....      LDR.W    R1,??DataTable11_2
   \   00000192   0xF881 0x01BC      STRB     R0,[R1, #+444]
    172             memset(fb.s.rx,0,sizeof(fb.s.rx));
   \   00000196   0x2780             MOVS     R7,#+128
   \   00000198   0xF05F 0x0800      MOVS     R8,#+0
   \   0000019C   0x.... 0x....      LDR.W    R9,??DataTable11_7
   \   000001A0   0x4642             MOV      R2,R8
   \   000001A2   0x0039             MOVS     R1,R7
   \   000001A4   0x4648             MOV      R0,R9
   \   000001A6   0x.... 0x....      BL       __aeabi_memset
    173             fb.m.rx_size = 0;   
   \   000001AA   0x2000             MOVS     R0,#+0
   \   000001AC   0x.... 0x....      LDR.W    R1,??DataTable11_2
   \   000001B0   0xF881 0x00AC      STRB     R0,[R1, #+172]
    174             memset(fb.m.rx,0,sizeof(fb.m.rx));
   \   000001B4   0xF05F 0x0980      MOVS     R9,#+128
   \   000001B8   0xF05F 0x0A00      MOVS     R10,#+0
   \   000001BC   0x.... 0x....      LDR.W    R11,??DataTable11_3
   \   000001C0   0x4652             MOV      R2,R10
   \   000001C2   0x4649             MOV      R1,R9
   \   000001C4   0x4658             MOV      R0,R11
   \   000001C6   0x.... 0x....      BL       __aeabi_memset
    175             
    176             OS_RetriggerTimer( &timer1000 );
   \   000001CA   0x.... 0x....      LDR.W    R0,??DataTable11_1
   \   000001CE   0x.... 0x....      BL       OS_RetriggerTimer
    177             //OS_StartTimer( &fbMasterTimer1 );
    178             //OS_StartTimer( &fbSlaveTimer1 );
    179             
    180             fb.m.enabled = 1;
   \   000001D2   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   000001D6   0x7B00             LDRB     R0,[R0, #+12]
   \   000001D8   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   000001DC   0x.... 0x....      LDR.W    R1,??DataTable11_2
   \   000001E0   0x7308             STRB     R0,[R1, #+12]
    181             fb.coin_acceptor.power_on = 1;
   \   000001E2   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   000001E6   0xF890 0x02CC      LDRB     R0,[R0, #+716]
   \   000001EA   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   000001EE   0x.... 0x....      LDR.W    R1,??DataTable11_2
   \   000001F2   0xF881 0x02CC      STRB     R0,[R1, #+716]
    182          
    183             while (1) {
    184          
    185                evt = OS_WaitEvent( //EVT_FB_EMU
    186                                  //| EVT_DEX_DRD
    187                                  //| 
    188                                    EVT_FB_M_RX
    189                                  | EVT_FB_S_RX
    190                                  //| EVT_FB_M_RX_TMO
    191                                  //| EVT_FB_S_RX_TMO
    192                                  //| EVT_DEX_START
    193                                  //| EVT_DEX_ABORT 
    194                                  | EVT_CL_VEND_OK
    195                                  | EVT_CL_VEND_CANCEL
    196                                  | EVT_CL_VEND_FAIL
    197                                  | EVT_CL_SESSION_COMPLETE
    198                                    );
   \                     ??Task_vending_0: (+1)
   \   000001F6   0x.... 0x....      LDR.W    R0,??DataTable11_26  ;; 0x1e000c
   \   000001FA   0x.... 0x....      BL       OS_WaitEvent
   \   000001FE   0x0004             MOVS     R4,R0
    199          
    200          
    201                if ( evt & EVT_FB_EMU ) {
   \   00000200   0x07E0             LSLS     R0,R4,#+31
   \   00000202   0xD530             BPL.N    ??Task_vending_1
    202                   u32 evtType = 0;
   \   00000204   0x2000             MOVS     R0,#+0
   \   00000206   0x9000             STR      R0,[SP, #+0]
    203                   log( "fb_emu_evt=%d\r\n", fb.emu_evt );
   \   00000208   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   0000020C   0x6881             LDR      R1,[R0, #+8]
   \   0000020E   0x.... 0x....      LDR.W    R0,??DataTable11_27
   \   00000212   0x.... 0x....      BL       log1
    204                   switch ( fb.emu_evt ) {
   \   00000216   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   0000021A   0x6880             LDR      R0,[R0, #+8]
   \   0000021C   0x2801             CMP      R0,#+1
   \   0000021E   0xD004             BEQ.N    ??Task_vending_2
   \   00000220   0xD31D             BCC.N    ??Task_vending_3
   \   00000222   0x2803             CMP      R0,#+3
   \   00000224   0xD00F             BEQ.N    ??Task_vending_4
   \   00000226   0xD301             BCC.N    ??Task_vending_5
   \   00000228   0xE019             B.N      ??Task_vending_3
    205                      case eFbEvtType_FbType:
    206                         break;
   \                     ??Task_vending_2: (+1)
   \   0000022A   0xE018             B.N      ??Task_vending_3
    207                      case eFbEvtType_DoorOpen:
    208                         evtType = eFbEvtType_DoorOpen;
   \                     ??Task_vending_5: (+1)
   \   0000022C   0x2002             MOVS     R0,#+2
   \   0000022E   0x9000             STR      R0,[SP, #+0]
    209                         OS_Q_Put( &fb_evt_q, &evtType, sizeof( evtType ) );
   \   00000230   0x2204             MOVS     R2,#+4
   \   00000232   0x4669             MOV      R1,SP
   \   00000234   0x.... 0x....      LDR.W    R0,??DataTable11_16
   \   00000238   0x.... 0x....      BL       OS_Q_Put
    210                         log( "fb: door open\r\n" );
   \   0000023C   0x.... 0x....      LDR.W    R0,??DataTable11_28
   \   00000240   0x.... 0x....      BL       log1
    211                         break;
   \   00000244   0xE00B             B.N      ??Task_vending_3
    212                      case eFbEvtType_DoorClose:
    213                         evtType = eFbEvtType_DoorClose;
   \                     ??Task_vending_4: (+1)
   \   00000246   0x2003             MOVS     R0,#+3
   \   00000248   0x9000             STR      R0,[SP, #+0]
    214                         OS_Q_Put( &fb_evt_q, &evtType, sizeof( evtType ) );
   \   0000024A   0x2204             MOVS     R2,#+4
   \   0000024C   0x4669             MOV      R1,SP
   \   0000024E   0x.... 0x....      LDR.W    R0,??DataTable11_16
   \   00000252   0x.... 0x....      BL       OS_Q_Put
    215                         log( "fb: door close\r\n" );
   \   00000256   0x.... 0x....      LDR.W    R0,??DataTable11_29
   \   0000025A   0x.... 0x....      BL       log1
    216                         break;
    217                   }
    218                   fb.emu_evt = 0;
   \                     ??Task_vending_3: (+1)
   \   0000025E   0x2000             MOVS     R0,#+0
   \   00000260   0x.... 0x....      LDR.W    R1,??DataTable11_2
   \   00000264   0x6088             STR      R0,[R1, #+8]
    219                }
    220          
    221                if ( evt & EVT_FB_M_RX_TMO ) {
    222                   //log("fb_tx timeout\r\n");
    223                }
    224          
    225                if ( evt & EVT_FB_S_RX_TMO ) {
    226                   //log("fb_rx timeout\r\n");
    227                }
    228          
    229                if ( evt & EVT_FB_M_RX )
   \                     ??Task_vending_1: (+1)
   \   00000266   0x0760             LSLS     R0,R4,#+29
   \   00000268   0xD501             BPL.N    ??Task_vending_6
    230                {
    231                  //mdb_evt_m_rx();
    232          #if defined ( MDB_SNIFFER )
    233                  sniffer_m_rx();
   \   0000026A   0x.... 0x....      BL       sniffer_m_rx
    234          #endif          
    235                }
    236          
    237                if ( evt & EVT_FB_S_RX )
   \                     ??Task_vending_6: (+1)
   \   0000026E   0x0720             LSLS     R0,R4,#+28
   \   00000270   0xD501             BPL.N    ??Task_vending_7
    238                {
    239                  //mdb_evt_s_rx();
    240          #if defined ( MDB_SNIFFER )
    241                  sniffer_s_rx();
   \   00000272   0x.... 0x....      BL       sniffer_s_rx
    242          #endif        
    243                }
    244                
    245                if ( evt & EVT_CL_VEND_OK )
   \                     ??Task_vending_7: (+1)
   \   00000276   0x03A0             LSLS     R0,R4,#+14
   \   00000278   0xD50D             BPL.N    ??Task_vending_8
    246                {
    247                  u8  bt_buf[ 16 ];
    248                  int bt_buf_sz = sprintf((char*)bt_buf, "VEND,OK,%d\n", fb.cashless.item_price);
   \   0000027A   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   0000027E   0xF8B0 0x22C8      LDRH     R2,[R0, #+712]
   \   00000282   0x.... 0x....      LDR.W    R1,??DataTable11_30
   \   00000286   0xA80C             ADD      R0,SP,#+48
   \   00000288   0x.... 0x....      BL       sprintf
   \   0000028C   0x0005             MOVS     R5,R0
    249                  sw_uart_tx( bt_buf, bt_buf_sz );        
   \   0000028E   0x0029             MOVS     R1,R5
   \   00000290   0xA80C             ADD      R0,SP,#+48
   \   00000292   0x.... 0x....      BL       sw_uart_tx
    250                }
    251          
    252                if ( evt & EVT_CL_VEND_CANCEL )
   \                     ??Task_vending_8: (+1)
   \   00000296   0x0360             LSLS     R0,R4,#+13
   \   00000298   0xD50D             BPL.N    ??Task_vending_9
    253                {
    254                  u8 bt_buf[] = "VEND,CANCEL\n";
   \   0000029A   0xA804             ADD      R0,SP,#+16
   \   0000029C   0x.... 0x....      LDR.W    R1,??DataTable11_31
   \   000002A0   0x220D             MOVS     R2,#+13
   \   000002A2   0x.... 0x....      BL       __aeabi_memcpy
    255                  int bt_buf_sz = strlen((const char*)bt_buf);
   \   000002A6   0xA804             ADD      R0,SP,#+16
   \   000002A8   0x.... 0x....      BL       strlen
   \   000002AC   0x0005             MOVS     R5,R0
    256                  sw_uart_tx( bt_buf, bt_buf_sz );        
   \   000002AE   0x0029             MOVS     R1,R5
   \   000002B0   0xA804             ADD      R0,SP,#+16
   \   000002B2   0x.... 0x....      BL       sw_uart_tx
    257                }
    258          
    259                if ( evt & EVT_CL_VEND_FAIL )
   \                     ??Task_vending_9: (+1)
   \   000002B6   0x0320             LSLS     R0,R4,#+12
   \   000002B8   0xD50D             BPL.N    ??Task_vending_10
    260                {
    261                  u8 bt_buf[] = "VEND,FAIL\n";
   \   000002BA   0xA801             ADD      R0,SP,#+4
   \   000002BC   0x.... 0x....      LDR.W    R1,??DataTable11_32
   \   000002C0   0x220B             MOVS     R2,#+11
   \   000002C2   0x.... 0x....      BL       __aeabi_memcpy
    262                  int bt_buf_sz = strlen((const char*)bt_buf);
   \   000002C6   0xA801             ADD      R0,SP,#+4
   \   000002C8   0x.... 0x....      BL       strlen
   \   000002CC   0x0005             MOVS     R5,R0
    263                  sw_uart_tx( bt_buf, bt_buf_sz );        
   \   000002CE   0x0029             MOVS     R1,R5
   \   000002D0   0xA801             ADD      R0,SP,#+4
   \   000002D2   0x.... 0x....      BL       sw_uart_tx
    264                }
    265                
    266                if ( evt & EVT_CL_SESSION_COMPLETE )
   \                     ??Task_vending_10: (+1)
   \   000002D6   0x02E0             LSLS     R0,R4,#+11
   \   000002D8   0xD509             BPL.N    ??Task_vending_11
    267                {
    268                  u8  bt_buf[ 16 ];
    269                  int bt_buf_sz = sprintf((char*)bt_buf, "SESSION COMPLETE\n");
   \   000002DA   0x.... 0x....      LDR.W    R1,??DataTable11_33
   \   000002DE   0xA808             ADD      R0,SP,#+32
   \   000002E0   0x.... 0x....      BL       sprintf
   \   000002E4   0x0005             MOVS     R5,R0
    270                  sw_uart_tx( bt_buf, bt_buf_sz );                
   \   000002E6   0x0029             MOVS     R1,R5
   \   000002E8   0xA808             ADD      R0,SP,#+32
   \   000002EA   0x.... 0x....      BL       sw_uart_tx
    271                }
    272          
    273                if ( fb.en_log != fb.prev_en_log ) {
    274                   //log( "fb mon is reset, %d\r\n", sizeof(mdb_mon) );
    275                }
    276          
    277                fb.prev_en_log = fb.en_log;
   \                     ??Task_vending_11: (+1)
   \   000002EE   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   000002F2   0x6840             LDR      R0,[R0, #+4]
   \   000002F4   0x0880             LSRS     R0,R0,#+2
   \   000002F6   0x.... 0x....      LDR.W    R1,??DataTable11_2
   \   000002FA   0x6849             LDR      R1,[R1, #+4]
   \   000002FC   0xF360 0x01C3      BFI      R1,R0,#+3,#+1
   \   00000300   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   00000304   0x6041             STR      R1,[R0, #+4]
   \   00000306   0xE776             B.N      ??Task_vending_0
    278             }
    279          }
    280          
    281          ////////////////////////////////////////////////////////////////////////////////

   \                                 In section .text, align 2, keep-with-next
    282          void init_fb( void ) 
    283          {  
   \                     init_fb: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    284             /* Configure USART2 Tx (PA.2) as alternate function push-pull */
    285             GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;
   \   00000002   0x2004             MOVS     R0,#+4
   \   00000004   0x.... 0x....      LDR.W    R1,??DataTable11_9
   \   00000008   0x8008             STRH     R0,[R1, #+0]
    286             GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
   \   0000000A   0x2003             MOVS     R0,#+3
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable11_9
   \   00000010   0x7088             STRB     R0,[R1, #+2]
    287             GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
   \   00000012   0x2018             MOVS     R0,#+24
   \   00000014   0x.... 0x....      LDR.W    R1,??DataTable11_9
   \   00000018   0x70C8             STRB     R0,[R1, #+3]
    288             GPIO_Init(GPIOA, &GPIO_InitStructure);
   \   0000001A   0x.... 0x....      LDR.W    R1,??DataTable11_9
   \   0000001E   0x.... 0x....      LDR.W    R0,??DataTable11_34  ;; 0x40010800
   \   00000022   0x.... 0x....      BL       GPIO_Init
    289          
    290             /* Configure USART1 Tx (PA.9) as alternate function push-pull */
    291             GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9;
   \   00000026   0xF44F 0x7000      MOV      R0,#+512
   \   0000002A   0x.... 0x....      LDR.W    R1,??DataTable11_9
   \   0000002E   0x8008             STRH     R0,[R1, #+0]
    292             GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
   \   00000030   0x2003             MOVS     R0,#+3
   \   00000032   0x.... 0x....      LDR.W    R1,??DataTable11_9
   \   00000036   0x7088             STRB     R0,[R1, #+2]
    293             GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
   \   00000038   0x2018             MOVS     R0,#+24
   \   0000003A   0x.... 0x....      LDR.W    R1,??DataTable11_9
   \   0000003E   0x70C8             STRB     R0,[R1, #+3]
    294             GPIO_Init(GPIOA, &GPIO_InitStructure);
   \   00000040   0x.... 0x....      LDR.W    R1,??DataTable11_9
   \   00000044   0x.... 0x....      LDR.W    R0,??DataTable11_34  ;; 0x40010800
   \   00000048   0x.... 0x....      BL       GPIO_Init
    295            
    296             USART_Cmd( USART1, DISABLE );
   \   0000004C   0x2100             MOVS     R1,#+0
   \   0000004E   0x.... 0x....      LDR.W    R0,??DataTable11_35  ;; 0x40013800
   \   00000052   0x.... 0x....      BL       USART_Cmd
    297             USART_Cmd( USART2, DISABLE );
   \   00000056   0x2100             MOVS     R1,#+0
   \   00000058   0x.... 0x....      LDR.W    R0,??DataTable11_36  ;; 0x40004400
   \   0000005C   0x.... 0x....      BL       USART_Cmd
    298          
    299             USART_DeInit( USART1 );
   \   00000060   0x.... 0x....      LDR.W    R0,??DataTable11_35  ;; 0x40013800
   \   00000064   0x.... 0x....      BL       USART_DeInit
    300             USART_DeInit( USART2 );
   \   00000068   0x.... 0x....      LDR.W    R0,??DataTable11_36  ;; 0x40004400
   \   0000006C   0x.... 0x....      BL       USART_DeInit
    301          
    302             USART_InitStructure.USART_BaudRate = 9600;
   \   00000070   0xF44F 0x5016      MOV      R0,#+9600
   \   00000074   0x.... 0x....      LDR.W    R1,??DataTable11_37
   \   00000078   0x6008             STR      R0,[R1, #+0]
    303             USART_InitStructure.USART_WordLength = USART_WordLength_9b;
   \   0000007A   0xF44F 0x5080      MOV      R0,#+4096
   \   0000007E   0x.... 0x....      LDR.W    R1,??DataTable11_37
   \   00000082   0x8088             STRH     R0,[R1, #+4]
    304             USART_InitStructure.USART_StopBits = USART_StopBits_1;
   \   00000084   0x2000             MOVS     R0,#+0
   \   00000086   0x.... 0x....      LDR.W    R1,??DataTable11_37
   \   0000008A   0x80C8             STRH     R0,[R1, #+6]
    305             USART_InitStructure.USART_Parity = USART_Parity_No;
   \   0000008C   0x2000             MOVS     R0,#+0
   \   0000008E   0x.... 0x....      LDR.W    R1,??DataTable11_37
   \   00000092   0x8108             STRH     R0,[R1, #+8]
    306             USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
   \   00000094   0x2000             MOVS     R0,#+0
   \   00000096   0x.... 0x....      LDR.W    R1,??DataTable11_37
   \   0000009A   0x8188             STRH     R0,[R1, #+12]
    307             USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
   \   0000009C   0x200C             MOVS     R0,#+12
   \   0000009E   0x.... 0x....      LDR.W    R1,??DataTable11_37
   \   000000A2   0x8148             STRH     R0,[R1, #+10]
    308             USART_Init(USART1, &USART_InitStructure);
   \   000000A4   0x.... 0x....      LDR.W    R1,??DataTable11_37
   \   000000A8   0x.... 0x....      LDR.W    R0,??DataTable11_35  ;; 0x40013800
   \   000000AC   0x.... 0x....      BL       USART_Init
    309             USART_Init(USART2, &USART_InitStructure);   
   \   000000B0   0x.... 0x....      LDR.W    R1,??DataTable11_37
   \   000000B4   0x.... 0x....      LDR.W    R0,??DataTable11_36  ;; 0x40004400
   \   000000B8   0x.... 0x....      BL       USART_Init
    310             
    311             //USART_ITConfig( USART1, USART_IT_TXE, ENABLE );
    312             USART_ITConfig( USART2, USART_IT_TXE, ENABLE );
   \   000000BC   0x2201             MOVS     R2,#+1
   \   000000BE   0xF240 0x7127      MOVW     R1,#+1831
   \   000000C2   0x.... 0x....      LDR.W    R0,??DataTable11_36  ;; 0x40004400
   \   000000C6   0x.... 0x....      BL       USART_ITConfig
    313             //USART_ITConfig( USART1, USART_IT_TC, ENABLE );   
    314             //USART_ITConfig( USART2, USART_IT_TC, ENABLE );
    315             USART_ITConfig( USART1, USART_IT_RXNE, ENABLE );
   \   000000CA   0x2201             MOVS     R2,#+1
   \   000000CC   0xF240 0x5125      MOVW     R1,#+1317
   \   000000D0   0x.... 0x....      LDR.W    R0,??DataTable11_35  ;; 0x40013800
   \   000000D4   0x.... 0x....      BL       USART_ITConfig
    316             USART_ITConfig( USART2, USART_IT_RXNE, ENABLE );
   \   000000D8   0x2201             MOVS     R2,#+1
   \   000000DA   0xF240 0x5125      MOVW     R1,#+1317
   \   000000DE   0x.... 0x....      LDR.W    R0,??DataTable11_36  ;; 0x40004400
   \   000000E2   0x.... 0x....      BL       USART_ITConfig
    317             
    318             USART_Init( USART1, &USART_InitStructure );
   \   000000E6   0x.... 0x....      LDR.W    R1,??DataTable11_37
   \   000000EA   0x.... 0x....      LDR.W    R0,??DataTable11_35  ;; 0x40013800
   \   000000EE   0x.... 0x....      BL       USART_Init
    319             USART_Init( USART2, &USART_InitStructure );
   \   000000F2   0x.... 0x....      LDR.W    R1,??DataTable11_37
   \   000000F6   0x.... 0x....      LDR.W    R0,??DataTable11_36  ;; 0x40004400
   \   000000FA   0x.... 0x....      BL       USART_Init
    320          
    321             USART_Cmd( USART1, ENABLE );
   \   000000FE   0x2101             MOVS     R1,#+1
   \   00000100   0x.... 0x....      LDR.W    R0,??DataTable11_35  ;; 0x40013800
   \   00000104   0x.... 0x....      BL       USART_Cmd
    322             USART_Cmd( USART2, ENABLE );
   \   00000108   0x2101             MOVS     R1,#+1
   \   0000010A   0x.... 0x....      LDR.W    R0,??DataTable11_36  ;; 0x40004400
   \   0000010E   0x.... 0x....      BL       USART_Cmd
    323          }
   \   00000112   0xBD01             POP      {R0,PC}          ;; return
    324          ////////////////////////////////////////////////////////////////////////////////

   \                                 In section .text, align 2, keep-with-next
    325          void fb_s_tx( u16* p, u16 sz )
    326          {
   \                     fb_s_tx: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    327            memmove( &fb.s.tx[ fb.s.tx_size ], p, sz * sizeof(*p) );  
   \   00000006   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000008   0x006E             LSLS     R6,R5,#+1
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   0000000E   0x.... 0x....      LDR.W    R1,??DataTable11_2
   \   00000012   0xF891 0x123E      LDRB     R1,[R1, #+574]
   \   00000016   0xEB10 0x0041      ADDS     R0,R0,R1, LSL #+1
   \   0000001A   0xF510 0x7710      ADDS     R7,R0,#+576
   \   0000001E   0x0032             MOVS     R2,R6
   \   00000020   0x0021             MOVS     R1,R4
   \   00000022   0x0038             MOVS     R0,R7
   \   00000024   0x.... 0x....      BL       __aeabi_memmove
    328            fb.s.tx_size += sz;  
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   0000002C   0xF890 0x023E      LDRB     R0,[R0, #+574]
   \   00000030   0x1828             ADDS     R0,R5,R0
   \   00000032   0x.... 0x....      LDR.W    R1,??DataTable11_2
   \   00000036   0xF881 0x023E      STRB     R0,[R1, #+574]
    329            USART_ITConfig( USART1, USART_IT_TXE , ENABLE );
   \   0000003A   0x2201             MOVS     R2,#+1
   \   0000003C   0xF240 0x7127      MOVW     R1,#+1831
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable11_35  ;; 0x40013800
   \   00000044   0x.... 0x....      BL       USART_ITConfig
    330          }
   \   00000048   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    331          

   \                                 In section .text, align 2, keep-with-next
    332          void fb_m_tx( u16* p, u16 sz )
    333          {
   \                     fb_m_tx: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    334            memcpy( &fb.m.tx[ fb.m.tx_size ], p, sz * sizeof(*p));  
   \   00000006   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000008   0x006E             LSLS     R6,R5,#+1
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   0000000E   0x.... 0x....      LDR.W    R1,??DataTable11_2
   \   00000012   0xF891 0x112E      LDRB     R1,[R1, #+302]
   \   00000016   0xEB10 0x0041      ADDS     R0,R0,R1, LSL #+1
   \   0000001A   0xF510 0x7798      ADDS     R7,R0,#+304
   \   0000001E   0x0032             MOVS     R2,R6
   \   00000020   0x0021             MOVS     R1,R4
   \   00000022   0x0038             MOVS     R0,R7
   \   00000024   0x.... 0x....      BL       __aeabi_memcpy
    335            fb.m.tx_size += sz;
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   0000002C   0xF890 0x012E      LDRB     R0,[R0, #+302]
   \   00000030   0x1828             ADDS     R0,R5,R0
   \   00000032   0x.... 0x....      LDR.W    R1,??DataTable11_2
   \   00000036   0xF881 0x012E      STRB     R0,[R1, #+302]
    336            USART_ITConfig( USART2, USART_IT_TXE , ENABLE );
   \   0000003A   0x2201             MOVS     R2,#+1
   \   0000003C   0xF240 0x7127      MOVW     R1,#+1831
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable11_36  ;; 0x40004400
   \   00000044   0x.... 0x....      BL       USART_ITConfig
    337          }
   \   00000048   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    338          
    339          /* USART1 Interrupt ----------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
    340          __irq void USART1_IRQHandler(void) {
   \                     USART1_IRQHandler: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
    341          
    342            OS_EnterNestableInterrupt();
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable11_38
   \   00000008   0x7800             LDRB     R0,[R0, #+0]
   \   0000000A   0x1C40             ADDS     R0,R0,#+1
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable11_38
   \   00000010   0x7008             STRB     R0,[R1, #+0]
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable11_39
   \   00000016   0x7800             LDRB     R0,[R0, #+0]
   \   00000018   0x1C40             ADDS     R0,R0,#+1
   \   0000001A   0x.... 0x....      LDR.W    R1,??DataTable11_39
   \   0000001E   0x7008             STRB     R0,[R1, #+0]
   \   00000020   0x.... 0x....      BL       OS_AssertCPUInISRMode
    343          
    344            if ( USART_GetFlagStatus( USART1, USART_FLAG_ORE ) )
   \   00000024   0x2108             MOVS     R1,#+8
   \   00000026   0x.... 0x....      LDR.W    R0,??DataTable11_35  ;; 0x40013800
   \   0000002A   0x.... 0x....      BL       USART_GetFlagStatus
   \   0000002E   0x2800             CMP      R0,#+0
   \   00000030   0xD004             BEQ.N    ??USART1_IRQHandler_0
    345            {
    346              USART_ClearFlag( USART1, USART_FLAG_ORE );
   \   00000032   0x2108             MOVS     R1,#+8
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable11_35  ;; 0x40013800
   \   00000038   0x.... 0x....      BL       USART_ClearFlag
    347            }
    348            if ( USART_GetFlagStatus( USART1, USART_FLAG_FE ) )
   \                     ??USART1_IRQHandler_0: (+1)
   \   0000003C   0x2102             MOVS     R1,#+2
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable11_35  ;; 0x40013800
   \   00000042   0x.... 0x....      BL       USART_GetFlagStatus
   \   00000046   0x2800             CMP      R0,#+0
   \   00000048   0xD004             BEQ.N    ??USART1_IRQHandler_1
    349            {
    350              USART_ClearFlag( USART1, USART_FLAG_FE );
   \   0000004A   0x2102             MOVS     R1,#+2
   \   0000004C   0x.... 0x....      LDR.W    R0,??DataTable11_35  ;; 0x40013800
   \   00000050   0x.... 0x....      BL       USART_ClearFlag
    351            }
    352            if ( USART_GetFlagStatus( USART1, USART_FLAG_NE ) )
   \                     ??USART1_IRQHandler_1: (+1)
   \   00000054   0x2104             MOVS     R1,#+4
   \   00000056   0x.... 0x....      LDR.W    R0,??DataTable11_35  ;; 0x40013800
   \   0000005A   0x.... 0x....      BL       USART_GetFlagStatus
   \   0000005E   0x2800             CMP      R0,#+0
   \   00000060   0xD004             BEQ.N    ??USART1_IRQHandler_2
    353            {
    354              USART_ClearFlag( USART1, USART_FLAG_NE );
   \   00000062   0x2104             MOVS     R1,#+4
   \   00000064   0x.... 0x....      LDR.W    R0,??DataTable11_35  ;; 0x40013800
   \   00000068   0x.... 0x....      BL       USART_ClearFlag
    355            }
    356            if ( USART_GetFlagStatus( USART1, USART_FLAG_PE ) )
   \                     ??USART1_IRQHandler_2: (+1)
   \   0000006C   0x2101             MOVS     R1,#+1
   \   0000006E   0x.... 0x....      LDR.W    R0,??DataTable11_35  ;; 0x40013800
   \   00000072   0x.... 0x....      BL       USART_GetFlagStatus
   \   00000076   0x2800             CMP      R0,#+0
   \   00000078   0xD004             BEQ.N    ??USART1_IRQHandler_3
    357            {
    358              USART_ClearFlag( USART1, USART_FLAG_PE );
   \   0000007A   0x2101             MOVS     R1,#+1
   \   0000007C   0x.... 0x....      LDR.W    R0,??DataTable11_35  ;; 0x40013800
   \   00000080   0x.... 0x....      BL       USART_ClearFlag
    359            }
    360            
    361            if ( USART_GetFlagStatus( USART1, USART_FLAG_RXNE ) )
   \                     ??USART1_IRQHandler_3: (+1)
   \   00000084   0x2120             MOVS     R1,#+32
   \   00000086   0x.... 0x....      LDR.W    R0,??DataTable11_35  ;; 0x40013800
   \   0000008A   0x.... 0x....      BL       USART_GetFlagStatus
   \   0000008E   0x2800             CMP      R0,#+0
   \   00000090   0xD045             BEQ.N    ??USART1_IRQHandler_4
    362            {
    363              u32 curr_time = OS_GetTime_us();    
   \   00000092   0x.... 0x....      BL       OS_GetTime_us
   \   00000096   0x0004             MOVS     R4,R0
    364              volatile u16 b = USART_ReceiveData( USART1 );
   \   00000098   0x.... 0x....      LDR.W    R0,??DataTable11_35  ;; 0x40013800
   \   0000009C   0x.... 0x....      BL       USART_ReceiveData
   \   000000A0   0xF8AD 0x0000      STRH     R0,[SP, #+0]
    365              if ( fb.s.rx_size < MDB_MAX_LEN )
   \   000000A4   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   000000A8   0xF890 0x01BC      LDRB     R0,[R0, #+444]
   \   000000AC   0x2824             CMP      R0,#+36
   \   000000AE   0xDA22             BGE.N    ??USART1_IRQHandler_5
    366              {
    367                fb.s.rx[ fb.s.rx_size++ ] = b;
   \   000000B0   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   000000B4   0x.... 0x....      LDR.W    R1,??DataTable11_2
   \   000000B8   0xF891 0x11BC      LDRB     R1,[R1, #+444]
   \   000000BC   0xEB10 0x0041      ADDS     R0,R0,R1, LSL #+1
   \   000000C0   0xF8BD 0x1000      LDRH     R1,[SP, #+0]
   \   000000C4   0xF8A0 0x11BE      STRH     R1,[R0, #+446]
   \   000000C8   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   000000CC   0xF890 0x01BC      LDRB     R0,[R0, #+444]
   \   000000D0   0x1C40             ADDS     R0,R0,#+1
   \   000000D2   0x.... 0x....      LDR.W    R1,??DataTable11_2
   \   000000D6   0xF881 0x01BC      STRB     R0,[R1, #+444]
    368                fb.s.rx_last_time = curr_time;
   \   000000DA   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   000000DE   0xF8C0 0x41B8      STR      R4,[R0, #+440]
    369                if ( fb.s.rx_size == 0 )
   \   000000E2   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   000000E6   0xF890 0x01BC      LDRB     R0,[R0, #+444]
   \   000000EA   0x2800             CMP      R0,#+0
   \   000000EC   0xD103             BNE.N    ??USART1_IRQHandler_5
    370                {
    371                  fb.s.rx_start_time = curr_time;        
   \   000000EE   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   000000F2   0xF8C0 0x41B0      STR      R4,[R0, #+432]
    372                }
    373              }
    374          
    375              fb.s_tmo = 0;
   \                     ??USART1_IRQHandler_5: (+1)
   \   000000F6   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   000000FA   0x6840             LDR      R0,[R0, #+4]
   \   000000FC   0xF030 0x0002      BICS     R0,R0,#0x2
   \   00000100   0x.... 0x....      LDR.W    R1,??DataTable11_2
   \   00000104   0x6048             STR      R0,[R1, #+4]
    376              
    377              if ( b & MDB_MODE_MASK )
   \   00000106   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   0000010A   0x05C0             LSLS     R0,R0,#+23
   \   0000010C   0xD503             BPL.N    ??USART1_IRQHandler_6
    378              {
    379                fb.s.rx_msg_time = curr_time;
   \   0000010E   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   00000112   0xF8C0 0x41B4      STR      R4,[R0, #+436]
    380                //OS_StopTimer( &t_fbs_msg_end );
    381                //fbs_msg_end();
    382              }
    383              //else
    384              //{
    385                OS_RetriggerTimer( &t_fbs_msg_end );      
   \                     ??USART1_IRQHandler_6: (+1)
   \   00000116   0x.... 0x....      LDR.W    R0,??DataTable11_14
   \   0000011A   0x.... 0x....      BL       OS_RetriggerTimer
    386              //}   
    387          #if defined ( MDB_PROXY ) && ( MDB_PROXY == BILL_VALIDATOR )    
    388              //b |= 0x100;
    389              fb_m_tx((u16*)&b, 1);
    390              //fb_m_tx(&fb.s.rx[ fb.s.rx_size-1 ], 1);    
    391          #endif
    392              
    393            }
    394          
    395            //Transmit
    396            if ( USART_GetFlagStatus( USART1, USART_FLAG_TXE ) && ( USART_GetITStatus( USART1, USART_IT_TXE ) == SET ) )
   \                     ??USART1_IRQHandler_4: (+1)
   \   0000011E   0x2180             MOVS     R1,#+128
   \   00000120   0x.... 0x....      LDR.W    R0,??DataTable11_35  ;; 0x40013800
   \   00000124   0x.... 0x....      BL       USART_GetFlagStatus
   \   00000128   0x2800             CMP      R0,#+0
   \   0000012A   0xD044             BEQ.N    ??USART1_IRQHandler_7
   \   0000012C   0xF240 0x7127      MOVW     R1,#+1831
   \   00000130   0x.... 0x....      LDR.W    R0,??DataTable11_35  ;; 0x40013800
   \   00000134   0x.... 0x....      BL       USART_GetITStatus
   \   00000138   0x2801             CMP      R0,#+1
   \   0000013A   0xD13C             BNE.N    ??USART1_IRQHandler_7
    397            {
    398              if( fb.s.tx_size > 0 ) 
   \   0000013C   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   00000140   0xF890 0x023E      LDRB     R0,[R0, #+574]
   \   00000144   0x2800             CMP      R0,#+0
   \   00000146   0xD024             BEQ.N    ??USART1_IRQHandler_8
    399              {
    400                volatile u16 b =  fb.s.tx[ fb.s.tx_cnt++ ];
   \   00000148   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   0000014C   0x.... 0x....      LDR.W    R1,??DataTable11_2
   \   00000150   0xF891 0x123F      LDRB     R1,[R1, #+575]
   \   00000154   0xEB10 0x0041      ADDS     R0,R0,R1, LSL #+1
   \   00000158   0xF8B0 0x0240      LDRH     R0,[R0, #+576]
   \   0000015C   0xF8AD 0x0000      STRH     R0,[SP, #+0]
   \   00000160   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   00000164   0xF890 0x023F      LDRB     R0,[R0, #+575]
   \   00000168   0x1C40             ADDS     R0,R0,#+1
   \   0000016A   0x.... 0x....      LDR.W    R1,??DataTable11_2
   \   0000016E   0xF881 0x023F      STRB     R0,[R1, #+575]
    401                USART_SendData( USART1, b );
   \   00000172   0xF8BD 0x1000      LDRH     R1,[SP, #+0]
   \   00000176   0x.... 0x....      LDR.W    R0,??DataTable11_35  ;; 0x40013800
   \   0000017A   0x.... 0x....      BL       USART_SendData
    402                fb.s.tx_size--;
   \   0000017E   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   00000182   0xF890 0x023E      LDRB     R0,[R0, #+574]
   \   00000186   0x1E40             SUBS     R0,R0,#+1
   \   00000188   0x.... 0x....      LDR.W    R1,??DataTable11_2
   \   0000018C   0xF881 0x023E      STRB     R0,[R1, #+574]
   \   00000190   0xE011             B.N      ??USART1_IRQHandler_7
    403              }
    404              else if( fb.s.tx_size == 0 ) 
   \                     ??USART1_IRQHandler_8: (+1)
   \   00000192   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   00000196   0xF890 0x023E      LDRB     R0,[R0, #+574]
   \   0000019A   0x2800             CMP      R0,#+0
   \   0000019C   0xD10B             BNE.N    ??USART1_IRQHandler_7
    405              {
    406                fb.s.tx_cnt = 0;
   \   0000019E   0x2000             MOVS     R0,#+0
   \   000001A0   0x.... 0x....      LDR.W    R1,??DataTable11_2
   \   000001A4   0xF881 0x023F      STRB     R0,[R1, #+575]
    407                USART_ITConfig( USART1, USART_IT_TXE , DISABLE );         
   \   000001A8   0x2200             MOVS     R2,#+0
   \   000001AA   0xF240 0x7127      MOVW     R1,#+1831
   \   000001AE   0x.... 0x....      LDR.W    R0,??DataTable11_35  ;; 0x40013800
   \   000001B2   0x.... 0x....      BL       USART_ITConfig
    408              }  
    409            }
    410          
    411            OS_LeaveNestableInterrupt();
   \                     ??USART1_IRQHandler_7: (+1)
   \   000001B6   0x2080             MOVS     R0,#+128
   \   000001B8   0xF380 0x8811      MSR      BASEPRI,R0
   \   000001BC   0xBF00             Nop      
   \   000001BE   0xBF00             Nop      
   \   000001C0   0x.... 0x....      LDR.W    R0,??DataTable11_38
   \   000001C4   0x7800             LDRB     R0,[R0, #+0]
   \   000001C6   0x1E41             SUBS     R1,R0,#+1
   \   000001C8   0x.... 0x....      LDR.W    R2,??DataTable11_38
   \   000001CC   0x7011             STRB     R1,[R2, #+0]
   \   000001CE   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001D0   0x2800             CMP      R0,#+0
   \   000001D2   0xD102             BNE.N    ??USART1_IRQHandler_9
   \   000001D4   0x2098             MOVS     R0,#+152
   \   000001D6   0x.... 0x....      BL       OS_Error
   \                     ??USART1_IRQHandler_9: (+1)
   \   000001DA   0x.... 0x....      LDR.W    R0,??DataTable11_39
   \   000001DE   0x7800             LDRB     R0,[R0, #+0]
   \   000001E0   0x2801             CMP      R0,#+1
   \   000001E2   0xD106             BNE.N    ??USART1_IRQHandler_10
   \   000001E4   0x.... 0x....      LDR.W    R0,??DataTable11_39
   \   000001E8   0x6840             LDR      R0,[R0, #+4]
   \   000001EA   0x2800             CMP      R0,#+0
   \   000001EC   0xD001             BEQ.N    ??USART1_IRQHandler_10
   \   000001EE   0x.... 0x....      BL       OS_SwitchFromInt
   \                     ??USART1_IRQHandler_10: (+1)
   \   000001F2   0x.... 0x....      LDR.W    R0,??DataTable11_39
   \   000001F6   0x7800             LDRB     R0,[R0, #+0]
   \   000001F8   0x1E40             SUBS     R0,R0,#+1
   \   000001FA   0x.... 0x....      LDR.W    R1,??DataTable11_39
   \   000001FE   0x7008             STRB     R0,[R1, #+0]
   \   00000200   0x2000             MOVS     R0,#+0
   \   00000202   0xF380 0x8811      MSR      BASEPRI,R0
    412          }
   \   00000206   0xBD13             POP      {R0,R1,R4,PC}    ;; return
    413          ////////////////////////////////////////////////////////////////////////////////
    414          /* USART2 Interrupt ----------------------------------------------*/
    415          //Tx Loop

   \                                 In section .text, align 2, keep-with-next
    416          __irq void USART2_IRQHandler(void)
    417          {
   \                     USART2_IRQHandler: (+1)
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \   00000004   0xB082             SUB      SP,SP,#+8
    418            //static u8 tr = 0;
    419          
    420            OS_EnterNestableInterrupt();
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable11_38
   \   0000000A   0x7800             LDRB     R0,[R0, #+0]
   \   0000000C   0x1C40             ADDS     R0,R0,#+1
   \   0000000E   0x.... 0x....      LDR.W    R1,??DataTable11_38
   \   00000012   0x7008             STRB     R0,[R1, #+0]
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable11_39
   \   00000018   0x7800             LDRB     R0,[R0, #+0]
   \   0000001A   0x1C40             ADDS     R0,R0,#+1
   \   0000001C   0x.... 0x....      LDR.W    R1,??DataTable11_39
   \   00000020   0x7008             STRB     R0,[R1, #+0]
   \   00000022   0x.... 0x....      BL       OS_AssertCPUInISRMode
    421            //OS_EnterInterrupt();
    422             
    423            if ( USART_GetFlagStatus( USART2, USART_FLAG_ORE ) )
   \   00000026   0x2108             MOVS     R1,#+8
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable11_36  ;; 0x40004400
   \   0000002C   0x.... 0x....      BL       USART_GetFlagStatus
   \   00000030   0x2800             CMP      R0,#+0
   \   00000032   0xD004             BEQ.N    ??USART2_IRQHandler_0
    424            {
    425              USART_ClearFlag(USART2,USART_FLAG_ORE);
   \   00000034   0x2108             MOVS     R1,#+8
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable11_36  ;; 0x40004400
   \   0000003A   0x.... 0x....      BL       USART_ClearFlag
    426            }
    427            if ( USART_GetFlagStatus( USART2, USART_FLAG_FE ) )
   \                     ??USART2_IRQHandler_0: (+1)
   \   0000003E   0x2102             MOVS     R1,#+2
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable11_36  ;; 0x40004400
   \   00000044   0x.... 0x....      BL       USART_GetFlagStatus
   \   00000048   0x2800             CMP      R0,#+0
   \   0000004A   0xD004             BEQ.N    ??USART2_IRQHandler_1
    428            {
    429              USART_ClearFlag(USART2,USART_FLAG_FE);
   \   0000004C   0x2102             MOVS     R1,#+2
   \   0000004E   0x.... 0x....      LDR.W    R0,??DataTable11_36  ;; 0x40004400
   \   00000052   0x.... 0x....      BL       USART_ClearFlag
    430            }
    431            if ( USART_GetFlagStatus( USART2, USART_FLAG_NE ) )
   \                     ??USART2_IRQHandler_1: (+1)
   \   00000056   0x2104             MOVS     R1,#+4
   \   00000058   0x.... 0x....      LDR.W    R0,??DataTable11_36  ;; 0x40004400
   \   0000005C   0x.... 0x....      BL       USART_GetFlagStatus
   \   00000060   0x2800             CMP      R0,#+0
   \   00000062   0xD004             BEQ.N    ??USART2_IRQHandler_2
    432            {
    433              USART_ClearFlag(USART2,USART_FLAG_NE);
   \   00000064   0x2104             MOVS     R1,#+4
   \   00000066   0x.... 0x....      LDR.W    R0,??DataTable11_36  ;; 0x40004400
   \   0000006A   0x.... 0x....      BL       USART_ClearFlag
    434            }
    435            if ( USART_GetFlagStatus( USART2, USART_FLAG_PE ) )
   \                     ??USART2_IRQHandler_2: (+1)
   \   0000006E   0x2101             MOVS     R1,#+1
   \   00000070   0x.... 0x....      LDR.W    R0,??DataTable11_36  ;; 0x40004400
   \   00000074   0x.... 0x....      BL       USART_GetFlagStatus
   \   00000078   0x2800             CMP      R0,#+0
   \   0000007A   0xD004             BEQ.N    ??USART2_IRQHandler_3
    436            {
    437              USART_ClearFlag(USART2,USART_FLAG_PE);
   \   0000007C   0x2101             MOVS     R1,#+1
   \   0000007E   0x.... 0x....      LDR.W    R0,??DataTable11_36  ;; 0x40004400
   \   00000082   0x.... 0x....      BL       USART_ClearFlag
    438            }
    439            if ( USART_GetFlagStatus( USART2, USART_FLAG_LBD ) )
   \                     ??USART2_IRQHandler_3: (+1)
   \   00000086   0xF44F 0x7180      MOV      R1,#+256
   \   0000008A   0x.... 0x....      LDR.W    R0,??DataTable11_36  ;; 0x40004400
   \   0000008E   0x.... 0x....      BL       USART_GetFlagStatus
   \   00000092   0x2800             CMP      R0,#+0
   \   00000094   0xD005             BEQ.N    ??USART2_IRQHandler_4
    440            {
    441              USART_ClearFlag(USART2,USART_FLAG_LBD);
   \   00000096   0xF44F 0x7180      MOV      R1,#+256
   \   0000009A   0x.... 0x....      LDR.W    R0,??DataTable11_36  ;; 0x40004400
   \   0000009E   0x.... 0x....      BL       USART_ClearFlag
    442            }
    443                
    444            if ( USART_GetFlagStatus( USART2, USART_FLAG_RXNE ) )
   \                     ??USART2_IRQHandler_4: (+1)
   \   000000A2   0x2120             MOVS     R1,#+32
   \   000000A4   0x.... 0x....      LDR.W    R0,??DataTable11_36  ;; 0x40004400
   \   000000A8   0x.... 0x....      BL       USART_GetFlagStatus
   \   000000AC   0x2800             CMP      R0,#+0
   \   000000AE   0xD066             BEQ.N    ??USART2_IRQHandler_5
    445            {
    446              u8 skip = 0;
   \   000000B0   0x2400             MOVS     R4,#+0
    447              //USART_ClearFlag(USART2,USART_FLAG_RXNE);
    448              volatile u16 b = USART_ReceiveData(USART2);
   \   000000B2   0x.... 0x....      LDR.W    R0,??DataTable11_36  ;; 0x40004400
   \   000000B6   0x.... 0x....      BL       USART_ReceiveData
   \   000000BA   0xF8AD 0x0000      STRH     R0,[SP, #+0]
    449              u32 curr_time = OS_GetTime_us();
   \   000000BE   0x.... 0x....      BL       OS_GetTime_us
   \   000000C2   0x0005             MOVS     R5,R0
    450              if ( ( b & MDB_MODE_MASK ) || fb.m.rx_size >= MDB_MAX_LEN )
   \   000000C4   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   000000C8   0x05C0             LSLS     R0,R0,#+23
   \   000000CA   0xD404             BMI.N    ??USART2_IRQHandler_6
   \   000000CC   0x....             LDR.N    R0,??DataTable11_2
   \   000000CE   0xF890 0x00AC      LDRB     R0,[R0, #+172]
   \   000000D2   0x2824             CMP      R0,#+36
   \   000000D4   0xDB1F             BLT.N    ??USART2_IRQHandler_7
    451              {
    452                fb.m.rx_size = 0;
   \                     ??USART2_IRQHandler_6: (+1)
   \   000000D6   0x2000             MOVS     R0,#+0
   \   000000D8   0x....             LDR.N    R1,??DataTable11_2
   \   000000DA   0xF881 0x00AC      STRB     R0,[R1, #+172]
    453                memset( fb.m.rx, 0, sizeof(fb.m.rx) );
   \   000000DE   0x2680             MOVS     R6,#+128
   \   000000E0   0x2700             MOVS     R7,#+0
   \   000000E2   0x.... 0x....      LDR.W    R8,??DataTable11_3
   \   000000E6   0x003A             MOVS     R2,R7
   \   000000E8   0x0031             MOVS     R1,R6
   \   000000EA   0x4640             MOV      R0,R8
   \   000000EC   0x.... 0x....      BL       __aeabi_memset
    454                
    455                fb.m.rx_start_time = curr_time;
   \   000000F0   0x....             LDR.N    R0,??DataTable11_2
   \   000000F2   0x6105             STR      R5,[R0, #+16]
    456                fb.m.rx_msg_time = 0;
   \   000000F4   0x2000             MOVS     R0,#+0
   \   000000F6   0x....             LDR.N    R1,??DataTable11_2
   \   000000F8   0x6148             STR      R0,[R1, #+20]
    457                fb.m.rx_last_time = 0;
   \   000000FA   0x2000             MOVS     R0,#+0
   \   000000FC   0x....             LDR.N    R1,??DataTable11_2
   \   000000FE   0x6188             STR      R0,[R1, #+24]
    458                memset(fb.m.rx_times,0,sizeof(fb.m.rx_times));
   \   00000100   0xF05F 0x0890      MOVS     R8,#+144
   \   00000104   0xF05F 0x0900      MOVS     R9,#+0
   \   00000108   0x.... 0x....      LDR.W    R10,??DataTable11_40
   \   0000010C   0x464A             MOV      R2,R9
   \   0000010E   0x4641             MOV      R1,R8
   \   00000110   0x4650             MOV      R0,R10
   \   00000112   0x.... 0x....      BL       __aeabi_memset
    459              }
    460              
    461              if ( fb.m.rx_last_time && curr_time - fb.m.rx_last_time > 2000 )
   \                     ??USART2_IRQHandler_7: (+1)
   \   00000116   0x....             LDR.N    R0,??DataTable11_2
   \   00000118   0x6980             LDR      R0,[R0, #+24]
   \   0000011A   0x2800             CMP      R0,#+0
   \   0000011C   0xD008             BEQ.N    ??USART2_IRQHandler_8
   \   0000011E   0x....             LDR.N    R0,??DataTable11_2
   \   00000120   0x6980             LDR      R0,[R0, #+24]
   \   00000122   0x1A28             SUBS     R0,R5,R0
   \   00000124   0xF5B0 0x6FFA      CMP      R0,#+2000
   \   00000128   0xD902             BLS.N    ??USART2_IRQHandler_8
    462              {
    463                skip = 1;
   \   0000012A   0x2001             MOVS     R0,#+1
   \   0000012C   0x0004             MOVS     R4,R0
   \   0000012E   0xE002             B.N      ??USART2_IRQHandler_9
    464              }
    465              else
    466              {
    467                OS_RetriggerTimer( &t_fbm_msg_end );      
   \                     ??USART2_IRQHandler_8: (+1)
   \   00000130   0x....             LDR.N    R0,??DataTable11_12
   \   00000132   0x.... 0x....      BL       OS_RetriggerTimer
    468              }
    469              
    470              if ( fb.m.rx_size < MDB_MAX_LEN && !skip )
   \                     ??USART2_IRQHandler_9: (+1)
   \   00000136   0x....             LDR.N    R0,??DataTable11_2
   \   00000138   0xF890 0x00AC      LDRB     R0,[R0, #+172]
   \   0000013C   0x2824             CMP      R0,#+36
   \   0000013E   0xDA1C             BGE.N    ??USART2_IRQHandler_10
   \   00000140   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000142   0x2C00             CMP      R4,#+0
   \   00000144   0xD119             BNE.N    ??USART2_IRQHandler_10
    471              {
    472                fb.m.rx_times[ fb.m.rx_size ] = curr_time;
   \   00000146   0x....             LDR.N    R0,??DataTable11_2
   \   00000148   0x....             LDR.N    R1,??DataTable11_2
   \   0000014A   0xF891 0x10AC      LDRB     R1,[R1, #+172]
   \   0000014E   0xEB10 0x0081      ADDS     R0,R0,R1, LSL #+2
   \   00000152   0x61C5             STR      R5,[R0, #+28]
    473                fb.m.rx[ fb.m.rx_size++ ] = b;
   \   00000154   0x....             LDR.N    R0,??DataTable11_2
   \   00000156   0x....             LDR.N    R1,??DataTable11_2
   \   00000158   0xF891 0x10AC      LDRB     R1,[R1, #+172]
   \   0000015C   0xEB10 0x0041      ADDS     R0,R0,R1, LSL #+1
   \   00000160   0xF8BD 0x1000      LDRH     R1,[SP, #+0]
   \   00000164   0xF8A0 0x10AE      STRH     R1,[R0, #+174]
   \   00000168   0x....             LDR.N    R0,??DataTable11_2
   \   0000016A   0xF890 0x00AC      LDRB     R0,[R0, #+172]
   \   0000016E   0x1C40             ADDS     R0,R0,#+1
   \   00000170   0x....             LDR.N    R1,??DataTable11_2
   \   00000172   0xF881 0x00AC      STRB     R0,[R1, #+172]
    474                mdb_evt_m_rx();
   \   00000176   0x.... 0x....      BL       mdb_evt_m_rx
    475              }
    476              
    477              fb.m.rx_last_time = curr_time;
   \                     ??USART2_IRQHandler_10: (+1)
   \   0000017A   0x....             LDR.N    R0,??DataTable11_2
   \   0000017C   0x6185             STR      R5,[R0, #+24]
    478          
    479            }
    480             
    481            //Transmit
    482            if ( USART_GetFlagStatus( USART2, USART_FLAG_TXE ) && ( USART_GetITStatus( USART2, USART_IT_TXE ) == SET ) )
   \                     ??USART2_IRQHandler_5: (+1)
   \   0000017E   0x2180             MOVS     R1,#+128
   \   00000180   0x....             LDR.N    R0,??DataTable11_36  ;; 0x40004400
   \   00000182   0x.... 0x....      BL       USART_GetFlagStatus
   \   00000186   0x2800             CMP      R0,#+0
   \   00000188   0xD038             BEQ.N    ??USART2_IRQHandler_11
   \   0000018A   0xF240 0x7127      MOVW     R1,#+1831
   \   0000018E   0x....             LDR.N    R0,??DataTable11_36  ;; 0x40004400
   \   00000190   0x.... 0x....      BL       USART_GetITStatus
   \   00000194   0x2801             CMP      R0,#+1
   \   00000196   0xD131             BNE.N    ??USART2_IRQHandler_11
    483            {
    484              if( fb.m.tx_size > 0 ) 
   \   00000198   0x....             LDR.N    R0,??DataTable11_2
   \   0000019A   0xF890 0x012E      LDRB     R0,[R0, #+302]
   \   0000019E   0x2800             CMP      R0,#+0
   \   000001A0   0xD01D             BEQ.N    ??USART2_IRQHandler_12
    485              {
    486                volatile u16 b =  fb.m.tx[ fb.m.tx_cnt++ ];
   \   000001A2   0x....             LDR.N    R0,??DataTable11_2
   \   000001A4   0x....             LDR.N    R1,??DataTable11_2
   \   000001A6   0xF891 0x112F      LDRB     R1,[R1, #+303]
   \   000001AA   0xEB10 0x0041      ADDS     R0,R0,R1, LSL #+1
   \   000001AE   0xF8B0 0x0130      LDRH     R0,[R0, #+304]
   \   000001B2   0xF8AD 0x0000      STRH     R0,[SP, #+0]
   \   000001B6   0x....             LDR.N    R0,??DataTable11_2
   \   000001B8   0xF890 0x012F      LDRB     R0,[R0, #+303]
   \   000001BC   0x1C40             ADDS     R0,R0,#+1
   \   000001BE   0x....             LDR.N    R1,??DataTable11_2
   \   000001C0   0xF881 0x012F      STRB     R0,[R1, #+303]
    487                USART_SendData( USART2, b );
   \   000001C4   0xF8BD 0x1000      LDRH     R1,[SP, #+0]
   \   000001C8   0x....             LDR.N    R0,??DataTable11_36  ;; 0x40004400
   \   000001CA   0x.... 0x....      BL       USART_SendData
    488                fb.m.tx_size--;
   \   000001CE   0x....             LDR.N    R0,??DataTable11_2
   \   000001D0   0xF890 0x012E      LDRB     R0,[R0, #+302]
   \   000001D4   0x1E40             SUBS     R0,R0,#+1
   \   000001D6   0x....             LDR.N    R1,??DataTable11_2
   \   000001D8   0xF881 0x012E      STRB     R0,[R1, #+302]
   \   000001DC   0xE00E             B.N      ??USART2_IRQHandler_11
    489              }
    490              else if( fb.m.tx_size == 0 )
   \                     ??USART2_IRQHandler_12: (+1)
   \   000001DE   0x....             LDR.N    R0,??DataTable11_2
   \   000001E0   0xF890 0x012E      LDRB     R0,[R0, #+302]
   \   000001E4   0x2800             CMP      R0,#+0
   \   000001E6   0xD109             BNE.N    ??USART2_IRQHandler_11
    491              {
    492                fb.m.tx_cnt = 0;      
   \   000001E8   0x2000             MOVS     R0,#+0
   \   000001EA   0x....             LDR.N    R1,??DataTable11_2
   \   000001EC   0xF881 0x012F      STRB     R0,[R1, #+303]
    493                USART_ITConfig( USART2, USART_IT_TXE , DISABLE );
   \   000001F0   0x2200             MOVS     R2,#+0
   \   000001F2   0xF240 0x7127      MOVW     R1,#+1831
   \   000001F6   0x....             LDR.N    R0,??DataTable11_36  ;; 0x40004400
   \   000001F8   0x.... 0x....      BL       USART_ITConfig
    494              }  
    495            }
    496          
    497            OS_LeaveNestableInterrupt();
   \                     ??USART2_IRQHandler_11: (+1)
   \   000001FC   0x2080             MOVS     R0,#+128
   \   000001FE   0xF380 0x8811      MSR      BASEPRI,R0
   \   00000202   0xBF00             Nop      
   \   00000204   0xBF00             Nop      
   \   00000206   0x....             LDR.N    R0,??DataTable11_38
   \   00000208   0x7800             LDRB     R0,[R0, #+0]
   \   0000020A   0x1E41             SUBS     R1,R0,#+1
   \   0000020C   0x....             LDR.N    R2,??DataTable11_38
   \   0000020E   0x7011             STRB     R1,[R2, #+0]
   \   00000210   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000212   0x2800             CMP      R0,#+0
   \   00000214   0xD102             BNE.N    ??USART2_IRQHandler_13
   \   00000216   0x2098             MOVS     R0,#+152
   \   00000218   0x.... 0x....      BL       OS_Error
   \                     ??USART2_IRQHandler_13: (+1)
   \   0000021C   0x....             LDR.N    R0,??DataTable11_39
   \   0000021E   0x7800             LDRB     R0,[R0, #+0]
   \   00000220   0x2801             CMP      R0,#+1
   \   00000222   0xD105             BNE.N    ??USART2_IRQHandler_14
   \   00000224   0x....             LDR.N    R0,??DataTable11_39
   \   00000226   0x6840             LDR      R0,[R0, #+4]
   \   00000228   0x2800             CMP      R0,#+0
   \   0000022A   0xD001             BEQ.N    ??USART2_IRQHandler_14
   \   0000022C   0x.... 0x....      BL       OS_SwitchFromInt
   \                     ??USART2_IRQHandler_14: (+1)
   \   00000230   0x....             LDR.N    R0,??DataTable11_39
   \   00000232   0x7800             LDRB     R0,[R0, #+0]
   \   00000234   0x1E40             SUBS     R0,R0,#+1
   \   00000236   0x....             LDR.N    R1,??DataTable11_39
   \   00000238   0x7008             STRB     R0,[R1, #+0]
   \   0000023A   0x2000             MOVS     R0,#+0
   \   0000023C   0xF380 0x8811      MSR      BASEPRI,R0
    498            //OS_LeaveInterrupt();  
    499          }
   \   00000240   0xE8BD 0x87F3      POP      {R0,R1,R4-R10,PC}  ;; return
    500          ////////////////////////////////////////////////////////////////////////////////
    501          /* USART3 Interrupt ----------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
    502          __irq void USART3_IRQHandler(void) {
   \                     USART3_IRQHandler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    503          
    504             OS_EnterNestableInterrupt();
   \   00000002   0x....             LDR.N    R0,??DataTable11_38
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x1C40             ADDS     R0,R0,#+1
   \   00000008   0x....             LDR.N    R1,??DataTable11_38
   \   0000000A   0x7008             STRB     R0,[R1, #+0]
   \   0000000C   0x....             LDR.N    R0,??DataTable11_39
   \   0000000E   0x7800             LDRB     R0,[R0, #+0]
   \   00000010   0x1C40             ADDS     R0,R0,#+1
   \   00000012   0x....             LDR.N    R1,??DataTable11_39
   \   00000014   0x7008             STRB     R0,[R1, #+0]
   \   00000016   0x.... 0x....      BL       OS_AssertCPUInISRMode
    505          
    506             if ( USART_GetFlagStatus( USART3, USART_FLAG_ORE ) ) 
   \   0000001A   0x2108             MOVS     R1,#+8
   \   0000001C   0x....             LDR.N    R0,??DataTable11_41  ;; 0x40004800
   \   0000001E   0x.... 0x....      BL       USART_GetFlagStatus
   \   00000022   0x2800             CMP      R0,#+0
   \   00000024   0xD003             BEQ.N    ??USART3_IRQHandler_0
    507             {// Overrun Error
    508                USART_ClearFlag(USART3,USART_FLAG_ORE);      
   \   00000026   0x2108             MOVS     R1,#+8
   \   00000028   0x....             LDR.N    R0,??DataTable11_41  ;; 0x40004800
   \   0000002A   0x.... 0x....      BL       USART_ClearFlag
    509             }
    510             if ( USART_GetFlagStatus( USART3, USART_FLAG_FE ) ) 
   \                     ??USART3_IRQHandler_0: (+1)
   \   0000002E   0x2102             MOVS     R1,#+2
   \   00000030   0x....             LDR.N    R0,??DataTable11_41  ;; 0x40004800
   \   00000032   0x.... 0x....      BL       USART_GetFlagStatus
   \   00000036   0x2800             CMP      R0,#+0
   \   00000038   0xD003             BEQ.N    ??USART3_IRQHandler_1
    511             {// Framing Error
    512                USART_ClearFlag(USART3,USART_FLAG_FE);      
   \   0000003A   0x2102             MOVS     R1,#+2
   \   0000003C   0x....             LDR.N    R0,??DataTable11_41  ;; 0x40004800
   \   0000003E   0x.... 0x....      BL       USART_ClearFlag
    513             }
    514             if ( USART_GetFlagStatus( USART3, USART_FLAG_NE ) ) 
   \                     ??USART3_IRQHandler_1: (+1)
   \   00000042   0x2104             MOVS     R1,#+4
   \   00000044   0x....             LDR.N    R0,??DataTable11_41  ;; 0x40004800
   \   00000046   0x.... 0x....      BL       USART_GetFlagStatus
   \   0000004A   0x2800             CMP      R0,#+0
   \   0000004C   0xD003             BEQ.N    ??USART3_IRQHandler_2
    515             {// Noise Error
    516                USART_ClearFlag(USART3,USART_FLAG_NE);      
   \   0000004E   0x2104             MOVS     R1,#+4
   \   00000050   0x....             LDR.N    R0,??DataTable11_41  ;; 0x40004800
   \   00000052   0x.... 0x....      BL       USART_ClearFlag
    517             }
    518             if ( USART_GetFlagStatus( USART3, USART_FLAG_PE ) ) 
   \                     ??USART3_IRQHandler_2: (+1)
   \   00000056   0x2101             MOVS     R1,#+1
   \   00000058   0x....             LDR.N    R0,??DataTable11_41  ;; 0x40004800
   \   0000005A   0x.... 0x....      BL       USART_GetFlagStatus
   \   0000005E   0x2800             CMP      R0,#+0
   \   00000060   0xD003             BEQ.N    ??USART3_IRQHandler_3
    519             {// Parity Error
    520                USART_ClearFlag(USART3,USART_FLAG_PE);      
   \   00000062   0x2101             MOVS     R1,#+1
   \   00000064   0x....             LDR.N    R0,??DataTable11_41  ;; 0x40004800
   \   00000066   0x.... 0x....      BL       USART_ClearFlag
    521             }
    522             // Push a new data into the receiver buffer
    523          #if defined DEX
    524            dex_isr(DEX);
    525          #elif defined MDB_SNIFFER
    526            sniffer_isr(MDB_SNIFFER);
   \                     ??USART3_IRQHandler_3: (+1)
   \   0000006A   0x....             LDR.N    R0,??DataTable11_41  ;; 0x40004800
   \   0000006C   0x.... 0x....      BL       sniffer_isr
    527          #else
    528             if ( USART_GetFlagStatus( USART3, USART_FLAG_RXNE ) ) 
    529             {
    530                // Push a new data into the receiver buffer
    531                volatile u8 b = USART_ReceiveData(USART3);
    532             }
    533          #endif     
    534             
    535             OS_LeaveNestableInterrupt();
   \   00000070   0x2080             MOVS     R0,#+128
   \   00000072   0xF380 0x8811      MSR      BASEPRI,R0
   \   00000076   0xBF00             Nop      
   \   00000078   0xBF00             Nop      
   \   0000007A   0x....             LDR.N    R0,??DataTable11_38
   \   0000007C   0x7800             LDRB     R0,[R0, #+0]
   \   0000007E   0x1E41             SUBS     R1,R0,#+1
   \   00000080   0x....             LDR.N    R2,??DataTable11_38
   \   00000082   0x7011             STRB     R1,[R2, #+0]
   \   00000084   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000086   0x2800             CMP      R0,#+0
   \   00000088   0xD102             BNE.N    ??USART3_IRQHandler_4
   \   0000008A   0x2098             MOVS     R0,#+152
   \   0000008C   0x.... 0x....      BL       OS_Error
   \                     ??USART3_IRQHandler_4: (+1)
   \   00000090   0x....             LDR.N    R0,??DataTable11_39
   \   00000092   0x7800             LDRB     R0,[R0, #+0]
   \   00000094   0x2801             CMP      R0,#+1
   \   00000096   0xD105             BNE.N    ??USART3_IRQHandler_5
   \   00000098   0x....             LDR.N    R0,??DataTable11_39
   \   0000009A   0x6840             LDR      R0,[R0, #+4]
   \   0000009C   0x2800             CMP      R0,#+0
   \   0000009E   0xD001             BEQ.N    ??USART3_IRQHandler_5
   \   000000A0   0x.... 0x....      BL       OS_SwitchFromInt
   \                     ??USART3_IRQHandler_5: (+1)
   \   000000A4   0x....             LDR.N    R0,??DataTable11_39
   \   000000A6   0x7800             LDRB     R0,[R0, #+0]
   \   000000A8   0x1E40             SUBS     R0,R0,#+1
   \   000000AA   0x....             LDR.N    R1,??DataTable11_39
   \   000000AC   0x7008             STRB     R0,[R1, #+0]
   \   000000AE   0x2000             MOVS     R0,#+0
   \   000000B0   0xF380 0x8811      MSR      BASEPRI,R0
    536          }
   \   000000B4   0xBD01             POP      {R0,PC}          ;; return
    537          ////////////////////////////////////////////////////////////////////////////////
    538          ////////////////////////////////////////////////////////////////////////////////
    539          ////////////////////////////////////////////////////////////////////////////////
    540          

   \                                 In section .text, align 2, keep-with-next
    541          void USART3_Timeout( void )
    542          {
   \                     USART3_Timeout: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    543          #if defined DEX
    544             OS_SignalEvent( EVT_DEX_DRD, &TCB3 );
    545          #elif defined MDB_SNIFFER
    546             OS_SignalEvent( EVT_SNIFF_RX_MSG, &TCB3 );
   \   00000002   0x....             LDR.N    R1,??DataTable11_42
   \   00000004   0xF44F 0x7080      MOV      R0,#+256
   \   00000008   0x.... 0x....      BL       OS_SignalEvent
    547          #endif  
    548          }
   \   0000000C   0xBD01             POP      {R0,PC}          ;; return
    549          

   \                                 In section .text, align 2, keep-with-next
    550          void Task_USART3(void) 
    551          {
   \                     Task_USART3: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    552          #if defined ( MDB_SNIFFER ) || defined ( DEX )
    553            OS_TASK_EVENT evt;
    554          #endif
    555            
    556             /* Configure USART3 Tx (PB.10) as alternate function push-pull */
    557             GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10;
   \   00000002   0xF44F 0x6080      MOV      R0,#+1024
   \   00000006   0x....             LDR.N    R1,??DataTable11_9
   \   00000008   0x8008             STRH     R0,[R1, #+0]
    558             GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
   \   0000000A   0x2003             MOVS     R0,#+3
   \   0000000C   0x....             LDR.N    R1,??DataTable11_9
   \   0000000E   0x7088             STRB     R0,[R1, #+2]
    559             GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
   \   00000010   0x2018             MOVS     R0,#+24
   \   00000012   0x....             LDR.N    R1,??DataTable11_9
   \   00000014   0x70C8             STRB     R0,[R1, #+3]
    560             GPIO_Init(GPIOB, &GPIO_InitStructure);
   \   00000016   0x....             LDR.N    R1,??DataTable11_9
   \   00000018   0x....             LDR.N    R0,??DataTable11_43  ;; 0x40010c00
   \   0000001A   0x.... 0x....      BL       GPIO_Init
    561             
    562             
    563             USART_InitStructure.USART_BaudRate = 230400;
   \   0000001E   0xF45F 0x3061      MOVS     R0,#+230400
   \   00000022   0x....             LDR.N    R1,??DataTable11_37
   \   00000024   0x6008             STR      R0,[R1, #+0]
    564             USART_InitStructure.USART_WordLength = USART_WordLength_8b;
   \   00000026   0x2000             MOVS     R0,#+0
   \   00000028   0x....             LDR.N    R1,??DataTable11_37
   \   0000002A   0x8088             STRH     R0,[R1, #+4]
    565             USART_InitStructure.USART_StopBits = USART_StopBits_1;
   \   0000002C   0x2000             MOVS     R0,#+0
   \   0000002E   0x....             LDR.N    R1,??DataTable11_37
   \   00000030   0x80C8             STRH     R0,[R1, #+6]
    566             USART_InitStructure.USART_Parity = USART_Parity_No;
   \   00000032   0x2000             MOVS     R0,#+0
   \   00000034   0x....             LDR.N    R1,??DataTable11_37
   \   00000036   0x8108             STRH     R0,[R1, #+8]
    567             USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
   \   00000038   0x2000             MOVS     R0,#+0
   \   0000003A   0x....             LDR.N    R1,??DataTable11_37
   \   0000003C   0x8188             STRH     R0,[R1, #+12]
    568             USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
   \   0000003E   0x200C             MOVS     R0,#+12
   \   00000040   0x....             LDR.N    R1,??DataTable11_37
   \   00000042   0x8148             STRH     R0,[R1, #+10]
    569             USART_Init(USART3, &USART_InitStructure);
   \   00000044   0x....             LDR.N    R1,??DataTable11_37
   \   00000046   0x....             LDR.N    R0,??DataTable11_41  ;; 0x40004800
   \   00000048   0x.... 0x....      BL       USART_Init
    570          
    571             USART_ITConfig(USART3, USART_IT_RXNE, ENABLE);
   \   0000004C   0x2201             MOVS     R2,#+1
   \   0000004E   0xF240 0x5125      MOVW     R1,#+1317
   \   00000052   0x....             LDR.N    R0,??DataTable11_41  ;; 0x40004800
   \   00000054   0x.... 0x....      BL       USART_ITConfig
    572          #if defined (MDB_SNIFFER) || defined (DEX)
    573             USART_ITConfig(USART3, USART_IT_TXE, ENABLE);
   \   00000058   0x2201             MOVS     R2,#+1
   \   0000005A   0xF240 0x7127      MOVW     R1,#+1831
   \   0000005E   0x....             LDR.N    R0,??DataTable11_41  ;; 0x40004800
   \   00000060   0x.... 0x....      BL       USART_ITConfig
    574          #endif   
    575             USART_Cmd(USART3, ENABLE);
   \   00000064   0x2101             MOVS     R1,#+1
   \   00000066   0x....             LDR.N    R0,??DataTable11_41  ;; 0x40004800
   \   00000068   0x.... 0x....      BL       USART_Cmd
    576          
    577             OS_ARM_ISRSetPrio( USART3_IRQn + 16, 140 );               // Set lowest Priority, ALL BITS set
   \   0000006C   0x218C             MOVS     R1,#+140
   \   0000006E   0x2037             MOVS     R0,#+55
   \   00000070   0x.... 0x....      BL       OS_ARM_ISRSetPrio
    578             OS_ARM_EnableISR( USART3_IRQn + 16 );
   \   00000074   0x2037             MOVS     R0,#+55
   \   00000076   0x.... 0x....      BL       OS_ARM_EnableISR
    579          
    580          #if defined ( DEX )
    581             OS_CreateTimer( &dex.timer, USART3_Timeout, 1000 );  
    582             dex_init();
    583             //dex.state = dexState_Initial;
    584             //read_dex();  
    585          #elif defined ( MDB_SNIFFER )
    586             OS_CreateTimer( &sniffer.timer, USART3_Timeout, 2 );    
   \   0000007A   0x2202             MOVS     R2,#+2
   \   0000007C   0x....             LDR.N    R1,??DataTable11_44
   \   0000007E   0x....             LDR.N    R0,??DataTable11_5
   \   00000080   0x.... 0x....      BL       OS_CreateTimer
    587          #endif
    588            
    589             OS_Delay (500);
   \   00000084   0xF44F 0x70FA      MOV      R0,#+500
   \   00000088   0x.... 0x....      BL       OS_Delay
    590          
    591             while (1) 
    592             {
    593          #if defined ( DEX )
    594                evt = OS_WaitEvent( EVT_DEX_DRD | EVT_DEX_START | EVT_DEX_ABORT );    
    595                if ( evt & EVT_DEX_DRD ) 
    596                {
    597                   read_dex();
    598                }
    599          
    600                if ( evt & EVT_DEX_START ) 
    601                {
    602                   start_dex_query();
    603                }
    604          
    605                if ( evt & EVT_DEX_ABORT ) 
    606                {
    607                   abort_dex_query();
    608                }
    609          #elif defined ( MDB_SNIFFER )
    610                evt = OS_WaitEvent( EVT_SNIFF_RX_MSG );
   \                     ??Task_USART3_0: (+1)
   \   0000008C   0xF44F 0x7080      MOV      R0,#+256
   \   00000090   0x.... 0x....      BL       OS_WaitEvent
   \   00000094   0x0004             MOVS     R4,R0
    611                if ( evt & EVT_SNIFF_RX_MSG ) 
   \   00000096   0x05E0             LSLS     R0,R4,#+23
   \   00000098   0xD5F8             BPL.N    ??Task_USART3_0
    612                {
    613                   sniffer_rx_msg();
   \   0000009A   0x.... 0x....      BL       sniffer_rx_msg
   \   0000009E   0xE7F5             B.N      ??Task_USART3_0
    614                }    
    615          #else
    616                OS_Delay (500);    
    617          #endif
    618             }
    619          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   0x40011000         DC32     0x40011000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_1:
   \   00000000   0x........         DC32     timer1000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_2:
   \   00000000   0x........         DC32     fb

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_3:
   \   00000000   0x........         DC32     fb+0xAE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_4:
   \   00000000   0x........         DC32     sniffer+0x13C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_5:
   \   00000000   0x........         DC32     sniffer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_6:
   \   00000000   0x........         DC32     TCB2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_7:
   \   00000000   0x........         DC32     fb+0x1BE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_8:
   \   00000000   0x........         DC32     sniffer+0x18C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_9:
   \   00000000   0x........         DC32     GPIO_InitStructure

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_10:
   \   00000000   0x........         DC32     timer1000_cb

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_11:
   \   00000000   0x........         DC32     fbm_msg_end

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_12:
   \   00000000   0x........         DC32     t_fbm_msg_end

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_13:
   \   00000000   0x........         DC32     fbs_msg_end

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_14:
   \   00000000   0x........         DC32     t_fbs_msg_end

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_15:
   \   00000000   0x........         DC32     fb_evt_q_buf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_16:
   \   00000000   0x........         DC32     fb_evt_q

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_17:
   \   00000000   0x........         DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_18:
   \   00000000   0x........         DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_19:
   \   00000000   0x........         DC32     verMinor

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_20:
   \   00000000   0x........         DC32     verMajor

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_21:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_22:
   \   00000000   0x........         DC32     sw_uart

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_23:
   \   00000000   0x........         DC32     bt_rx_msg_handler

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_24:
   \   00000000   0x........         DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_25:
   \   00000000   0x........         DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_26:
   \   00000000   0x001E000C         DC32     0x1e000c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_27:
   \   00000000   0x........         DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_28:
   \   00000000   0x........         DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_29:
   \   00000000   0x........         DC32     ?_7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_30:
   \   00000000   0x........         DC32     ?_8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_31:
   \   00000000   0x........         DC32     ?_9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_32:
   \   00000000   0x........         DC32     ?_10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_33:
   \   00000000   0x........         DC32     ?_11

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_34:
   \   00000000   0x40010800         DC32     0x40010800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_35:
   \   00000000   0x40013800         DC32     0x40013800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_36:
   \   00000000   0x40004400         DC32     0x40004400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_37:
   \   00000000   0x........         DC32     USART_InitStructure

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_38:
   \   00000000   0x........         DC32     OS_InInt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_39:
   \   00000000   0x........         DC32     OS_Global

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_40:
   \   00000000   0x........         DC32     fb+0x1C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_41:
   \   00000000   0x40004800         DC32     0x40004800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_42:
   \   00000000   0x........         DC32     TCB3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_43:
   \   00000000   0x40010C00         DC32     0x40010c00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_44:
   \   00000000   0x........         DC32     USART3_Timeout

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x62 0x75          DC8 "build: %u.%u %s %s\015\012"
   \              0x69 0x6C    
   \              0x64 0x3A    
   \              0x20 0x25    
   \              0x75 0x2E    
   \              0x25 0x75    
   \              0x20 0x25    
   \              0x73 0x20    
   \              0x25 0x73    
   \              0x0D 0x0A    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x4E 0x6F          DC8 "Nov 15 2016"
   \              0x76 0x20    
   \              0x31 0x35    
   \              0x20 0x32    
   \              0x30 0x31    
   \              0x36 0x00    

   \                                 In section .rodata, align 4
   \                     ?_2:
   \   00000000   0x31 0x34          DC8 "14:56:09"
   \              0x3A 0x35    
   \              0x36 0x3A    
   \              0x30 0x39    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_3:
   \   00000000   0x41 0x54          DC8 "AT\015\012"
   \              0x0D 0x0A    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_4:
   \   00000000   0x41 0x54          DC8 "AT+NAME=VENDICONT\015\012"
   \              0x2B 0x4E    
   \              0x41 0x4D    
   \              0x45 0x3D    
   \              0x56 0x45    
   \              0x4E 0x44    
   \              0x49 0x43    
   \              0x4F 0x4E    
   \              0x54 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_5:
   \   00000000   0x66 0x62          DC8 "fb_emu_evt=%d\015\012"
   \              0x5F 0x65    
   \              0x6D 0x75    
   \              0x5F 0x65    
   \              0x76 0x74    
   \              0x3D 0x25    
   \              0x64 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_6:
   \   00000000   0x66 0x62          DC8 "fb: door open\015\012"
   \              0x3A 0x20    
   \              0x64 0x6F    
   \              0x6F 0x72    
   \              0x20 0x6F    
   \              0x70 0x65    
   \              0x6E 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_7:
   \   00000000   0x66 0x62          DC8 "fb: door close\015\012"
   \              0x3A 0x20    
   \              0x64 0x6F    
   \              0x6F 0x72    
   \              0x20 0x63    
   \              0x6C 0x6F    
   \              0x73 0x65    
   \              0x0D 0x0A    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_8:
   \   00000000   0x56 0x45          DC8 "VEND,OK,%d\012"
   \              0x4E 0x44    
   \              0x2C 0x4F    
   \              0x4B 0x2C    
   \              0x25 0x64    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_9:
   \   00000000   0x56 0x45          DC8 "VEND,CANCEL\012"
   \              0x4E 0x44    
   \              0x2C 0x43    
   \              0x41 0x4E    
   \              0x43 0x45    
   \              0x4C 0x0A    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_10:
   \   00000000   0x56 0x45          DC8 "VEND,FAIL\012"
   \              0x4E 0x44    
   \              0x2C 0x46    
   \              0x41 0x49    
   \              0x4C 0x0A    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_11:
   \   00000000   0x53 0x45          DC8 "SESSION COMPLETE\012"
   \              0x53 0x53    
   \              0x49 0x4F    
   \              0x4E 0x20    
   \              0x43 0x4F    
   \              0x4D 0x50    
   \              0x4C 0x45    
   \              0x54 0x45    
   \              0x0A 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   Task_USART3
         8   -> GPIO_Init
         8   -> OS_ARM_EnableISR
         8   -> OS_ARM_ISRSetPrio
         8   -> OS_CreateTimer
         8   -> OS_Delay
         8   -> OS_WaitEvent
         8   -> USART_Cmd
         8   -> USART_ITConfig
         8   -> USART_Init
         8   -> sniffer_rx_msg
     104   Task_vending
       104   -> GPIO_Init
       104   -> GPIO_ResetBits
       104   -> GPIO_SetBits
       104   -> OS_ARM_EnableISR
       104   -> OS_ARM_ISRSetPrio
       104   -> OS_CreateTimer
       104   -> OS_Delay
       104   -> OS_Q_Create
       104   -> OS_Q_Put
       104   -> OS_RetriggerTimer
       104   -> OS_StartTimer
       104   -> OS_WaitEvent
       104   -> __aeabi_memcpy
       104   -> __aeabi_memset
       104   -> enableLogging
       104   -> init_fb
       104   -> log1
       104   -> sniffer_m_rx
       104   -> sniffer_s_rx
       104   -> sprintf
       104   -> strlen
       104   -> sw_uart_reset_buffers
       104   -> sw_uart_tx
      16   USART1_IRQHandler
        16   -> OS_AssertCPUInISRMode
        16   -> OS_Error
        16   -> OS_GetTime_us
        16   -> OS_RetriggerTimer
        16   -> OS_SwitchFromInt
        16   -> USART_ClearFlag
        16   -> USART_GetFlagStatus
        16   -> USART_GetITStatus
        16   -> USART_ITConfig
        16   -> USART_ReceiveData
        16   -> USART_SendData
      40   USART2_IRQHandler
        40   -> OS_AssertCPUInISRMode
        40   -> OS_Error
        40   -> OS_GetTime_us
        40   -> OS_RetriggerTimer
        40   -> OS_SwitchFromInt
        40   -> USART_ClearFlag
        40   -> USART_GetFlagStatus
        40   -> USART_GetITStatus
        40   -> USART_ITConfig
        40   -> USART_ReceiveData
        40   -> USART_SendData
        40   -> __aeabi_memset
        40   -> mdb_evt_m_rx
       8   USART3_IRQHandler
         8   -> OS_AssertCPUInISRMode
         8   -> OS_Error
         8   -> OS_SwitchFromInt
         8   -> USART_ClearFlag
         8   -> USART_GetFlagStatus
         8   -> sniffer_isr
       8   USART3_Timeout
         8   -> OS_SignalEvent
      24   fb_m_tx
        24   -> USART_ITConfig
        24   -> __aeabi_memcpy
      24   fb_s_tx
        24   -> USART_ITConfig
        24   -> __aeabi_memmove
      16   fbm_msg_end
        16   -> OS_GetTime_us
        16   -> OS_SignalEvent
        16   -> __aeabi_memmove
      24   fbs_msg_end
        24   -> OS_SignalEvent
        24   -> __aeabi_memmove
        24   -> __aeabi_memset
       8   init_fb
         8   -> GPIO_Init
         8   -> USART_Cmd
         8   -> USART_DeInit
         8   -> USART_ITConfig
         8   -> USART_Init
       8   timer1000_cb
         8   -> GPIO_ReadOutputData
         8   -> GPIO_ResetBits
         8   -> GPIO_SetBits
         8   -> OS_RetriggerTimer


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable11
       4  ??DataTable11_1
       4  ??DataTable11_10
       4  ??DataTable11_11
       4  ??DataTable11_12
       4  ??DataTable11_13
       4  ??DataTable11_14
       4  ??DataTable11_15
       4  ??DataTable11_16
       4  ??DataTable11_17
       4  ??DataTable11_18
       4  ??DataTable11_19
       4  ??DataTable11_2
       4  ??DataTable11_20
       4  ??DataTable11_21
       4  ??DataTable11_22
       4  ??DataTable11_23
       4  ??DataTable11_24
       4  ??DataTable11_25
       4  ??DataTable11_26
       4  ??DataTable11_27
       4  ??DataTable11_28
       4  ??DataTable11_29
       4  ??DataTable11_3
       4  ??DataTable11_30
       4  ??DataTable11_31
       4  ??DataTable11_32
       4  ??DataTable11_33
       4  ??DataTable11_34
       4  ??DataTable11_35
       4  ??DataTable11_36
       4  ??DataTable11_37
       4  ??DataTable11_38
       4  ??DataTable11_39
       4  ??DataTable11_4
       4  ??DataTable11_40
       4  ??DataTable11_41
       4  ??DataTable11_42
       4  ??DataTable11_43
       4  ??DataTable11_44
       4  ??DataTable11_5
       4  ??DataTable11_6
       4  ??DataTable11_7
       4  ??DataTable11_8
       4  ??DataTable11_9
      24  ?_0
      12  ?_1
      12  ?_10
      20  ?_11
      12  ?_2
       8  ?_3
      20  ?_4
      16  ?_5
      16  ?_6
      20  ?_7
      12  ?_8
      16  ?_9
       4  GPIO_InitStructure
     160  Task_USART3
     776  Task_vending
     520  USART1_IRQHandler
     580  USART2_IRQHandler
     182  USART3_IRQHandler
      14  USART3_Timeout
      16  USART_InitStructure
     720  fb
      40  fb_evt_q
      64  fb_evt_q_buf
      74  fb_m_tx
      74  fb_s_tx
      82  fbm_msg_end
     112  fbs_msg_end
     276  init_fb
      20  t_fbm_msg_end
      20  t_fbs_msg_end
      20  timer1000
      46  timer1000_cb
       1  verMajor
       1  verMinor

 
   904 bytes in section .bss
   190 bytes in section .rodata
 3 076 bytes in section .text
 
 3 076 bytes of CODE  memory
   190 bytes of CONST memory
   904 bytes of DATA  memory

Errors: none
Warnings: none

###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.2.10312/W32 for ARM       09/Nov/2016  14:40:04
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  C:\ilya\vendicont\arm-periphery\Application\utils.c
#    Command line =  
#        C:\ilya\vendicont\arm-periphery\Application\utils.c -D STM32F10X_HD -D
#        USE_STDPERIPH_DRIVER -D DEBUG=1 -D _FLASH_PROG -lCN
#        C:\ilya\vendicont\arm-periphery\build\iar\Output\Debug\List --remarks
#        -o C:\ilya\vendicont\arm-periphery\build\iar\Output\Debug\Obj --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M3 -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\ilya\vendicont\arm-periphery\build\iar\..\..\ -I
#        C:\ilya\vendicont\arm-periphery\build\iar\..\..\Inc\ -I
#        C:\ilya\vendicont\arm-periphery\build\iar\..\..\library\CMSIS\Include\
#        -I
#        C:\ilya\vendicont\arm-periphery\build\iar\..\..\library\STM32F10x_StdPeriph_Driver\inc\
#        -I C:\ilya\vendicont\arm-periphery\build\iar\..\..\rtos\embos\iar\inc\
#        -I
#        C:\ilya\vendicont\arm-periphery\build\iar\..\..\Application\p-types\
#        -On --use_c++_inline --require_prototypes
#    List file    =  
#        C:\ilya\vendicont\arm-periphery\build\iar\Output\Debug\List\utils.lst
#    Object file  =  
#        C:\ilya\vendicont\arm-periphery\build\iar\Output\Debug\Obj\utils.o
#
###############################################################################

C:\ilya\vendicont\arm-periphery\Application\utils.c
      1          #include "stm32f10x.h"
      2          #include "RTOS.h"

   \                                 In section .text, align 2
   \   __intrinsic __nounwind __interwork __softfp char *strstr(char const *, char const *)
   \                     strstr: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0029             MOVS     R1,R5
   \   00000008   0x0020             MOVS     R0,R4
   \   0000000A   0x.... 0x....      BL       __iar_Strstr
   \   0000000E   0xBD32             POP      {R1,R4,R5,PC}    ;; return
      3          #include "BSP.h"
      4          #include "stdio.h"
      5          #include "log.h"
      6          #if defined LCD
      7          #include "lcd_2x16.h"
      8          #endif
      9          #include "utils.h"
     10          

   \                                 In section .text, align 2, keep-with-next
     11          void short_date(char const *date, char *p)
     12          { 
   \                     short_date: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB088             SUB      SP,SP,#+32
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
     13              char buf[ 16 ];
     14              int month, day, year;
     15              static const char month_names[] = "JanFebMarAprMayJunJulAugSepOctNovDec";
     16              sscanf(date, "%s %d %d", buf, &day, &year);
   \   00000008   0xA801             ADD      R0,SP,#+4
   \   0000000A   0x9000             STR      R0,[SP, #+0]
   \   0000000C   0xAB02             ADD      R3,SP,#+8
   \   0000000E   0xAA03             ADD      R2,SP,#+12
   \   00000010   0x....             LDR.N    R1,??DataTable1
   \   00000012   0x0020             MOVS     R0,R4
   \   00000014   0x.... 0x....      BL       sscanf
     17              month = (strstr(month_names, buf)-month_names)/3+1;
   \   00000018   0xA903             ADD      R1,SP,#+12
   \   0000001A   0x....             LDR.N    R0,??DataTable1_1
   \   0000001C   0x.... 0x....      BL       strstr
   \   00000020   0x....             LDR.N    R1,??DataTable1_1
   \   00000022   0x1A40             SUBS     R0,R0,R1
   \   00000024   0x2103             MOVS     R1,#+3
   \   00000026   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000002A   0x1C40             ADDS     R0,R0,#+1
   \   0000002C   0x0006             MOVS     R6,R0
     18              sprintf( p, "%d%02d%02d", year, month, day);
   \   0000002E   0x9802             LDR      R0,[SP, #+8]
   \   00000030   0x9000             STR      R0,[SP, #+0]
   \   00000032   0x0033             MOVS     R3,R6
   \   00000034   0x9A01             LDR      R2,[SP, #+4]
   \   00000036   0x....             LDR.N    R1,??DataTable1_2
   \   00000038   0x0028             MOVS     R0,R5
   \   0000003A   0x.... 0x....      BL       sprintf
     19          }
   \   0000003E   0xB008             ADD      SP,SP,#+32
   \   00000040   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .rodata, align 4
   \                     ??month_names:
   \   00000000   0x4A 0x61          DC8 "JanFebMarAprMayJunJulAugSepOctNovDec"
   \              0x6E 0x46    
   \              0x65 0x62    
   \              0x4D 0x61    
   \              0x72 0x41    
   \              0x70 0x72    
   \              0x4D 0x61    
   \              0x79 0x4A    
   \              0x75 0x6E    
   \              0x4A 0x75    
   \              0x6C 0x41    
   \              0x75 0x67    
   \              0x53 0x65    
   \              0x70 0x4F    
   \              0x63 0x74    
   \              0x4E 0x6F    
   \              0x76 0x44    
   \              0x65 0x63    
   \              0x00         
   \   00000025   0x00 0x00          DC8 0, 0, 0
   \              0x00         
     20          

   \                                 In section .text, align 2, keep-with-next
     21          void build_dt(char* p)
     22          {
   \                     build_dt: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB08A             SUB      SP,SP,#+40
   \   00000004   0x0004             MOVS     R4,R0
     23            char buf[ 16 ];
     24            int hour, min, sec;  
     25            short_date( __DATE__, buf );
   \   00000006   0xA905             ADD      R1,SP,#+20
   \   00000008   0x....             LDR.N    R0,??DataTable1_3
   \   0000000A   0x.... 0x....      BL       short_date
     26            sscanf(__TIME__, "%d:%d:%d", &hour, &min, &sec);  
   \   0000000E   0xA802             ADD      R0,SP,#+8
   \   00000010   0x9000             STR      R0,[SP, #+0]
   \   00000012   0xAB03             ADD      R3,SP,#+12
   \   00000014   0xAA04             ADD      R2,SP,#+16
   \   00000016   0x....             LDR.N    R1,??DataTable1_4
   \   00000018   0x....             LDR.N    R0,??DataTable1_5
   \   0000001A   0x.... 0x....      BL       sscanf
     27            sprintf( p, "%s%02d%02d%02d",buf, hour, min, sec);
   \   0000001E   0x9802             LDR      R0,[SP, #+8]
   \   00000020   0x9001             STR      R0,[SP, #+4]
   \   00000022   0x9803             LDR      R0,[SP, #+12]
   \   00000024   0x9000             STR      R0,[SP, #+0]
   \   00000026   0x9B04             LDR      R3,[SP, #+16]
   \   00000028   0xAA05             ADD      R2,SP,#+20
   \   0000002A   0x....             LDR.N    R1,??DataTable1_6
   \   0000002C   0x0020             MOVS     R0,R4
   \   0000002E   0x.... 0x....      BL       sprintf
     28          }
   \   00000032   0xB00A             ADD      SP,SP,#+40
   \   00000034   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     ??month_names

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x........         DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x........         DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x........         DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x........         DC32     ?_5

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x25 0x73          DC8 "%s %d %d"
   \              0x20 0x25    
   \              0x64 0x20    
   \              0x25 0x64    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x25 0x64          DC8 "%d%02d%02d"
   \              0x25 0x30    
   \              0x32 0x64    
   \              0x25 0x30    
   \              0x32 0x64    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_2:
   \   00000000   0x4E 0x6F          DC8 "Nov  9 2016"
   \              0x76 0x20    
   \              0x20 0x39    
   \              0x20 0x32    
   \              0x30 0x31    
   \              0x36 0x00    

   \                                 In section .rodata, align 4
   \                     ?_3:
   \   00000000   0x31 0x34          DC8 "14:40:04"
   \              0x3A 0x34    
   \              0x30 0x3A    
   \              0x30 0x34    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_4:
   \   00000000   0x25 0x64          DC8 "%d:%d:%d"
   \              0x3A 0x25    
   \              0x64 0x3A    
   \              0x25 0x64    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_5:
   \   00000000   0x25 0x73          DC8 "%s%02d%02d%02d"
   \              0x25 0x30    
   \              0x32 0x64    
   \              0x25 0x30    
   \              0x32 0x64    
   \              0x25 0x30    
   \              0x32 0x64    
   \              0x00         
   \   0000000F   0x00               DC8 0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      48   build_dt
        48   -> short_date
        48   -> sprintf
        48   -> sscanf
      48   short_date
        48   -> sprintf
        48   -> sscanf
        48   -> strstr
      16   strstr
        16   -> __iar_Strstr


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
      12  ?_0
      12  ?_1
      12  ?_2
      12  ?_3
      12  ?_4
      16  ?_5
      54  build_dt
      40  month_names
      66  short_date
      16  strstr

 
 116 bytes in section .rodata
 164 bytes in section .text
 
 148 bytes of CODE  memory (+ 16 bytes shared)
 116 bytes of CONST memory

Errors: none
Warnings: none

###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.2.10312/W32 for ARM       12/Sep/2016  16:26:13
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  C:\ilya\vendicont\arm-periphery\Application\one_wire.c
#    Command line =  
#        C:\ilya\vendicont\arm-periphery\Application\one_wire.c -D STM32F10X_HD
#        -D USE_STDPERIPH_DRIVER -D NDEBUG -D _FLASH_PROG -lCN
#        C:\ilya\vendicont\arm-periphery\build\iar\Output\Release\List
#        --remarks -o
#        C:\ilya\vendicont\arm-periphery\build\iar\Output\Release\Obj
#        --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\ilya\vendicont\arm-periphery\build\iar\..\..\ -I
#        C:\ilya\vendicont\arm-periphery\build\iar\..\..\library\CMSIS\Include\
#        -I
#        C:\ilya\vendicont\arm-periphery\build\iar\..\..\library\STM32F10x_StdPeriph_Driver\inc\
#        -I C:\ilya\vendicont\arm-periphery\build\iar\..\..\rtos\embos\iar\inc\
#        -I C:\ilya\vendicont\arm-periphery\build\iar\..\..\Inc\ -I
#        C:\ilya\vendicont\arm-periphery\build\iar\..\..\Application\p-types\
#        -Ohs --use_c++_inline --require_prototypes
#    List file    =  
#        C:\ilya\vendicont\arm-periphery\build\iar\Output\Release\List\one_wire.lst
#    Object file  =  
#        C:\ilya\vendicont\arm-periphery\build\iar\Output\Release\Obj\one_wire.o
#
###############################################################################

C:\ilya\vendicont\arm-periphery\Application\one_wire.c
      1          #include "stm32f10x.h"
      2          #include "one_wire.h"
      3          #include "RTOS.h"
      4          
      5          #define DELAY_SCALE 2
      6          

   \                                 In section .text, align 2, keep-with-next
      7          void Onewire_Enable_GPIO_Port( void ) {
      8          //RCC_APB2PeriphClockCmd( RCC_APB2Periph_GPIOB, ENABLE );
      9          }
   \                     Onewire_Enable_GPIO_Port: (+1)
   \   00000000   0x4770             BX       LR               ;; return
     10          

   \                                 In section .text, align 2, keep-with-next
     11          void Onewire_OUT_PULL_UP( void ) {
   \                     Onewire_OUT_PULL_UP: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB081             SUB      SP,SP,#+4
     12          	GPIO_InitTypeDef GPIO_InitStruct;
     13          	GPIO_InitStruct.GPIO_Pin = GPIO_Pin_9;
   \   00000004   0xF44F 0x7000      MOV      R0,#+512
   \   00000008   0xF8AD 0x0000      STRH     R0,[SP, #+0]
     14          	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_Out_PP;
     15          	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_10MHz;
     16          	GPIO_Init(GPIOB, &GPIO_InitStruct);
   \   0000000C   0x4669             MOV      R1,SP
   \   0000000E   0x2010             MOVS     R0,#+16
   \   00000010   0xF88D 0x0003      STRB     R0,[SP, #+3]
   \   00000014   0x2001             MOVS     R0,#+1
   \   00000016   0xF88D 0x0002      STRB     R0,[SP, #+2]
   \   0000001A   0x....             LDR.N    R0,??DataTable6  ;; 0x40010c00
   \   0000001C   0x.... 0x....      BL       GPIO_Init
     17          }
   \   00000020   0xB001             ADD      SP,SP,#+4
   \   00000022   0xBD00             POP      {PC}             ;; return
     18          

   \                                 In section .text, align 2, keep-with-next
     19          void Onewire_OUT_FLOATING( void ) {
   \                     Onewire_OUT_FLOATING: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB081             SUB      SP,SP,#+4
     20          	GPIO_InitTypeDef GPIO_InitStruct;
     21          	GPIO_InitStruct.GPIO_Pin = GPIO_Pin_9;
   \   00000004   0xF44F 0x7000      MOV      R0,#+512
   \   00000008   0xF8AD 0x0000      STRH     R0,[SP, #+0]
     22          	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_Out_OD;
     23          	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_10MHz;
     24          	GPIO_Init(GPIOB, &GPIO_InitStruct);
   \   0000000C   0x4669             MOV      R1,SP
   \   0000000E   0x2014             MOVS     R0,#+20
   \   00000010   0xF88D 0x0003      STRB     R0,[SP, #+3]
   \   00000014   0x2001             MOVS     R0,#+1
   \   00000016   0xF88D 0x0002      STRB     R0,[SP, #+2]
   \   0000001A   0x....             LDR.N    R0,??DataTable6  ;; 0x40010c00
   \   0000001C   0x.... 0x....      BL       GPIO_Init
     25          }
   \   00000020   0xB001             ADD      SP,SP,#+4
   \   00000022   0xBD00             POP      {PC}             ;; return
     26          

   \                                 In section .text, align 2, keep-with-next
     27          void Onewire_IN_FLOATING( void ) {
   \                     Onewire_IN_FLOATING: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB081             SUB      SP,SP,#+4
     28          	GPIO_InitTypeDef GPIO_InitStruct;
     29          	GPIO_InitStruct.GPIO_Pin = GPIO_Pin_9;
   \   00000004   0xF44F 0x7000      MOV      R0,#+512
   \   00000008   0xF8AD 0x0000      STRH     R0,[SP, #+0]
     30          	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_IN_FLOATING;
     31          	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_10MHz;
     32          	GPIO_Init(GPIOB, &GPIO_InitStruct);
   \   0000000C   0x4669             MOV      R1,SP
   \   0000000E   0x2004             MOVS     R0,#+4
   \   00000010   0xF88D 0x0003      STRB     R0,[SP, #+3]
   \   00000014   0x2001             MOVS     R0,#+1
   \   00000016   0xF88D 0x0002      STRB     R0,[SP, #+2]
   \   0000001A   0x....             LDR.N    R0,??DataTable6  ;; 0x40010c00
   \   0000001C   0x.... 0x....      BL       GPIO_Init
     33          }
   \   00000020   0xB001             ADD      SP,SP,#+4
   \   00000022   0xBD00             POP      {PC}             ;; return
     34          

   \                                 In section .text, align 2, keep-with-next
     35          void Onewire_IN_PULL_UP(void) {
   \                     Onewire_IN_PULL_UP: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB081             SUB      SP,SP,#+4
     36          	GPIO_InitTypeDef GPIO_InitStruct;
     37          	GPIO_InitStruct.GPIO_Pin = GPIO_Pin_9;
   \   00000004   0xF44F 0x7000      MOV      R0,#+512
   \   00000008   0xF8AD 0x0000      STRH     R0,[SP, #+0]
     38          	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_IPU;
     39          	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_10MHz;
     40          	GPIO_Init(GPIOB, &GPIO_InitStruct);
   \   0000000C   0x4669             MOV      R1,SP
   \   0000000E   0x2048             MOVS     R0,#+72
   \   00000010   0xF88D 0x0003      STRB     R0,[SP, #+3]
   \   00000014   0x2001             MOVS     R0,#+1
   \   00000016   0xF88D 0x0002      STRB     R0,[SP, #+2]
   \   0000001A   0x....             LDR.N    R0,??DataTable6  ;; 0x40010c00
   \   0000001C   0x.... 0x....      BL       GPIO_Init
     41          }
   \   00000020   0xB001             ADD      SP,SP,#+4
   \   00000022   0xBD00             POP      {PC}             ;; return
     42          
     43          #if 0
     44          void delay_us(u16 us)
     45          {
     46          	us=15*us;
     47          	while(--us);
     48          }
     49          #else
     50          #define delay_us(x) OS_Delayus(x * DELAY_SCALE)
     51          #endif
     52          
     53          /* Reset */

   \                                 In section .text, align 2, keep-with-next
     54          void resetOnewire( void ) {
   \                     resetOnewire: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
     55          	Onewire_OUT_PULL_UP();
   \   00000002   0x2010             MOVS     R0,#+16
   \   00000004   0xB081             SUB      SP,SP,#+4
   \   00000006   0xF44F 0x7400      MOV      R4,#+512
   \   0000000A   0xF88D 0x0003      STRB     R0,[SP, #+3]
   \   0000000E   0x2001             MOVS     R0,#+1
   \   00000010   0xF88D 0x0002      STRB     R0,[SP, #+2]
   \   00000014   0xF8AD 0x4000      STRH     R4,[SP, #+0]
   \   00000018   0x4669             MOV      R1,SP
   \   0000001A   0x....             LDR.N    R5,??DataTable6  ;; 0x40010c00
   \   0000001C   0x4628             MOV      R0,R5
   \   0000001E   0x.... 0x....      BL       GPIO_Init
     56          	CLR_DQ();
   \   00000022   0x4621             MOV      R1,R4
   \   00000024   0x4628             MOV      R0,R5
   \   00000026   0x.... 0x....      BL       GPIO_ResetBits
     57          	delay_us(450);
   \   0000002A   0xF44F 0x7061      MOV      R0,#+900
   \   0000002E   0x.... 0x....      BL       OS_Delayus
     58          	SET_DQ();
   \   00000032   0x4621             MOV      R1,R4
   \   00000034   0x4628             MOV      R0,R5
   \   00000036   0x.... 0x....      BL       GPIO_SetBits
     59          	delay_us(60);
   \   0000003A   0x2078             MOVS     R0,#+120
   \   0000003C   0x.... 0x....      BL       OS_Delayus
     60          	Onewire_IN_PULL_UP(); 
   \   00000040   0x2048             MOVS     R0,#+72
   \   00000042   0xF88D 0x0003      STRB     R0,[SP, #+3]
   \   00000046   0xF8AD 0x4000      STRH     R4,[SP, #+0]
   \   0000004A   0x2001             MOVS     R0,#+1
   \   0000004C   0xF88D 0x0002      STRB     R0,[SP, #+2]
   \   00000050   0x4669             MOV      R1,SP
   \   00000052   0x4628             MOV      R0,R5
   \   00000054   0x.... 0x....      BL       GPIO_Init
     61          	delay_us(10);
   \   00000058   0x2014             MOVS     R0,#+20
   \   0000005A   0x.... 0x....      BL       OS_Delayus
     62          	while(!(GET_DQ()));
   \                     ??resetOnewire_0: (+1)
   \   0000005E   0x4621             MOV      R1,R4
   \   00000060   0x4628             MOV      R0,R5
   \   00000062   0x.... 0x....      BL       GPIO_ReadInputDataBit
   \   00000066   0x2800             CMP      R0,#+0
   \   00000068   0xD0F9             BEQ.N    ??resetOnewire_0
     63          	Onewire_OUT_PULL_UP();
   \   0000006A   0x2010             MOVS     R0,#+16
   \   0000006C   0xF88D 0x0003      STRB     R0,[SP, #+3]
   \   00000070   0xF8AD 0x4000      STRH     R4,[SP, #+0]
   \   00000074   0x2001             MOVS     R0,#+1
   \   00000076   0xF88D 0x0002      STRB     R0,[SP, #+2]
   \   0000007A   0x4669             MOV      R1,SP
   \   0000007C   0x4628             MOV      R0,R5
   \   0000007E   0x.... 0x....      BL       GPIO_Init
     64          	SET_DQ();
   \   00000082   0x4621             MOV      R1,R4
   \   00000084   0x4628             MOV      R0,R5
   \   00000086   0x.... 0x....      BL       GPIO_SetBits
     65          }
   \   0000008A   0xB001             ADD      SP,SP,#+4
   \   0000008C   0xBD30             POP      {R4,R5,PC}       ;; return
     66          
     67          /* Read */

   \                                 In section .text, align 2, keep-with-next
     68          u8 rOnewire( void ) {
   \                     rOnewire: (+1)
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB081             SUB      SP,SP,#+4
     69             u8 data = 0, i = 0;
   \   00000004   0x2700             MOVS     R7,#+0
     70             for( i = 0 ; i < 8 ; i++ ) {
   \   00000006   0x2408             MOVS     R4,#+8
   \   00000008   0x....             LDR.N    R5,??DataTable6  ;; 0x40010c00
   \   0000000A   0xF44F 0x7600      MOV      R6,#+512
     71                Onewire_OUT_PULL_UP();
   \                     ??rOnewire_0: (+1)
   \   0000000E   0x2010             MOVS     R0,#+16
   \   00000010   0xF88D 0x0003      STRB     R0,[SP, #+3]
   \   00000014   0xF8AD 0x6000      STRH     R6,[SP, #+0]
   \   00000018   0x2001             MOVS     R0,#+1
   \   0000001A   0xF88D 0x0002      STRB     R0,[SP, #+2]
   \   0000001E   0x4669             MOV      R1,SP
   \   00000020   0x4628             MOV      R0,R5
   \   00000022   0x.... 0x....      BL       GPIO_Init
     72                CLR_DQ();
   \   00000026   0x4631             MOV      R1,R6
   \   00000028   0x4628             MOV      R0,R5
   \   0000002A   0x.... 0x....      BL       GPIO_ResetBits
     73                data = data >> 1;
     74                SET_DQ();
   \   0000002E   0x4631             MOV      R1,R6
   \   00000030   0x4628             MOV      R0,R5
   \   00000032   0x.... 0x....      BL       GPIO_SetBits
     75                Onewire_IN_PULL_UP();
   \   00000036   0x2048             MOVS     R0,#+72
   \   00000038   0xF88D 0x0003      STRB     R0,[SP, #+3]
   \   0000003C   0xF8AD 0x6000      STRH     R6,[SP, #+0]
   \   00000040   0x2001             MOVS     R0,#+1
   \   00000042   0xF88D 0x0002      STRB     R0,[SP, #+2]
   \   00000046   0x4669             MOV      R1,SP
   \   00000048   0x4628             MOV      R0,R5
   \   0000004A   0x.... 0x....      BL       GPIO_Init
     76                delay_us(8);
   \   0000004E   0x2010             MOVS     R0,#+16
   \   00000050   0x.... 0x....      BL       OS_Delayus
     77                if ( GET_DQ() )
   \   00000054   0x4631             MOV      R1,R6
   \   00000056   0x4628             MOV      R0,R5
   \   00000058   0x.... 0x....      BL       GPIO_ReadInputDataBit
   \   0000005C   0x087F             LSRS     R7,R7,#+1
   \   0000005E   0xB108             CBZ.N    R0,??rOnewire_1
     78                   data |= 0x80;
   \   00000060   0xF047 0x0780      ORR      R7,R7,#0x80
     79                Onewire_OUT_PULL_UP();
   \                     ??rOnewire_1: (+1)
   \   00000064   0x2010             MOVS     R0,#+16
   \   00000066   0xF88D 0x0003      STRB     R0,[SP, #+3]
   \   0000006A   0xF8AD 0x6000      STRH     R6,[SP, #+0]
   \   0000006E   0x2001             MOVS     R0,#+1
   \   00000070   0xF88D 0x0002      STRB     R0,[SP, #+2]
   \   00000074   0x4669             MOV      R1,SP
   \   00000076   0x4628             MOV      R0,R5
   \   00000078   0x.... 0x....      BL       GPIO_Init
     80                SET_DQ();
   \   0000007C   0x4631             MOV      R1,R6
   \   0000007E   0x4628             MOV      R0,R5
   \   00000080   0x.... 0x....      BL       GPIO_SetBits
     81                delay_us(60);
   \   00000084   0x2078             MOVS     R0,#+120
   \   00000086   0x.... 0x....      BL       OS_Delayus
     82             }
   \   0000008A   0x1E64             SUBS     R4,R4,#+1
   \   0000008C   0xD1BF             BNE.N    ??rOnewire_0
     83             return(data);
   \   0000008E   0x4638             MOV      R0,R7
   \   00000090   0xB001             ADD      SP,SP,#+4
   \   00000092   0xBDF0             POP      {R4-R7,PC}       ;; return
     84          }
     85          
     86          /* Write */

   \                                 In section .text, align 2, keep-with-next
     87          void wOnewire(u8 data) {
   \                     wOnewire: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB081             SUB      SP,SP,#+4
   \   00000004   0x4604             MOV      R4,R0
     88             u8 i = 0;
     89             Onewire_OUT_PULL_UP();
   \   00000006   0xF44F 0x7000      MOV      R0,#+512
   \   0000000A   0xF8AD 0x0000      STRH     R0,[SP, #+0]
   \   0000000E   0x2010             MOVS     R0,#+16
   \   00000010   0xF88D 0x0003      STRB     R0,[SP, #+3]
   \   00000014   0x2001             MOVS     R0,#+1
   \   00000016   0xF88D 0x0002      STRB     R0,[SP, #+2]
   \   0000001A   0x4669             MOV      R1,SP
   \   0000001C   0x....             LDR.N    R5,??DataTable6  ;; 0x40010c00
   \   0000001E   0x4628             MOV      R0,R5
   \   00000020   0x.... 0x....      BL       GPIO_Init
     90             SET_DQ();
   \   00000024   0xF44F 0x7100      MOV      R1,#+512
   \   00000028   0x4628             MOV      R0,R5
   \   0000002A   0x.... 0x....      BL       GPIO_SetBits
     91             delay_us(16);
   \   0000002E   0x2020             MOVS     R0,#+32
   \   00000030   0x.... 0x....      BL       OS_Delayus
     92             for ( i = 0; i < 8; i++ ) {
     93                CLR_DQ();
   \   00000034   0xF44F 0x7100      MOV      R1,#+512
   \   00000038   0x4628             MOV      R0,R5
   \   0000003A   0x.... 0x....      BL       GPIO_ResetBits
     94                if ( data & 0x01 ) {
   \   0000003E   0x07E0             LSLS     R0,R4,#+31
   \   00000040   0xF44F 0x7100      MOV      R1,#+512
   \   00000044   0x4628             MOV      R0,R5
   \   00000046   0xD502             BPL.N    ??wOnewire_0
     95                   SET_DQ();
   \   00000048   0x.... 0x....      BL       GPIO_SetBits
   \   0000004C   0xE001             B.N      ??wOnewire_1
     96                } else {
     97                   CLR_DQ();
   \                     ??wOnewire_0: (+1)
   \   0000004E   0x.... 0x....      BL       GPIO_ResetBits
     98                }
     99                data = data >> 1;
    100                delay_us(40);  //65
   \                     ??wOnewire_1: (+1)
   \   00000052   0x2050             MOVS     R0,#+80
   \   00000054   0x.... 0x....      BL       OS_Delayus
    101                SET_DQ();
   \   00000058   0xF44F 0x7100      MOV      R1,#+512
   \   0000005C   0x4628             MOV      R0,R5
   \   0000005E   0x.... 0x....      BL       GPIO_SetBits
   \   00000062   0xF44F 0x7100      MOV      R1,#+512
   \   00000066   0x4628             MOV      R0,R5
   \   00000068   0x.... 0x....      BL       GPIO_ResetBits
   \   0000006C   0x0864             LSRS     R4,R4,#+1
   \   0000006E   0x07E0             LSLS     R0,R4,#+31
   \   00000070   0xF44F 0x7100      MOV      R1,#+512
   \   00000074   0x4628             MOV      R0,R5
   \   00000076   0xD502             BPL.N    ??wOnewire_2
   \   00000078   0x.... 0x....      BL       GPIO_SetBits
   \   0000007C   0xE001             B.N      ??wOnewire_3
   \                     ??wOnewire_2: (+1)
   \   0000007E   0x.... 0x....      BL       GPIO_ResetBits
   \                     ??wOnewire_3: (+1)
   \   00000082   0x2050             MOVS     R0,#+80
   \   00000084   0x.... 0x....      BL       OS_Delayus
   \   00000088   0xF44F 0x7100      MOV      R1,#+512
   \   0000008C   0x4628             MOV      R0,R5
   \   0000008E   0x.... 0x....      BL       GPIO_SetBits
   \   00000092   0xF44F 0x7100      MOV      R1,#+512
   \   00000096   0x4628             MOV      R0,R5
   \   00000098   0x.... 0x....      BL       GPIO_ResetBits
   \   0000009C   0x0864             LSRS     R4,R4,#+1
   \   0000009E   0x07E0             LSLS     R0,R4,#+31
   \   000000A0   0xF44F 0x7100      MOV      R1,#+512
   \   000000A4   0x4628             MOV      R0,R5
   \   000000A6   0xD502             BPL.N    ??wOnewire_4
   \   000000A8   0x.... 0x....      BL       GPIO_SetBits
   \   000000AC   0xE001             B.N      ??wOnewire_5
   \                     ??wOnewire_4: (+1)
   \   000000AE   0x.... 0x....      BL       GPIO_ResetBits
   \                     ??wOnewire_5: (+1)
   \   000000B2   0x2050             MOVS     R0,#+80
   \   000000B4   0x.... 0x....      BL       OS_Delayus
   \   000000B8   0xF44F 0x7100      MOV      R1,#+512
   \   000000BC   0x4628             MOV      R0,R5
   \   000000BE   0x.... 0x....      BL       GPIO_SetBits
   \   000000C2   0xF44F 0x7100      MOV      R1,#+512
   \   000000C6   0x4628             MOV      R0,R5
   \   000000C8   0x.... 0x....      BL       GPIO_ResetBits
   \   000000CC   0x0864             LSRS     R4,R4,#+1
   \   000000CE   0x07E0             LSLS     R0,R4,#+31
   \   000000D0   0xF44F 0x7100      MOV      R1,#+512
   \   000000D4   0x4628             MOV      R0,R5
   \   000000D6   0xD502             BPL.N    ??wOnewire_6
   \   000000D8   0x.... 0x....      BL       GPIO_SetBits
   \   000000DC   0xE001             B.N      ??wOnewire_7
   \                     ??wOnewire_6: (+1)
   \   000000DE   0x.... 0x....      BL       GPIO_ResetBits
   \                     ??wOnewire_7: (+1)
   \   000000E2   0x2050             MOVS     R0,#+80
   \   000000E4   0x.... 0x....      BL       OS_Delayus
   \   000000E8   0xF44F 0x7100      MOV      R1,#+512
   \   000000EC   0x4628             MOV      R0,R5
   \   000000EE   0x.... 0x....      BL       GPIO_SetBits
   \   000000F2   0xF44F 0x7100      MOV      R1,#+512
   \   000000F6   0x4628             MOV      R0,R5
   \   000000F8   0x.... 0x....      BL       GPIO_ResetBits
   \   000000FC   0x0864             LSRS     R4,R4,#+1
   \   000000FE   0x07E0             LSLS     R0,R4,#+31
   \   00000100   0xF44F 0x7100      MOV      R1,#+512
   \   00000104   0x4628             MOV      R0,R5
   \   00000106   0xD502             BPL.N    ??wOnewire_8
   \   00000108   0x.... 0x....      BL       GPIO_SetBits
   \   0000010C   0xE001             B.N      ??wOnewire_9
   \                     ??wOnewire_8: (+1)
   \   0000010E   0x.... 0x....      BL       GPIO_ResetBits
   \                     ??wOnewire_9: (+1)
   \   00000112   0x2050             MOVS     R0,#+80
   \   00000114   0x.... 0x....      BL       OS_Delayus
   \   00000118   0xF44F 0x7100      MOV      R1,#+512
   \   0000011C   0x4628             MOV      R0,R5
   \   0000011E   0x.... 0x....      BL       GPIO_SetBits
   \   00000122   0xF44F 0x7100      MOV      R1,#+512
   \   00000126   0x4628             MOV      R0,R5
   \   00000128   0x.... 0x....      BL       GPIO_ResetBits
   \   0000012C   0x0864             LSRS     R4,R4,#+1
   \   0000012E   0x07E0             LSLS     R0,R4,#+31
   \   00000130   0xF44F 0x7100      MOV      R1,#+512
   \   00000134   0x4628             MOV      R0,R5
   \   00000136   0xD502             BPL.N    ??wOnewire_10
   \   00000138   0x.... 0x....      BL       GPIO_SetBits
   \   0000013C   0xE001             B.N      ??wOnewire_11
   \                     ??wOnewire_10: (+1)
   \   0000013E   0x.... 0x....      BL       GPIO_ResetBits
   \                     ??wOnewire_11: (+1)
   \   00000142   0x2050             MOVS     R0,#+80
   \   00000144   0x.... 0x....      BL       OS_Delayus
   \   00000148   0xF44F 0x7100      MOV      R1,#+512
   \   0000014C   0x4628             MOV      R0,R5
   \   0000014E   0x.... 0x....      BL       GPIO_SetBits
   \   00000152   0xF44F 0x7100      MOV      R1,#+512
   \   00000156   0x4628             MOV      R0,R5
   \   00000158   0x.... 0x....      BL       GPIO_ResetBits
   \   0000015C   0x0864             LSRS     R4,R4,#+1
   \   0000015E   0x07E0             LSLS     R0,R4,#+31
   \   00000160   0xF44F 0x7100      MOV      R1,#+512
   \   00000164   0x4628             MOV      R0,R5
   \   00000166   0xD502             BPL.N    ??wOnewire_12
   \   00000168   0x.... 0x....      BL       GPIO_SetBits
   \   0000016C   0xE001             B.N      ??wOnewire_13
   \                     ??wOnewire_12: (+1)
   \   0000016E   0x.... 0x....      BL       GPIO_ResetBits
   \                     ??wOnewire_13: (+1)
   \   00000172   0x2050             MOVS     R0,#+80
   \   00000174   0x.... 0x....      BL       OS_Delayus
   \   00000178   0xF44F 0x7100      MOV      R1,#+512
   \   0000017C   0x4628             MOV      R0,R5
   \   0000017E   0x.... 0x....      BL       GPIO_SetBits
   \   00000182   0xF44F 0x7100      MOV      R1,#+512
   \   00000186   0x4628             MOV      R0,R5
   \   00000188   0x.... 0x....      BL       GPIO_ResetBits
   \   0000018C   0x07A0             LSLS     R0,R4,#+30
   \   0000018E   0xF44F 0x7100      MOV      R1,#+512
   \   00000192   0x4628             MOV      R0,R5
   \   00000194   0xD502             BPL.N    ??wOnewire_14
   \   00000196   0x.... 0x....      BL       GPIO_SetBits
   \   0000019A   0xE001             B.N      ??wOnewire_15
   \                     ??wOnewire_14: (+1)
   \   0000019C   0x.... 0x....      BL       GPIO_ResetBits
   \                     ??wOnewire_15: (+1)
   \   000001A0   0x2050             MOVS     R0,#+80
   \   000001A2   0x.... 0x....      BL       OS_Delayus
   \   000001A6   0xF44F 0x7100      MOV      R1,#+512
   \   000001AA   0x4628             MOV      R0,R5
   \   000001AC   0x.... 0x....      BL       GPIO_SetBits
    102             }
    103          }
   \   000001B0   0xB001             ADD      SP,SP,#+4
   \   000001B2   0xBD30             POP      {R4,R5,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0x40010C00         DC32     0x40010c00

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   Onewire_Enable_GPIO_Port
       8   Onewire_IN_FLOATING
         8   -> GPIO_Init
       8   Onewire_IN_PULL_UP
         8   -> GPIO_Init
       8   Onewire_OUT_FLOATING
         8   -> GPIO_Init
       8   Onewire_OUT_PULL_UP
         8   -> GPIO_Init
      24   rOnewire
        24   -> GPIO_Init
        24   -> GPIO_ReadInputDataBit
        24   -> GPIO_ResetBits
        24   -> GPIO_SetBits
        24   -> OS_Delayus
      16   resetOnewire
        16   -> GPIO_Init
        16   -> GPIO_ReadInputDataBit
        16   -> GPIO_ResetBits
        16   -> GPIO_SetBits
        16   -> OS_Delayus
      16   wOnewire
        16   -> GPIO_Init
        16   -> GPIO_ResetBits
        16   -> GPIO_SetBits
        16   -> OS_Delayus


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable6
       2  Onewire_Enable_GPIO_Port
      36  Onewire_IN_FLOATING
      36  Onewire_IN_PULL_UP
      36  Onewire_OUT_FLOATING
      36  Onewire_OUT_PULL_UP
     148  rOnewire
     142  resetOnewire
     436  wOnewire

 
 876 bytes in section .text
 
 876 bytes of CODE memory

Errors: none
Warnings: none
